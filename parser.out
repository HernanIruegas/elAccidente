Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
Rule 2     GENERATE_GOTO_MAIN -> empty
Rule 3     FILL_GOTO_MAIN -> empty
Rule 4     PROGRAM_A -> VARS PROGRAM_A
Rule 5     PROGRAM_A -> METHOD PROGRAM_B
Rule 6     PROGRAM_A -> empty
Rule 7     PROGRAM_B -> METHOD PROGRAM_B
Rule 8     PROGRAM_B -> empty
Rule 9     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 10    VARS_A -> id assign VARCTE_AUX_VARS SIMPLE
Rule 11    VARS_A -> id SAVE_VAR SIMPLE
Rule 12    VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
Rule 13    VARS_A -> empty
Rule 14    VARS_B -> VARS
Rule 15    VARS_B -> empty
Rule 16    SIMPLE -> comma VARS_A
Rule 17    SIMPLE -> empty
Rule 18    LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
Rule 19    LIST -> empty
Rule 20    LIST_A -> comma VARS_A
Rule 21    LIST_A -> empty
Rule 22    VARCTE_AUX_VARS -> id ISLIST
Rule 23    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 24    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 25    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 26    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 27    BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR
Rule 28    BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR
Rule 29    VALIDATE_NAME_ARRAY -> empty
Rule 30    ACUMULATE_R -> empty
Rule 31    CALCULATE_ARRAY -> empty
Rule 32    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 33    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 34    EXPLOG_A -> and EXPLOG
Rule 35    EXPLOG_A -> or EXPLOG
Rule 36    EXPLOG_A -> empty
Rule 37    EXPRESSION -> EXP
Rule 38    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 39    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 40    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 41    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 42    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 43    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 44    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 45    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 46    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 47    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 48    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 49    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 50    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 51    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 52    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 53    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 54    FACTOR -> VARCONSTAUX
Rule 55    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 56    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 57    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 58    TYPE -> int SAVE_TYPE
Rule 59    TYPE -> float SAVE_TYPE
Rule 60    TYPE -> string SAVE_TYPE
Rule 61    TYPE -> bool SAVE_TYPE
Rule 62    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 63    BLOCK_A -> STATEMENT BLOCK_A
Rule 64    BLOCK_A -> empty
Rule 65    STATEMENT -> ASSIGNMENT
Rule 66    STATEMENT -> CONDITION
Rule 67    STATEMENT -> WRITE
Rule 68    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 69    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 70    STATEMENT -> METHODCALL
Rule 71    STATEMENT -> READ
Rule 72    STATEMENT -> STATMETHODS
Rule 73    STATEMENT -> RETURN
Rule 74    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 75    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 76    READ_A -> comma
Rule 77    READ_A -> empty
Rule 78    ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
Rule 79    ISLIST -> empty SOLVE_OFFSETS
Rule 80    VALIDATE_INDEX -> empty
Rule 81    SOLVE_OFFSETS -> empty
Rule 82    TYPEMETHOD -> TYPE
Rule 83    TYPEMETHOD -> void SAVE_TYPE
Rule 84    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 85    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 86    CONDITION_A -> empty
Rule 87    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 88    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 89    WRITE_A -> empty
Rule 90    VARCTE -> id ISLIST
Rule 91    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 92    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 93    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 94    VARCTE -> BOOLEAN
Rule 95    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 96    METHOD_A -> PARAMS
Rule 97    METHOD_A -> empty
Rule 98    PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 99    PARAMS_A -> comma PARAMS
Rule 100   PARAMS_A -> empty
Rule 101   PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 102   POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 103   METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 104   METHODCALL_A -> comma EXP
Rule 105   METHODCALL_A -> empty
Rule 106   RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon
Rule 107   GENERATE_QUAD_RETURN -> empty
Rule 108   BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT
Rule 109   BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT
Rule 110   STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 111   STATMETHODS -> LASSO
Rule 112   STATMETHODS -> RIDGE
Rule 113   STATMETHODS -> K_MEANS
Rule 114   STATMETHODS -> MINI_BATCH_MEANS
Rule 115   STATMETHODS -> TIME_SERIES_SPLIT
Rule 116   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 117   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 118   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 119   STATMETHODS -> MEAN
Rule 120   STATMETHODS -> MODE
Rule 121   STATMETHODS -> MEDIAN
Rule 122   STATMETHODS -> PROBABILITY
Rule 123   STATMETHODS -> FREQUENCY
Rule 124   STATMETHODS -> VARIANCE
Rule 125   STATMETHODS -> STANDARD_DEVIATION
Rule 126   STATMETHODS -> SKEWNESS
Rule 127   STATMETHODS -> KURTOSI
Rule 128   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 129   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 130   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 131   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 132   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 133   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 134   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 135   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 136   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 137   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 138   MEAN_A -> comma id MEAN_A
Rule 139   MEAN_A -> empty
Rule 140   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 141   MODE_A -> comma id MODE_A
Rule 142   MODE_A -> empty
Rule 143   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 144   MEDIAN_A -> comma id MEDIAN_A
Rule 145   MEDIAN_A -> empty
Rule 146   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 147   PROBABILITY_A -> comma id PROBABILITY_A
Rule 148   PROBABILITY_A -> empty
Rule 149   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 150   FREQUENCY_A -> comma id FREQUENCY_A
Rule 151   FREQUENCY_A -> empty
Rule 152   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 153   VARIANCE_A -> comma id VARIANCE_A
Rule 154   VARIANCE_A -> empty
Rule 155   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 156   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 157   STANDARD_DEVIATION_A -> empty
Rule 158   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 159   SKEWNESS_A -> comma id SKEWNESS_A
Rule 160   SKEWNESS_A -> empty
Rule 161   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 162   KURTOSI_A -> comma id KURTOSI_A
Rule 163   KURTOSI_A -> empty
Rule 164   empty -> <empty>
Rule 165   START_FUNCTION -> empty
Rule 166   SAVE_TYPE -> empty
Rule 167   SAVE_VAR -> empty
Rule 168   SAVE_ASSIGNED_VAR -> empty
Rule 169   SAVE_PARAM -> empty
Rule 170   INCREMENT_PARAM_COUNTER -> empty
Rule 171   SAVE_COUNTER_PARAM -> empty
Rule 172   SAVE_COUNTER_QUAD -> empty
Rule 173   END_PROCEDURE -> empty
Rule 174   SAVE_PARAM_TYPE -> empty
Rule 175   VALIDATE_FUNCTION_NAME -> empty
Rule 176   ERA -> empty
Rule 177   VALIDATE_PARAMETER -> empty
Rule 178   VALIDATE_METHOD_CALL -> empty
Rule 179   PUSH_STACK_OPERANDS -> empty
Rule 180   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 181   PUSH_STACK_OPERATORS -> empty
Rule 182   POP_STACK_OPERATORS -> empty
Rule 183   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 184   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 185   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 186   SOLVE_OPERATION_LOGIC -> empty
Rule 187   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 188   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 189   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 190   GENERATE_GOTO_CONDITIONAL -> empty
Rule 191   PUSH_STACK_JUMPS -> empty
Rule 192   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 193   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 194   GENERATE_QUAD_PRINT -> empty
Rule 195   PRINTQUADS -> empty

Terminals, with rules where they appear

FALSE                : 27 108
TRUE                 : 28 109
and                  : 34
assign               : 10 74
bool                 : 61
colon                : 9
comma                : 16 20 76 88 99 104 128 128 128 128 128 129 129 129 129 129 129 129 129 129 129 129 129 130 130 130 130 130 130 130 130 130 131 131 131 131 131 131 131 131 131 131 132 132 132 132 132 132 132 132 132 132 132 133 134 135 136 138 141 144 147 150 153 156 159 162
cte_f                : 24 57 92
cte_i                : 12 18 23 56 91
cte_str              : 25 93
divide               : 52
do                   : 102
else                 : 85
equals               : 43
error                : 
float                : 59 129
freq                 : 149
func                 : 95
globalFunc           : 1
greater              : 39
greaterEquals        : 41
id                   : 10 11 12 22 55 74 90 95 98 103 128 128 129 129 130 130 134 134 135 135 136 136 137 138 140 141 143 144 146 147 149 150 152 153 155 156 158 159 161 162
if                   : 84
int                  : 58
kmeans               : 131
kurt                 : 161
lCurlyBracket        : 62
lParenthesis         : 53 75 84 87 95 101 102 103 128 129 130 131 132 133 134 135 136 137 140 143 146 149 152 155 158 161
lSqrBracket          : 12 18 78
las                  : 129
lessThan             : 40
lessThanEquals       : 42
mbm                  : 132
mean                 : 137
mean_abs_err         : 134
mean_sqr_err         : 135
median               : 143
median_abs_err       : 136
minus                : 48
mode                 : 140
not                  : 33
notEquals            : 44
ols                  : 128
or                   : 35
plus                 : 47
print                : 87
prob                 : 146
program              : 1
rCurlyBracket        : 62
rParenthesis         : 53 75 84 87 95 101 102 103 128 129 130 131 132 133 134 135 136 137 140 143 146 149 152 155 158 161
rSqrBracket          : 12 18 78
return               : 106
rid                  : 130
scan                 : 75
semicolon            : 1 9 74 87 103 106 128 129 130 131 132 133 134 135 136 137 140 143 146 149 152 155 158 161
skew                 : 158
start                : 1
stddev               : 155
string               : 60 129 130 131 131 131 132
times                : 51
tseries              : 133
var                  : 9
variance             : 152
void                 : 1 1 83
while                : 101 102

Nonterminals, with rules where they appear

ACUMULATE_R          : 12 18
ASSIGNMENT           : 65
BLOCK                : 1 84 85 95 101 102
BLOCK_A              : 62 63
BOOLEAN              : 94 128 128 128 129 129 129 129 129 129 130 130 130 131 132 132
BOOLEAN_AUX_VARS     : 26
CALCULATE_ARRAY      : 12
CONDITION            : 66
CONDITION_A          : 84
END_PROCEDURE        : 95
ERA                  : 103
EXP                  : 37 38 38 47 48 78 103 104
EXPLOG               : 34 35 53 74 84 101 102 106
EXPLOG_A             : 32 33
EXPRESSION           : 32 33 87 88
EXPRESSION_A         : 38
EXP_A                : 46
FACTOR               : 49 50
FILL_GOTO_MAIN       : 1
FREQUENCY            : 123
FREQUENCY_A          : 149 150
GENERATE_GOTOF_CONDITIONAL : 84 101
GENERATE_GOTO_CONDITIONAL : 85
GENERATE_GOTO_MAIN   : 1
GENERATE_QUAD_PRINT  : 87 88
GENERATE_QUAD_RETURN : 106
INCREMENT_PARAM_COUNTER : 98
ISLIST               : 22 55 74 78 90
KURTOSI              : 127
KURTOSI_A            : 161 162
K_MEANS              : 113
LASSO                : 111
LIST                 : 12 18
LIST_A               : 12
MEAN                 : 119
MEAN_A               : 137 138
MEAN_ABSOLUTE_ERROR  : 116
MEAN_SQUARED_ERROR   : 117
MEDIAN               : 121
MEDIAN_A             : 143 144
MEDIAN_ABSOLUTE_ERROR : 118
METHOD               : 5 7
METHODCALL           : 70
METHODCALL_A         : 103
METHOD_A             : 95
MINI_BATCH_MEANS     : 114
MODE                 : 120
MODE_A               : 140 141
ORDINARY_LEAST_SQUARES : 110
PARAMS               : 96 99
PARAMS_A             : 98
POP_STACK_OPERATORS  : 53
POST_CONDITIONAL_LOOP : 69
PRE_CONDITIONAL_LOOP : 68
PRINTQUADS           : 1
PROBABILITY          : 122
PROBABILITY_A        : 146 147
PROGRAM              : 0
PROGRAM_A            : 1 4
PROGRAM_B            : 5 7
PUSH_STACK_JUMPS     : 101 102
PUSH_STACK_OPERANDS  : 55 74
PUSH_STACK_OPERANDS_CONSTANT : 23 24 25 56 57 91 92 93 108 109
PUSH_STACK_OPERATORS : 39 40 41 42 43 44 47 48 51 52 53 74
READ                 : 71
READ_A               : 75
RETURN               : 73
RIDGE                : 112
SAVE_ASSIGNED_VAR    : 23 24 25 27 28
SAVE_COUNTER_PARAM   : 95
SAVE_COUNTER_QUAD    : 95
SAVE_PARAM           : 98
SAVE_PARAM_TYPE      : 98
SAVE_TYPE            : 1 1 58 59 60 61 83
SAVE_VAR             : 11
SIMPLE               : 10 11
SKEWNESS             : 126
SKEWNESS_A           : 158 159
SOLVE_OFFSETS        : 79
SOLVE_OPERATION_ASSIGNMENT : 74
SOLVE_OPERATION_CONDITIONAL : 84
SOLVE_OPERATION_LOGIC : 32 33
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 102
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 101
SOLVE_OPERATION_RELATIONSHIP : 38
SOLVE_OPERATION_SUM_MINUS : 45 46
SOLVE_OPERATION_TIMES_DIVIDE : 49 50
STANDARD_DEVIATION   : 125
STANDARD_DEVIATION_A : 155 156
START_FUNCTION       : 1 1 95
STATEMENT            : 63
STATMETHODS          : 72
TERM                 : 45 46 51 52
TERM_A               : 50
TIME_SERIES_SPLIT    : 115
TYPE                 : 9 82 98
TYPEMETHOD           : 95
VALIDATE_FUNCTION_NAME : 103
VALIDATE_INDEX       : 78
VALIDATE_METHOD_CALL : 103
VALIDATE_NAME_ARRAY  : 12
VALIDATE_PARAMETER   : 103
VARCONSTAUX          : 54 128 129 129 129 130 130 130 130 131 131 131 131 131 131 131 132 132 132 132 132 132 132 132 132 133 133
VARCTE               : 75
VARCTE_AUX_VARS      : 10
VARIANCE             : 124
VARIANCE_A           : 152 153
VARS                 : 4 14
VARS_A               : 9 16 20
VARS_B               : 9
WRITE                : 67
WRITE_A              : 87 88
empty                : 2 3 6 8 13 15 17 19 21 29 30 31 36 64 77 79 80 81 86 89 97 100 105 107 139 142 145 148 151 154 157 160 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    globalFunc      reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (166) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 166 (SAVE_TYPE -> empty .)
    start           reduce using rule 166 (SAVE_TYPE -> empty .)
    colon           reduce using rule 166 (SAVE_TYPE -> empty .)
    id              reduce using rule 166 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (165) START_FUNCTION -> . empty
    (164) empty -> .

    semicolon       reduce using rule 164 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (165) START_FUNCTION -> empty .

    semicolon       reduce using rule 165 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 165 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 165 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (2) GENERATE_GOTO_MAIN -> . empty
    (164) empty -> .

    var             reduce using rule 164 (empty -> .)
    func            reduce using rule 164 (empty -> .)
    void            reduce using rule 164 (empty -> .)

    GENERATE_GOTO_MAIN             shift and go to state 10
    empty                          shift and go to state 11

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN . PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . METHOD PROGRAM_B
    (6) PROGRAM_A -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (95) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (164) empty -> .

    var             shift and go to state 16
    func            shift and go to state 17
    void            reduce using rule 164 (empty -> .)

    PROGRAM_A                      shift and go to state 12
    VARS                           shift and go to state 13
    METHOD                         shift and go to state 14
    empty                          shift and go to state 15

state 11

    (2) GENERATE_GOTO_MAIN -> empty .

    var             reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)
    func            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)
    void            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)


state 12

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A . void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 18


state 13

    (4) PROGRAM_A -> VARS . PROGRAM_A
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . METHOD PROGRAM_B
    (6) PROGRAM_A -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (95) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (164) empty -> .

    var             shift and go to state 16
    func            shift and go to state 17
    void            reduce using rule 164 (empty -> .)

    VARS                           shift and go to state 13
    PROGRAM_A                      shift and go to state 19
    METHOD                         shift and go to state 14
    empty                          shift and go to state 15

state 14

    (5) PROGRAM_A -> METHOD . PROGRAM_B
    (7) PROGRAM_B -> . METHOD PROGRAM_B
    (8) PROGRAM_B -> . empty
    (95) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (164) empty -> .

    func            shift and go to state 17
    void            reduce using rule 164 (empty -> .)

    METHOD                         shift and go to state 20
    PROGRAM_B                      shift and go to state 21
    empty                          shift and go to state 22

state 15

    (6) PROGRAM_A -> empty .

    void            reduce using rule 6 (PROGRAM_A -> empty .)


state 16

    (9) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 24
    float           shift and go to state 25
    string          shift and go to state 26
    bool            shift and go to state 27

    TYPE                           shift and go to state 23

state 17

    (95) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (82) TYPEMETHOD -> . TYPE
    (83) TYPEMETHOD -> . void SAVE_TYPE
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 30
    int             shift and go to state 24
    float           shift and go to state 25
    string          shift and go to state 26
    bool            shift and go to state 27

    TYPEMETHOD                     shift and go to state 28
    TYPE                           shift and go to state 29

state 18

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void . SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    start           reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 31
    empty                          shift and go to state 5

state 19

    (4) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 4 (PROGRAM_A -> VARS PROGRAM_A .)


state 20

    (7) PROGRAM_B -> METHOD . PROGRAM_B
    (7) PROGRAM_B -> . METHOD PROGRAM_B
    (8) PROGRAM_B -> . empty
    (95) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (164) empty -> .

    func            shift and go to state 17
    void            reduce using rule 164 (empty -> .)

    METHOD                         shift and go to state 20
    PROGRAM_B                      shift and go to state 32
    empty                          shift and go to state 22

state 21

    (5) PROGRAM_A -> METHOD PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_A -> METHOD PROGRAM_B .)


state 22

    (8) PROGRAM_B -> empty .

    void            reduce using rule 8 (PROGRAM_B -> empty .)


state 23

    (9) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 33


state 24

    (58) TYPE -> int . SAVE_TYPE
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    colon           reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (59) TYPE -> float . SAVE_TYPE
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    colon           reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (60) TYPE -> string . SAVE_TYPE
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    colon           reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 36
    empty                          shift and go to state 5

state 27

    (61) TYPE -> bool . SAVE_TYPE
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    colon           reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 37
    empty                          shift and go to state 5

state 28

    (95) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 38


state 29

    (82) TYPEMETHOD -> TYPE .

    id              reduce using rule 82 (TYPEMETHOD -> TYPE .)


state 30

    (83) TYPEMETHOD -> void . SAVE_TYPE
    (166) SAVE_TYPE -> . empty
    (164) empty -> .

    id              reduce using rule 164 (empty -> .)

    SAVE_TYPE                      shift and go to state 39
    empty                          shift and go to state 5

state 31

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE . start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS

    start           shift and go to state 40


state 32

    (7) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 7 (PROGRAM_B -> METHOD PROGRAM_B .)


state 33

    (9) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (164) empty -> .

    id              shift and go to state 42
    semicolon       reduce using rule 164 (empty -> .)

    VARS_A                         shift and go to state 41
    empty                          shift and go to state 43

state 34

    (58) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 58 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 58 (TYPE -> int SAVE_TYPE .)


state 35

    (59) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 59 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 59 (TYPE -> float SAVE_TYPE .)


state 36

    (60) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 60 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 60 (TYPE -> string SAVE_TYPE .)


state 37

    (61) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 61 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 61 (TYPE -> bool SAVE_TYPE .)


state 38

    (95) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (165) START_FUNCTION -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)

    START_FUNCTION                 shift and go to state 44
    empty                          shift and go to state 8

state 39

    (83) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 83 (TYPEMETHOD -> void SAVE_TYPE .)


state 40

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start . FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS
    (3) FILL_GOTO_MAIN -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    FILL_GOTO_MAIN                 shift and go to state 45
    empty                          shift and go to state 46

state 41

    (9) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 47


state 42

    (10) VARS_A -> id . assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> id . SAVE_VAR SIMPLE
    (12) VARS_A -> id . VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (167) SAVE_VAR -> . empty
    (29) VALIDATE_NAME_ARRAY -> . empty
    (164) empty -> .

    assign          shift and go to state 48
    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    lSqrBracket     reduce using rule 164 (empty -> .)

    SAVE_VAR                       shift and go to state 49
    VALIDATE_NAME_ARRAY            shift and go to state 50
    empty                          shift and go to state 51

state 43

    (13) VARS_A -> empty .

    semicolon       reduce using rule 13 (VARS_A -> empty .)


state 44

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 52


state 45

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN . START_FUNCTION BLOCK PRINTQUADS
    (165) START_FUNCTION -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    START_FUNCTION                 shift and go to state 53
    empty                          shift and go to state 8

state 46

    (3) FILL_GOTO_MAIN -> empty .

    lCurlyBracket   reduce using rule 3 (FILL_GOTO_MAIN -> empty .)


state 47

    (9) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (14) VARS_B -> . VARS
    (15) VARS_B -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (164) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 16
    func            reduce using rule 164 (empty -> .)
    void            reduce using rule 164 (empty -> .)

  ! var             [ reduce using rule 164 (empty -> .) ]

    VARS_B                         shift and go to state 54
    VARS                           shift and go to state 55
    empty                          shift and go to state 56

state 48

    (10) VARS_A -> id assign . VARCTE_AUX_VARS SIMPLE
    (22) VARCTE_AUX_VARS -> . id ISLIST
    (23) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (24) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (25) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (26) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (27) BOOLEAN_AUX_VARS -> . FALSE SAVE_ASSIGNED_VAR
    (28) BOOLEAN_AUX_VARS -> . TRUE SAVE_ASSIGNED_VAR

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60
    cte_str         shift and go to state 61
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    VARCTE_AUX_VARS                shift and go to state 58
    BOOLEAN_AUX_VARS               shift and go to state 62

state 49

    (11) VARS_A -> id SAVE_VAR . SIMPLE
    (16) SIMPLE -> . comma VARS_A
    (17) SIMPLE -> . empty
    (164) empty -> .

    comma           shift and go to state 66
    semicolon       reduce using rule 164 (empty -> .)

    SIMPLE                         shift and go to state 65
    empty                          shift and go to state 67

state 50

    (12) VARS_A -> id VALIDATE_NAME_ARRAY . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    lSqrBracket     shift and go to state 68


state 51

    (167) SAVE_VAR -> empty .
    (29) VALIDATE_NAME_ARRAY -> empty .

    comma           reduce using rule 167 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 167 (SAVE_VAR -> empty .)
    lSqrBracket     reduce using rule 29 (VALIDATE_NAME_ARRAY -> empty .)


state 52

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (96) METHOD_A -> . PARAMS
    (97) METHOD_A -> . empty
    (98) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (164) empty -> .
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 164 (empty -> .)
    int             shift and go to state 24
    float           shift and go to state 25
    string          shift and go to state 26
    bool            shift and go to state 27

    METHOD_A                       shift and go to state 69
    PARAMS                         shift and go to state 70
    empty                          shift and go to state 71
    TYPE                           shift and go to state 72

state 53

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION . BLOCK PRINTQUADS
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 73

state 54

    (9) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 55

    (14) VARS_B -> VARS .

    var             reduce using rule 14 (VARS_B -> VARS .)
    func            reduce using rule 14 (VARS_B -> VARS .)
    void            reduce using rule 14 (VARS_B -> VARS .)


state 56

    (15) VARS_B -> empty .

    var             reduce using rule 15 (VARS_B -> empty .)
    func            reduce using rule 15 (VARS_B -> empty .)
    void            reduce using rule 15 (VARS_B -> empty .)


state 57

    (22) VARCTE_AUX_VARS -> id . ISLIST
    (78) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (79) ISLIST -> . empty SOLVE_OFFSETS
    (164) empty -> .

    lSqrBracket     shift and go to state 76
    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    ISLIST                         shift and go to state 75
    empty                          shift and go to state 77

state 58

    (10) VARS_A -> id assign VARCTE_AUX_VARS . SIMPLE
    (16) SIMPLE -> . comma VARS_A
    (17) SIMPLE -> . empty
    (164) empty -> .

    comma           shift and go to state 66
    semicolon       reduce using rule 164 (empty -> .)

    SIMPLE                         shift and go to state 78
    empty                          shift and go to state 67

state 59

    (23) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 79
    empty                          shift and go to state 80

state 60

    (24) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 81
    empty                          shift and go to state 80

state 61

    (25) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 82
    empty                          shift and go to state 80

state 62

    (26) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 26 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 26 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 63

    (27) BOOLEAN_AUX_VARS -> FALSE . SAVE_ASSIGNED_VAR
    (168) SAVE_ASSIGNED_VAR -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 83
    empty                          shift and go to state 84

state 64

    (28) BOOLEAN_AUX_VARS -> TRUE . SAVE_ASSIGNED_VAR
    (168) SAVE_ASSIGNED_VAR -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 85
    empty                          shift and go to state 84

state 65

    (11) VARS_A -> id SAVE_VAR SIMPLE .

    semicolon       reduce using rule 11 (VARS_A -> id SAVE_VAR SIMPLE .)


state 66

    (16) SIMPLE -> comma . VARS_A
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (164) empty -> .

    id              shift and go to state 42
    semicolon       reduce using rule 164 (empty -> .)

    VARS_A                         shift and go to state 86
    empty                          shift and go to state 43

state 67

    (17) SIMPLE -> empty .

    semicolon       reduce using rule 17 (SIMPLE -> empty .)


state 68

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    cte_i           shift and go to state 87


state 69

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (171) SAVE_COUNTER_PARAM -> . empty
    (164) empty -> .

    rParenthesis    reduce using rule 164 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 88
    empty                          shift and go to state 89

state 70

    (96) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 96 (METHOD_A -> PARAMS .)


state 71

    (97) METHOD_A -> empty .

    rParenthesis    reduce using rule 97 (METHOD_A -> empty .)


state 72

    (98) PARAMS -> TYPE . id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 90


state 73

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK . PRINTQUADS
    (195) PRINTQUADS -> . empty
    (164) empty -> .

    $end            reduce using rule 164 (empty -> .)

    PRINTQUADS                     shift and go to state 91
    empty                          shift and go to state 92

state 74

    (62) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (164) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (84) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (87) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (101) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (102) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (103) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (75) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (110) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (111) STATMETHODS -> . LASSO
    (112) STATMETHODS -> . RIDGE
    (113) STATMETHODS -> . K_MEANS
    (114) STATMETHODS -> . MINI_BATCH_MEANS
    (115) STATMETHODS -> . TIME_SERIES_SPLIT
    (116) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (117) STATMETHODS -> . MEAN_SQUARED_ERROR
    (118) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (119) STATMETHODS -> . MEAN
    (120) STATMETHODS -> . MODE
    (121) STATMETHODS -> . MEDIAN
    (122) STATMETHODS -> . PROBABILITY
    (123) STATMETHODS -> . FREQUENCY
    (124) STATMETHODS -> . VARIANCE
    (125) STATMETHODS -> . STANDARD_DEVIATION
    (126) STATMETHODS -> . SKEWNESS
    (127) STATMETHODS -> . KURTOSI
    (106) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (128) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (129) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (130) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (131) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (132) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (133) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (134) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (135) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (136) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (137) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (140) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (143) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (146) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (149) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (152) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (155) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (158) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (161) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 164 (empty -> .)
    id              shift and go to state 105
    if              shift and go to state 106
    print           shift and go to state 107
    while           shift and go to state 108
    do              shift and go to state 109
    scan            shift and go to state 110
    return          shift and go to state 129
    ols             shift and go to state 130
    las             shift and go to state 131
    rid             shift and go to state 132
    kmeans          shift and go to state 133
    mbm             shift and go to state 134
    tseries         shift and go to state 135
    mean_abs_err    shift and go to state 136
    mean_sqr_err    shift and go to state 137
    median_abs_err  shift and go to state 138
    mean            shift and go to state 139
    mode            shift and go to state 140
    median          shift and go to state 141
    prob            shift and go to state 142
    freq            shift and go to state 143
    variance        shift and go to state 144
    stddev          shift and go to state 145
    skew            shift and go to state 146
    kurt            shift and go to state 147

    BLOCK_A                        shift and go to state 93
    STATEMENT                      shift and go to state 94
    empty                          shift and go to state 95
    ASSIGNMENT                     shift and go to state 96
    CONDITION                      shift and go to state 97
    WRITE                          shift and go to state 98
    PRE_CONDITIONAL_LOOP           shift and go to state 99
    POST_CONDITIONAL_LOOP          shift and go to state 100
    METHODCALL                     shift and go to state 101
    READ                           shift and go to state 102
    STATMETHODS                    shift and go to state 103
    RETURN                         shift and go to state 104
    ORDINARY_LEAST_SQUARES         shift and go to state 111
    LASSO                          shift and go to state 112
    RIDGE                          shift and go to state 113
    K_MEANS                        shift and go to state 114
    MINI_BATCH_MEANS               shift and go to state 115
    TIME_SERIES_SPLIT              shift and go to state 116
    MEAN_ABSOLUTE_ERROR            shift and go to state 117
    MEAN_SQUARED_ERROR             shift and go to state 118
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 119
    MEAN                           shift and go to state 120
    MODE                           shift and go to state 121
    MEDIAN                         shift and go to state 122
    PROBABILITY                    shift and go to state 123
    FREQUENCY                      shift and go to state 124
    VARIANCE                       shift and go to state 125
    STANDARD_DEVIATION             shift and go to state 126
    SKEWNESS                       shift and go to state 127
    KURTOSI                        shift and go to state 128

state 75

    (22) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 22 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 22 (VARCTE_AUX_VARS -> id ISLIST .)


state 76

    (78) ISLIST -> lSqrBracket . EXP VALIDATE_INDEX rSqrBracket ISLIST
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 148
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 77

    (79) ISLIST -> empty . SOLVE_OFFSETS
    (81) SOLVE_OFFSETS -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    assign          reduce using rule 164 (empty -> .)
    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    empty                          shift and go to state 156
    SOLVE_OFFSETS                  shift and go to state 157

state 78

    (10) VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .

    semicolon       reduce using rule 10 (VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .)


state 79

    (23) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (168) SAVE_ASSIGNED_VAR -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 158
    empty                          shift and go to state 84

state 80

    (180) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    comma           reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rSqrBracket     reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 180 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 81

    (24) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (168) SAVE_ASSIGNED_VAR -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 159
    empty                          shift and go to state 84

state 82

    (25) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (168) SAVE_ASSIGNED_VAR -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 160
    empty                          shift and go to state 84

state 83

    (27) BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 27 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 27 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)


state 84

    (168) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 168 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 168 (SAVE_ASSIGNED_VAR -> empty .)


state 85

    (28) BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 28 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 28 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)


state 86

    (16) SIMPLE -> comma VARS_A .

    semicolon       reduce using rule 16 (SIMPLE -> comma VARS_A .)


state 87

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (30) ACUMULATE_R -> . empty
    (164) empty -> .

    rSqrBracket     reduce using rule 164 (empty -> .)

    ACUMULATE_R                    shift and go to state 161
    empty                          shift and go to state 162

state 88

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 163


state 89

    (171) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 171 (SAVE_COUNTER_PARAM -> empty .)


state 90

    (98) PARAMS -> TYPE id . SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (169) SAVE_PARAM -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    SAVE_PARAM                     shift and go to state 164
    empty                          shift and go to state 165

state 91

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS .)


state 92

    (195) PRINTQUADS -> empty .

    $end            reduce using rule 195 (PRINTQUADS -> empty .)


state 93

    (62) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 166


state 94

    (63) BLOCK_A -> STATEMENT . BLOCK_A
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (164) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (84) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (87) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (101) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (102) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (103) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (75) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (110) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (111) STATMETHODS -> . LASSO
    (112) STATMETHODS -> . RIDGE
    (113) STATMETHODS -> . K_MEANS
    (114) STATMETHODS -> . MINI_BATCH_MEANS
    (115) STATMETHODS -> . TIME_SERIES_SPLIT
    (116) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (117) STATMETHODS -> . MEAN_SQUARED_ERROR
    (118) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (119) STATMETHODS -> . MEAN
    (120) STATMETHODS -> . MODE
    (121) STATMETHODS -> . MEDIAN
    (122) STATMETHODS -> . PROBABILITY
    (123) STATMETHODS -> . FREQUENCY
    (124) STATMETHODS -> . VARIANCE
    (125) STATMETHODS -> . STANDARD_DEVIATION
    (126) STATMETHODS -> . SKEWNESS
    (127) STATMETHODS -> . KURTOSI
    (106) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (128) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (129) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (130) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (131) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (132) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (133) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (134) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (135) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (136) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (137) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (140) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (143) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (146) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (149) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (152) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (155) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (158) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (161) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 164 (empty -> .)
    id              shift and go to state 105
    if              shift and go to state 106
    print           shift and go to state 107
    while           shift and go to state 108
    do              shift and go to state 109
    scan            shift and go to state 110
    return          shift and go to state 129
    ols             shift and go to state 130
    las             shift and go to state 131
    rid             shift and go to state 132
    kmeans          shift and go to state 133
    mbm             shift and go to state 134
    tseries         shift and go to state 135
    mean_abs_err    shift and go to state 136
    mean_sqr_err    shift and go to state 137
    median_abs_err  shift and go to state 138
    mean            shift and go to state 139
    mode            shift and go to state 140
    median          shift and go to state 141
    prob            shift and go to state 142
    freq            shift and go to state 143
    variance        shift and go to state 144
    stddev          shift and go to state 145
    skew            shift and go to state 146
    kurt            shift and go to state 147

    STATEMENT                      shift and go to state 94
    BLOCK_A                        shift and go to state 167
    empty                          shift and go to state 95
    ASSIGNMENT                     shift and go to state 96
    CONDITION                      shift and go to state 97
    WRITE                          shift and go to state 98
    PRE_CONDITIONAL_LOOP           shift and go to state 99
    POST_CONDITIONAL_LOOP          shift and go to state 100
    METHODCALL                     shift and go to state 101
    READ                           shift and go to state 102
    STATMETHODS                    shift and go to state 103
    RETURN                         shift and go to state 104
    ORDINARY_LEAST_SQUARES         shift and go to state 111
    LASSO                          shift and go to state 112
    RIDGE                          shift and go to state 113
    K_MEANS                        shift and go to state 114
    MINI_BATCH_MEANS               shift and go to state 115
    TIME_SERIES_SPLIT              shift and go to state 116
    MEAN_ABSOLUTE_ERROR            shift and go to state 117
    MEAN_SQUARED_ERROR             shift and go to state 118
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 119
    MEAN                           shift and go to state 120
    MODE                           shift and go to state 121
    MEDIAN                         shift and go to state 122
    PROBABILITY                    shift and go to state 123
    FREQUENCY                      shift and go to state 124
    VARIANCE                       shift and go to state 125
    STANDARD_DEVIATION             shift and go to state 126
    SKEWNESS                       shift and go to state 127
    KURTOSI                        shift and go to state 128

state 95

    (64) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 64 (BLOCK_A -> empty .)


state 96

    (65) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> ASSIGNMENT .)


state 97

    (66) STATEMENT -> CONDITION .

    id              reduce using rule 66 (STATEMENT -> CONDITION .)
    if              reduce using rule 66 (STATEMENT -> CONDITION .)
    print           reduce using rule 66 (STATEMENT -> CONDITION .)
    while           reduce using rule 66 (STATEMENT -> CONDITION .)
    do              reduce using rule 66 (STATEMENT -> CONDITION .)
    scan            reduce using rule 66 (STATEMENT -> CONDITION .)
    return          reduce using rule 66 (STATEMENT -> CONDITION .)
    ols             reduce using rule 66 (STATEMENT -> CONDITION .)
    las             reduce using rule 66 (STATEMENT -> CONDITION .)
    rid             reduce using rule 66 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 66 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 66 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 66 (STATEMENT -> CONDITION .)
    mean            reduce using rule 66 (STATEMENT -> CONDITION .)
    mode            reduce using rule 66 (STATEMENT -> CONDITION .)
    median          reduce using rule 66 (STATEMENT -> CONDITION .)
    prob            reduce using rule 66 (STATEMENT -> CONDITION .)
    freq            reduce using rule 66 (STATEMENT -> CONDITION .)
    variance        reduce using rule 66 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 66 (STATEMENT -> CONDITION .)
    skew            reduce using rule 66 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 66 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> CONDITION .)


state 98

    (67) STATEMENT -> WRITE .

    id              reduce using rule 67 (STATEMENT -> WRITE .)
    if              reduce using rule 67 (STATEMENT -> WRITE .)
    print           reduce using rule 67 (STATEMENT -> WRITE .)
    while           reduce using rule 67 (STATEMENT -> WRITE .)
    do              reduce using rule 67 (STATEMENT -> WRITE .)
    scan            reduce using rule 67 (STATEMENT -> WRITE .)
    return          reduce using rule 67 (STATEMENT -> WRITE .)
    ols             reduce using rule 67 (STATEMENT -> WRITE .)
    las             reduce using rule 67 (STATEMENT -> WRITE .)
    rid             reduce using rule 67 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 67 (STATEMENT -> WRITE .)
    mbm             reduce using rule 67 (STATEMENT -> WRITE .)
    tseries         reduce using rule 67 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 67 (STATEMENT -> WRITE .)
    mean            reduce using rule 67 (STATEMENT -> WRITE .)
    mode            reduce using rule 67 (STATEMENT -> WRITE .)
    median          reduce using rule 67 (STATEMENT -> WRITE .)
    prob            reduce using rule 67 (STATEMENT -> WRITE .)
    freq            reduce using rule 67 (STATEMENT -> WRITE .)
    variance        reduce using rule 67 (STATEMENT -> WRITE .)
    stddev          reduce using rule 67 (STATEMENT -> WRITE .)
    skew            reduce using rule 67 (STATEMENT -> WRITE .)
    kurt            reduce using rule 67 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> WRITE .)


state 99

    (68) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 100

    (69) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 101

    (70) STATEMENT -> METHODCALL .

    id              reduce using rule 70 (STATEMENT -> METHODCALL .)
    if              reduce using rule 70 (STATEMENT -> METHODCALL .)
    print           reduce using rule 70 (STATEMENT -> METHODCALL .)
    while           reduce using rule 70 (STATEMENT -> METHODCALL .)
    do              reduce using rule 70 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 70 (STATEMENT -> METHODCALL .)
    return          reduce using rule 70 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 70 (STATEMENT -> METHODCALL .)
    las             reduce using rule 70 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 70 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 70 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 70 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 70 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 70 (STATEMENT -> METHODCALL .)
    median          reduce using rule 70 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 70 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 70 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 70 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 70 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 70 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 70 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 70 (STATEMENT -> METHODCALL .)


state 102

    (71) STATEMENT -> READ .

    id              reduce using rule 71 (STATEMENT -> READ .)
    if              reduce using rule 71 (STATEMENT -> READ .)
    print           reduce using rule 71 (STATEMENT -> READ .)
    while           reduce using rule 71 (STATEMENT -> READ .)
    do              reduce using rule 71 (STATEMENT -> READ .)
    scan            reduce using rule 71 (STATEMENT -> READ .)
    return          reduce using rule 71 (STATEMENT -> READ .)
    ols             reduce using rule 71 (STATEMENT -> READ .)
    las             reduce using rule 71 (STATEMENT -> READ .)
    rid             reduce using rule 71 (STATEMENT -> READ .)
    kmeans          reduce using rule 71 (STATEMENT -> READ .)
    mbm             reduce using rule 71 (STATEMENT -> READ .)
    tseries         reduce using rule 71 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 71 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 71 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 71 (STATEMENT -> READ .)
    mean            reduce using rule 71 (STATEMENT -> READ .)
    mode            reduce using rule 71 (STATEMENT -> READ .)
    median          reduce using rule 71 (STATEMENT -> READ .)
    prob            reduce using rule 71 (STATEMENT -> READ .)
    freq            reduce using rule 71 (STATEMENT -> READ .)
    variance        reduce using rule 71 (STATEMENT -> READ .)
    stddev          reduce using rule 71 (STATEMENT -> READ .)
    skew            reduce using rule 71 (STATEMENT -> READ .)
    kurt            reduce using rule 71 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 71 (STATEMENT -> READ .)


state 103

    (72) STATEMENT -> STATMETHODS .

    id              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 72 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 72 (STATEMENT -> STATMETHODS .)


state 104

    (73) STATEMENT -> RETURN .

    id              reduce using rule 73 (STATEMENT -> RETURN .)
    if              reduce using rule 73 (STATEMENT -> RETURN .)
    print           reduce using rule 73 (STATEMENT -> RETURN .)
    while           reduce using rule 73 (STATEMENT -> RETURN .)
    do              reduce using rule 73 (STATEMENT -> RETURN .)
    scan            reduce using rule 73 (STATEMENT -> RETURN .)
    return          reduce using rule 73 (STATEMENT -> RETURN .)
    ols             reduce using rule 73 (STATEMENT -> RETURN .)
    las             reduce using rule 73 (STATEMENT -> RETURN .)
    rid             reduce using rule 73 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 73 (STATEMENT -> RETURN .)
    mbm             reduce using rule 73 (STATEMENT -> RETURN .)
    tseries         reduce using rule 73 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 73 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 73 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 73 (STATEMENT -> RETURN .)
    mean            reduce using rule 73 (STATEMENT -> RETURN .)
    mode            reduce using rule 73 (STATEMENT -> RETURN .)
    median          reduce using rule 73 (STATEMENT -> RETURN .)
    prob            reduce using rule 73 (STATEMENT -> RETURN .)
    freq            reduce using rule 73 (STATEMENT -> RETURN .)
    variance        reduce using rule 73 (STATEMENT -> RETURN .)
    stddev          reduce using rule 73 (STATEMENT -> RETURN .)
    skew            reduce using rule 73 (STATEMENT -> RETURN .)
    kurt            reduce using rule 73 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 73 (STATEMENT -> RETURN .)


state 105

    (74) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (103) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (179) PUSH_STACK_OPERANDS -> . empty
    (175) VALIDATE_FUNCTION_NAME -> . empty
    (164) empty -> .

    lSqrBracket     reduce using rule 164 (empty -> .)
    assign          reduce using rule 164 (empty -> .)
    lParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 168
    VALIDATE_FUNCTION_NAME         shift and go to state 169
    empty                          shift and go to state 170

state 106

    (84) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 171


state 107

    (87) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 172


state 108

    (101) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (191) PUSH_STACK_JUMPS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 173
    empty                          shift and go to state 174

state 109

    (102) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (191) PUSH_STACK_JUMPS -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 175
    empty                          shift and go to state 174

state 110

    (75) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 176


state 111

    (110) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 110 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 112

    (111) STATMETHODS -> LASSO .

    id              reduce using rule 111 (STATMETHODS -> LASSO .)
    if              reduce using rule 111 (STATMETHODS -> LASSO .)
    print           reduce using rule 111 (STATMETHODS -> LASSO .)
    while           reduce using rule 111 (STATMETHODS -> LASSO .)
    do              reduce using rule 111 (STATMETHODS -> LASSO .)
    scan            reduce using rule 111 (STATMETHODS -> LASSO .)
    return          reduce using rule 111 (STATMETHODS -> LASSO .)
    ols             reduce using rule 111 (STATMETHODS -> LASSO .)
    las             reduce using rule 111 (STATMETHODS -> LASSO .)
    rid             reduce using rule 111 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 111 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 111 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 111 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 111 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 111 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 111 (STATMETHODS -> LASSO .)
    mean            reduce using rule 111 (STATMETHODS -> LASSO .)
    mode            reduce using rule 111 (STATMETHODS -> LASSO .)
    median          reduce using rule 111 (STATMETHODS -> LASSO .)
    prob            reduce using rule 111 (STATMETHODS -> LASSO .)
    freq            reduce using rule 111 (STATMETHODS -> LASSO .)
    variance        reduce using rule 111 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 111 (STATMETHODS -> LASSO .)
    skew            reduce using rule 111 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 111 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 111 (STATMETHODS -> LASSO .)


state 113

    (112) STATMETHODS -> RIDGE .

    id              reduce using rule 112 (STATMETHODS -> RIDGE .)
    if              reduce using rule 112 (STATMETHODS -> RIDGE .)
    print           reduce using rule 112 (STATMETHODS -> RIDGE .)
    while           reduce using rule 112 (STATMETHODS -> RIDGE .)
    do              reduce using rule 112 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 112 (STATMETHODS -> RIDGE .)
    return          reduce using rule 112 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 112 (STATMETHODS -> RIDGE .)
    las             reduce using rule 112 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 112 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 112 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 112 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 112 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 112 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 112 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 112 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 112 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 112 (STATMETHODS -> RIDGE .)
    median          reduce using rule 112 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 112 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 112 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 112 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 112 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 112 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 112 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 112 (STATMETHODS -> RIDGE .)


state 114

    (113) STATMETHODS -> K_MEANS .

    id              reduce using rule 113 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 113 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 113 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 113 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 113 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 113 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 113 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 113 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 113 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 113 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 113 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 113 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 113 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 113 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 113 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 113 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 113 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 113 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 113 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 113 (STATMETHODS -> K_MEANS .)


state 115

    (114) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 114 (STATMETHODS -> MINI_BATCH_MEANS .)


state 116

    (115) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 117

    (116) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 118

    (117) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 119

    (118) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 120

    (119) STATMETHODS -> MEAN .

    id              reduce using rule 119 (STATMETHODS -> MEAN .)
    if              reduce using rule 119 (STATMETHODS -> MEAN .)
    print           reduce using rule 119 (STATMETHODS -> MEAN .)
    while           reduce using rule 119 (STATMETHODS -> MEAN .)
    do              reduce using rule 119 (STATMETHODS -> MEAN .)
    scan            reduce using rule 119 (STATMETHODS -> MEAN .)
    return          reduce using rule 119 (STATMETHODS -> MEAN .)
    ols             reduce using rule 119 (STATMETHODS -> MEAN .)
    las             reduce using rule 119 (STATMETHODS -> MEAN .)
    rid             reduce using rule 119 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 119 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 119 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 119 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> MEAN .)
    mean            reduce using rule 119 (STATMETHODS -> MEAN .)
    mode            reduce using rule 119 (STATMETHODS -> MEAN .)
    median          reduce using rule 119 (STATMETHODS -> MEAN .)
    prob            reduce using rule 119 (STATMETHODS -> MEAN .)
    freq            reduce using rule 119 (STATMETHODS -> MEAN .)
    variance        reduce using rule 119 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 119 (STATMETHODS -> MEAN .)
    skew            reduce using rule 119 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 119 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> MEAN .)


state 121

    (120) STATMETHODS -> MODE .

    id              reduce using rule 120 (STATMETHODS -> MODE .)
    if              reduce using rule 120 (STATMETHODS -> MODE .)
    print           reduce using rule 120 (STATMETHODS -> MODE .)
    while           reduce using rule 120 (STATMETHODS -> MODE .)
    do              reduce using rule 120 (STATMETHODS -> MODE .)
    scan            reduce using rule 120 (STATMETHODS -> MODE .)
    return          reduce using rule 120 (STATMETHODS -> MODE .)
    ols             reduce using rule 120 (STATMETHODS -> MODE .)
    las             reduce using rule 120 (STATMETHODS -> MODE .)
    rid             reduce using rule 120 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 120 (STATMETHODS -> MODE .)
    mbm             reduce using rule 120 (STATMETHODS -> MODE .)
    tseries         reduce using rule 120 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 120 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 120 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 120 (STATMETHODS -> MODE .)
    mean            reduce using rule 120 (STATMETHODS -> MODE .)
    mode            reduce using rule 120 (STATMETHODS -> MODE .)
    median          reduce using rule 120 (STATMETHODS -> MODE .)
    prob            reduce using rule 120 (STATMETHODS -> MODE .)
    freq            reduce using rule 120 (STATMETHODS -> MODE .)
    variance        reduce using rule 120 (STATMETHODS -> MODE .)
    stddev          reduce using rule 120 (STATMETHODS -> MODE .)
    skew            reduce using rule 120 (STATMETHODS -> MODE .)
    kurt            reduce using rule 120 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 120 (STATMETHODS -> MODE .)


state 122

    (121) STATMETHODS -> MEDIAN .

    id              reduce using rule 121 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 121 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 121 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 121 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 121 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 121 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 121 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 121 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 121 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 121 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 121 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 121 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 121 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 121 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 121 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 121 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 121 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 121 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 121 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 121 (STATMETHODS -> MEDIAN .)


state 123

    (122) STATMETHODS -> PROBABILITY .

    id              reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 122 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 122 (STATMETHODS -> PROBABILITY .)


state 124

    (123) STATMETHODS -> FREQUENCY .

    id              reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 123 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 123 (STATMETHODS -> FREQUENCY .)


state 125

    (124) STATMETHODS -> VARIANCE .

    id              reduce using rule 124 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 124 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 124 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 124 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 124 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 124 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 124 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 124 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 124 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 124 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 124 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 124 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 124 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 124 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 124 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 124 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 124 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 124 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 124 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 124 (STATMETHODS -> VARIANCE .)


state 126

    (125) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 125 (STATMETHODS -> STANDARD_DEVIATION .)


state 127

    (126) STATMETHODS -> SKEWNESS .

    id              reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 126 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 126 (STATMETHODS -> SKEWNESS .)


state 128

    (127) STATMETHODS -> KURTOSI .

    id              reduce using rule 127 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 127 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 127 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 127 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 127 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 127 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 127 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 127 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 127 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 127 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 127 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 127 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 127 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 127 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 127 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 127 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 127 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 127 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 127 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 127 (STATMETHODS -> KURTOSI .)


state 129

    (106) RETURN -> return . EXPLOG GENERATE_QUAD_RETURN semicolon
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 177
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 130

    (128) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 181


state 131

    (129) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 182


state 132

    (130) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 183


state 133

    (131) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 184


state 134

    (132) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 185


state 135

    (133) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 186


state 136

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 187


state 137

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 188


state 138

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 189


state 139

    (137) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 190


state 140

    (140) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 191


state 141

    (143) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 192


state 142

    (146) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 193


state 143

    (149) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 194


state 144

    (152) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 195


state 145

    (155) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 196


state 146

    (158) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 197


state 147

    (161) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 198


state 148

    (78) ISLIST -> lSqrBracket EXP . VALIDATE_INDEX rSqrBracket ISLIST
    (80) VALIDATE_INDEX -> . empty
    (164) empty -> .

    rSqrBracket     reduce using rule 164 (empty -> .)

    VALIDATE_INDEX                 shift and go to state 199
    empty                          shift and go to state 200

state 149

    (45) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (183) SOLVE_OPERATION_SUM_MINUS -> . empty
    (164) empty -> .

    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 201
    empty                          shift and go to state 202

state 150

    (49) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (184) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (164) empty -> .

    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 203
    empty                          shift and go to state 204

state 151

    (53) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    not             reduce using rule 164 (empty -> .)
    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 205
    empty                          shift and go to state 206

state 152

    (54) FACTOR -> VARCONSTAUX .

    times           reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 54 (FACTOR -> VARCONSTAUX .)


state 153

    (55) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (179) PUSH_STACK_OPERANDS -> . empty
    (164) empty -> .

    lSqrBracket     reduce using rule 164 (empty -> .)
    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 207
    empty                          shift and go to state 208

state 154

    (56) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 209
    empty                          shift and go to state 80

state 155

    (57) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 210
    empty                          shift and go to state 80

state 156

    (81) SOLVE_OFFSETS -> empty .

    comma           reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    semicolon       reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    assign          reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    times           reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    divide          reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    plus            reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    minus           reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    rSqrBracket     reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    greater         reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    lessThan        reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    greaterEquals   reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    lessThanEquals  reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    equals          reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    notEquals       reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    and             reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    or              reduce using rule 81 (SOLVE_OFFSETS -> empty .)
    rParenthesis    reduce using rule 81 (SOLVE_OFFSETS -> empty .)


state 157

    (79) ISLIST -> empty SOLVE_OFFSETS .

    comma           reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    semicolon       reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    assign          reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    times           reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    divide          reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    plus            reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    minus           reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    rSqrBracket     reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    greater         reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThan        reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    greaterEquals   reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThanEquals  reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    equals          reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    notEquals       reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    and             reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    or              reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)
    rParenthesis    reduce using rule 79 (ISLIST -> empty SOLVE_OFFSETS .)


state 158

    (23) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 159

    (24) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 24 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 24 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 160

    (25) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 25 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 25 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 161

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST CALCULATE_ARRAY LIST_A

    rSqrBracket     shift and go to state 211


state 162

    (30) ACUMULATE_R -> empty .

    rSqrBracket     reduce using rule 30 (ACUMULATE_R -> empty .)


state 163

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (172) SAVE_COUNTER_QUAD -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 212
    empty                          shift and go to state 213

state 164

    (98) PARAMS -> TYPE id SAVE_PARAM . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (174) SAVE_PARAM_TYPE -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 214
    empty                          shift and go to state 215

state 165

    (169) SAVE_PARAM -> empty .

    comma           reduce using rule 169 (SAVE_PARAM -> empty .)
    rParenthesis    reduce using rule 169 (SAVE_PARAM -> empty .)


state 166

    (62) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 167

    (63) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 63 (BLOCK_A -> STATEMENT BLOCK_A .)


state 168

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (78) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (79) ISLIST -> . empty SOLVE_OFFSETS
    (164) empty -> .

    lSqrBracket     shift and go to state 76
    assign          reduce using rule 164 (empty -> .)

    ISLIST                         shift and go to state 216
    empty                          shift and go to state 77

state 169

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (176) ERA -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)

    ERA                            shift and go to state 217
    empty                          shift and go to state 218

state 170

    (179) PUSH_STACK_OPERANDS -> empty .
    (175) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 175 (VALIDATE_FUNCTION_NAME -> empty .)


state 171

    (84) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 219
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 172

    (87) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPRESSION                     shift and go to state 220
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 173

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 221


state 174

    (191) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 191 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 191 (PUSH_STACK_JUMPS -> empty .)


state 175

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 222

state 176

    (75) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (90) VARCTE -> . id ISLIST
    (91) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (92) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (93) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (94) VARCTE -> . BOOLEAN
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 224
    cte_i           shift and go to state 225
    cte_f           shift and go to state 226
    cte_str         shift and go to state 227
    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    VARCTE                         shift and go to state 223
    BOOLEAN                        shift and go to state 228

state 177

    (106) RETURN -> return EXPLOG . GENERATE_QUAD_RETURN semicolon
    (107) GENERATE_QUAD_RETURN -> . empty
    (164) empty -> .

    semicolon       reduce using rule 164 (empty -> .)

    GENERATE_QUAD_RETURN           shift and go to state 231
    empty                          shift and go to state 232

state 178

    (32) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (34) EXPLOG_A -> . and EXPLOG
    (35) EXPLOG_A -> . or EXPLOG
    (36) EXPLOG_A -> . empty
    (164) empty -> .

    and             shift and go to state 234
    or              shift and go to state 235
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    EXPLOG_A                       shift and go to state 233
    empty                          shift and go to state 236

state 179

    (33) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPRESSION                     shift and go to state 237
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 180

    (37) EXPRESSION -> EXP .
    (38) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (39) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (40) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (41) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (42) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (43) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (44) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 37 (EXPRESSION -> EXP .)
    or              reduce using rule 37 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 37 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 37 (EXPRESSION -> EXP .)
    comma           reduce using rule 37 (EXPRESSION -> EXP .)
    greater         shift and go to state 239
    lessThan        shift and go to state 240
    greaterEquals   shift and go to state 241
    lessThanEquals  shift and go to state 242
    equals          shift and go to state 243
    notEquals       shift and go to state 244

    EXPRESSION_A                   shift and go to state 238

state 181

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 245


state 182

    (129) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 246


state 183

    (130) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 247


state 184

    (131) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 248

state 185

    (132) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 249

state 186

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 250

state 187

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 251


state 188

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 252


state 189

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 253


state 190

    (137) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 254


state 191

    (140) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 255


state 192

    (143) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 256


state 193

    (146) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 257


state 194

    (149) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 258


state 195

    (152) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 259


state 196

    (155) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 260


state 197

    (158) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 261


state 198

    (161) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 262


state 199

    (78) ISLIST -> lSqrBracket EXP VALIDATE_INDEX . rSqrBracket ISLIST

    rSqrBracket     shift and go to state 263


state 200

    (80) VALIDATE_INDEX -> empty .

    rSqrBracket     reduce using rule 80 (VALIDATE_INDEX -> empty .)


state 201

    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (46) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (47) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (48) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    rSqrBracket     reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greater         reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 265
    minus           shift and go to state 266

    EXP_A                          shift and go to state 264

state 202

    (183) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 183 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 203

    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (50) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (51) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (52) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 268
    divide          shift and go to state 269

    TERM_A                         shift and go to state 267

state 204

    (184) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 184 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 205

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 270
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 206

    (181) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 181 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 181 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 181 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 181 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 181 (PUSH_STACK_OPERATORS -> empty .)


state 207

    (55) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (78) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (79) ISLIST -> . empty SOLVE_OFFSETS
    (164) empty -> .

    lSqrBracket     shift and go to state 76
    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    ISLIST                         shift and go to state 271
    empty                          shift and go to state 77

state 208

    (179) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 179 (PUSH_STACK_OPERANDS -> empty .)


state 209

    (56) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 210

    (57) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 211

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST CALCULATE_ARRAY LIST_A
    (18) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (19) LIST -> . empty
    (164) empty -> .

    lSqrBracket     shift and go to state 272
    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    LIST                           shift and go to state 273
    empty                          shift and go to state 274

state 212

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 275

state 213

    (172) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 172 (SAVE_COUNTER_QUAD -> empty .)


state 214

    (98) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (170) INCREMENT_PARAM_COUNTER -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 276
    empty                          shift and go to state 277

state 215

    (174) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 174 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 174 (SAVE_PARAM_TYPE -> empty .)


state 216

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon

    assign          shift and go to state 278


state 217

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 279


state 218

    (176) ERA -> empty .

    lParenthesis    reduce using rule 176 (ERA -> empty .)


state 219

    (84) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 280


state 220

    (87) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (194) GENERATE_QUAD_PRINT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 281
    empty                          shift and go to state 282

state 221

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 283
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 222

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 284


state 223

    (75) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (76) READ_A -> . comma
    (77) READ_A -> . empty
    (164) empty -> .

    comma           shift and go to state 286
    rParenthesis    reduce using rule 164 (empty -> .)

    READ_A                         shift and go to state 285
    empty                          shift and go to state 287

state 224

    (90) VARCTE -> id . ISLIST
    (78) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (79) ISLIST -> . empty SOLVE_OFFSETS
    (164) empty -> .

    lSqrBracket     shift and go to state 76
    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    ISLIST                         shift and go to state 288
    empty                          shift and go to state 77

state 225

    (91) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 289
    empty                          shift and go to state 80

state 226

    (92) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 290
    empty                          shift and go to state 80

state 227

    (93) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 291
    empty                          shift and go to state 80

state 228

    (94) VARCTE -> BOOLEAN .

    comma           reduce using rule 94 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 94 (VARCTE -> BOOLEAN .)


state 229

    (108) BOOLEAN -> FALSE . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 292
    empty                          shift and go to state 80

state 230

    (109) BOOLEAN -> TRUE . PUSH_STACK_OPERANDS_CONSTANT
    (180) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 293
    empty                          shift and go to state 80

state 231

    (106) RETURN -> return EXPLOG GENERATE_QUAD_RETURN . semicolon

    semicolon       shift and go to state 294


state 232

    (107) GENERATE_QUAD_RETURN -> empty .

    semicolon       reduce using rule 107 (GENERATE_QUAD_RETURN -> empty .)


state 233

    (32) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (186) SOLVE_OPERATION_LOGIC -> . empty
    (164) empty -> .

    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 295
    empty                          shift and go to state 296

state 234

    (34) EXPLOG_A -> and . EXPLOG
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 297
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 235

    (35) EXPLOG_A -> or . EXPLOG
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 298
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 236

    (36) EXPLOG_A -> empty .

    semicolon       reduce using rule 36 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 36 (EXPLOG_A -> empty .)


state 237

    (33) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (34) EXPLOG_A -> . and EXPLOG
    (35) EXPLOG_A -> . or EXPLOG
    (36) EXPLOG_A -> . empty
    (164) empty -> .

    and             shift and go to state 234
    or              shift and go to state 235
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    EXPLOG_A                       shift and go to state 299
    empty                          shift and go to state 236

state 238

    (38) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 300
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 239

    (39) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 301
    empty                          shift and go to state 206

state 240

    (40) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 302
    empty                          shift and go to state 206

state 241

    (41) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 303
    empty                          shift and go to state 206

state 242

    (42) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 304
    empty                          shift and go to state 206

state 243

    (43) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 305
    empty                          shift and go to state 206

state 244

    (44) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 306
    empty                          shift and go to state 206

state 245

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 307


state 246

    (129) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 308


state 247

    (130) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 309


state 248

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 310


state 249

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 311


state 250

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 312


state 251

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 313


state 252

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 314


state 253

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 315


state 254

    (137) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (138) MEAN_A -> . comma id MEAN_A
    (139) MEAN_A -> . empty
    (164) empty -> .

    comma           shift and go to state 317
    rParenthesis    reduce using rule 164 (empty -> .)

    MEAN_A                         shift and go to state 316
    empty                          shift and go to state 318

state 255

    (140) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (141) MODE_A -> . comma id MODE_A
    (142) MODE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 320
    rParenthesis    reduce using rule 164 (empty -> .)

    MODE_A                         shift and go to state 319
    empty                          shift and go to state 321

state 256

    (143) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (144) MEDIAN_A -> . comma id MEDIAN_A
    (145) MEDIAN_A -> . empty
    (164) empty -> .

    comma           shift and go to state 323
    rParenthesis    reduce using rule 164 (empty -> .)

    MEDIAN_A                       shift and go to state 322
    empty                          shift and go to state 324

state 257

    (146) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (147) PROBABILITY_A -> . comma id PROBABILITY_A
    (148) PROBABILITY_A -> . empty
    (164) empty -> .

    comma           shift and go to state 326
    rParenthesis    reduce using rule 164 (empty -> .)

    PROBABILITY_A                  shift and go to state 325
    empty                          shift and go to state 327

state 258

    (149) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (150) FREQUENCY_A -> . comma id FREQUENCY_A
    (151) FREQUENCY_A -> . empty
    (164) empty -> .

    comma           shift and go to state 329
    rParenthesis    reduce using rule 164 (empty -> .)

    FREQUENCY_A                    shift and go to state 328
    empty                          shift and go to state 330

state 259

    (152) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (153) VARIANCE_A -> . comma id VARIANCE_A
    (154) VARIANCE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 332
    rParenthesis    reduce using rule 164 (empty -> .)

    VARIANCE_A                     shift and go to state 331
    empty                          shift and go to state 333

state 260

    (155) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (156) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (157) STANDARD_DEVIATION_A -> . empty
    (164) empty -> .

    comma           shift and go to state 335
    rParenthesis    reduce using rule 164 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 334
    empty                          shift and go to state 336

state 261

    (158) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (159) SKEWNESS_A -> . comma id SKEWNESS_A
    (160) SKEWNESS_A -> . empty
    (164) empty -> .

    comma           shift and go to state 338
    rParenthesis    reduce using rule 164 (empty -> .)

    SKEWNESS_A                     shift and go to state 337
    empty                          shift and go to state 339

state 262

    (161) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (162) KURTOSI_A -> . comma id KURTOSI_A
    (163) KURTOSI_A -> . empty
    (164) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 164 (empty -> .)

    KURTOSI_A                      shift and go to state 340
    empty                          shift and go to state 342

state 263

    (78) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket . ISLIST
    (78) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (79) ISLIST -> . empty SOLVE_OFFSETS
    (164) empty -> .

    lSqrBracket     shift and go to state 76
    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    assign          reduce using rule 164 (empty -> .)
    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    ISLIST                         shift and go to state 343
    empty                          shift and go to state 77

state 264

    (46) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    rSqrBracket     reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greater         reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 265

    (47) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 344
    empty                          shift and go to state 206

state 266

    (48) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 345
    empty                          shift and go to state 206

state 267

    (50) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 268

    (51) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 346
    empty                          shift and go to state 206

state 269

    (52) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 347
    empty                          shift and go to state 206

state 270

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 348


state 271

    (55) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 272

    (18) LIST -> lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST

    cte_i           shift and go to state 349


state 273

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST . CALCULATE_ARRAY LIST_A
    (31) CALCULATE_ARRAY -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    CALCULATE_ARRAY                shift and go to state 350
    empty                          shift and go to state 351

state 274

    (19) LIST -> empty .

    comma           reduce using rule 19 (LIST -> empty .)
    semicolon       reduce using rule 19 (LIST -> empty .)


state 275

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (173) END_PROCEDURE -> . empty
    (164) empty -> .

    func            reduce using rule 164 (empty -> .)
    void            reduce using rule 164 (empty -> .)

    END_PROCEDURE                  shift and go to state 352
    empty                          shift and go to state 353

state 276

    (98) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (99) PARAMS_A -> . comma PARAMS
    (100) PARAMS_A -> . empty
    (164) empty -> .

    comma           shift and go to state 355
    rParenthesis    reduce using rule 164 (empty -> .)

    PARAMS_A                       shift and go to state 354
    empty                          shift and go to state 356

state 277

    (170) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 170 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 170 (INCREMENT_PARAM_COUNTER -> empty .)


state 278

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (181) PUSH_STACK_OPERATORS -> . empty
    (164) empty -> .

    not             reduce using rule 164 (empty -> .)
    lParenthesis    reduce using rule 164 (empty -> .)
    id              reduce using rule 164 (empty -> .)
    cte_i           reduce using rule 164 (empty -> .)
    cte_f           reduce using rule 164 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 357
    empty                          shift and go to state 206

state 279

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 358
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 280

    (84) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (188) GENERATE_GOTOF_CONDITIONAL -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 359
    empty                          shift and go to state 360

state 281

    (87) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (88) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (89) WRITE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 362
    rParenthesis    reduce using rule 164 (empty -> .)

    WRITE_A                        shift and go to state 361
    empty                          shift and go to state 363

state 282

    (194) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 194 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 194 (GENERATE_QUAD_PRINT -> empty .)


state 283

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 364


state 284

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 365


state 285

    (75) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 366


state 286

    (76) READ_A -> comma .

    rParenthesis    reduce using rule 76 (READ_A -> comma .)


state 287

    (77) READ_A -> empty .

    rParenthesis    reduce using rule 77 (READ_A -> empty .)


state 288

    (90) VARCTE -> id ISLIST .

    comma           reduce using rule 90 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 90 (VARCTE -> id ISLIST .)


state 289

    (91) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 91 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 91 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 290

    (92) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 92 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 92 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 291

    (93) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 93 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 93 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 292

    (108) BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 108 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 108 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)


state 293

    (109) BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 109 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 109 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)


state 294

    (106) RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .

    id              reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    if              reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    print           reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    while           reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    do              reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    scan            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    return          reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    ols             reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    las             reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rid             reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kmeans          reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mbm             reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    tseries         reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_abs_err    reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_sqr_err    reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median_abs_err  reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mode            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median          reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    prob            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    freq            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    variance        reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    stddev          reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    skew            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kurt            reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rCurlyBracket   reduce using rule 106 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)


state 295

    (32) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 32 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 32 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 296

    (186) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 186 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 186 (SOLVE_OPERATION_LOGIC -> empty .)


state 297

    (34) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 34 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 34 (EXPLOG_A -> and EXPLOG .)


state 298

    (35) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 35 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 35 (EXPLOG_A -> or EXPLOG .)


state 299

    (33) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (186) SOLVE_OPERATION_LOGIC -> . empty
    (164) empty -> .

    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 367
    empty                          shift and go to state 296

state 300

    (38) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (185) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (164) empty -> .

    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 368
    empty                          shift and go to state 369

state 301

    (39) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 302

    (40) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 303

    (41) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 304

    (42) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 305

    (43) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 306

    (44) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 307

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 370


state 308

    (129) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 371


state 309

    (130) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 372


state 310

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 373


state 311

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 374


state 312

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 375

state 313

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 376


state 314

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 377


state 315

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 378


state 316

    (137) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 379


state 317

    (138) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 380


state 318

    (139) MEAN_A -> empty .

    rParenthesis    reduce using rule 139 (MEAN_A -> empty .)


state 319

    (140) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 381


state 320

    (141) MODE_A -> comma . id MODE_A

    id              shift and go to state 382


state 321

    (142) MODE_A -> empty .

    rParenthesis    reduce using rule 142 (MODE_A -> empty .)


state 322

    (143) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 383


state 323

    (144) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 384


state 324

    (145) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 145 (MEDIAN_A -> empty .)


state 325

    (146) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 385


state 326

    (147) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 386


state 327

    (148) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 148 (PROBABILITY_A -> empty .)


state 328

    (149) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 387


state 329

    (150) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 388


state 330

    (151) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 151 (FREQUENCY_A -> empty .)


state 331

    (152) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 389


state 332

    (153) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 390


state 333

    (154) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 154 (VARIANCE_A -> empty .)


state 334

    (155) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 391


state 335

    (156) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 392


state 336

    (157) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 157 (STANDARD_DEVIATION_A -> empty .)


state 337

    (158) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 393


state 338

    (159) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 394


state 339

    (160) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 160 (SKEWNESS_A -> empty .)


state 340

    (161) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 395


state 341

    (162) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 396


state 342

    (163) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 163 (KURTOSI_A -> empty .)


state 343

    (78) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .

    comma           reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    semicolon       reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    assign          reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    times           reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    divide          reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    plus            reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    minus           reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rSqrBracket     reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greater         reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThan        reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greaterEquals   reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThanEquals  reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    equals          reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    notEquals       reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    and             reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    or              reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rParenthesis    reduce using rule 78 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)


state 344

    (47) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 397
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 345

    (48) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 398
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 346

    (51) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    TERM                           shift and go to state 399
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 347

    (52) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    TERM                           shift and go to state 400
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 348

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (182) POP_STACK_OPERATORS -> . empty
    (164) empty -> .

    times           reduce using rule 164 (empty -> .)
    divide          reduce using rule 164 (empty -> .)
    plus            reduce using rule 164 (empty -> .)
    minus           reduce using rule 164 (empty -> .)
    rSqrBracket     reduce using rule 164 (empty -> .)
    greater         reduce using rule 164 (empty -> .)
    lessThan        reduce using rule 164 (empty -> .)
    greaterEquals   reduce using rule 164 (empty -> .)
    lessThanEquals  reduce using rule 164 (empty -> .)
    equals          reduce using rule 164 (empty -> .)
    notEquals       reduce using rule 164 (empty -> .)
    and             reduce using rule 164 (empty -> .)
    or              reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)
    comma           reduce using rule 164 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 401
    empty                          shift and go to state 402

state 349

    (18) LIST -> lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST
    (30) ACUMULATE_R -> . empty
    (164) empty -> .

    rSqrBracket     reduce using rule 164 (empty -> .)

    ACUMULATE_R                    shift and go to state 403
    empty                          shift and go to state 162

state 350

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY . LIST_A
    (20) LIST_A -> . comma VARS_A
    (21) LIST_A -> . empty
    (164) empty -> .

    comma           shift and go to state 405
    semicolon       reduce using rule 164 (empty -> .)

    LIST_A                         shift and go to state 404
    empty                          shift and go to state 406

state 351

    (31) CALCULATE_ARRAY -> empty .

    comma           reduce using rule 31 (CALCULATE_ARRAY -> empty .)
    semicolon       reduce using rule 31 (CALCULATE_ARRAY -> empty .)


state 352

    (95) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 95 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 95 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 353

    (173) END_PROCEDURE -> empty .

    func            reduce using rule 173 (END_PROCEDURE -> empty .)
    void            reduce using rule 173 (END_PROCEDURE -> empty .)


state 354

    (98) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 98 (PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 355

    (99) PARAMS_A -> comma . PARAMS
    (98) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 24
    float           shift and go to state 25
    string          shift and go to state 26
    bool            shift and go to state 27

    PARAMS                         shift and go to state 407
    TYPE                           shift and go to state 72

state 356

    (100) PARAMS_A -> empty .

    rParenthesis    reduce using rule 100 (PARAMS_A -> empty .)


state 357

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 408
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 358

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP . VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (177) VALIDATE_PARAMETER -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 409
    empty                          shift and go to state 410

state 359

    (84) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 411

state 360

    (188) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 188 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 361

    (87) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 412


state 362

    (88) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPRESSION                     shift and go to state 413
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 363

    (89) WRITE_A -> empty .

    rParenthesis    reduce using rule 89 (WRITE_A -> empty .)


state 364

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (188) GENERATE_GOTOF_CONDITIONAL -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 414
    empty                          shift and go to state 360

state 365

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 179
    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXPLOG                         shift and go to state 415
    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 180
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 366

    (75) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 75 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 367

    (33) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 33 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 33 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 368

    (38) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 369

    (185) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 185 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 185 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 185 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 185 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 185 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 370

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 416


state 371

    (129) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 417


state 372

    (130) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 418


state 373

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 419


state 374

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 420


state 375

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 421


state 376

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 422


state 377

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 423


state 378

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 424


state 379

    (137) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 425


state 380

    (138) MEAN_A -> comma id . MEAN_A
    (138) MEAN_A -> . comma id MEAN_A
    (139) MEAN_A -> . empty
    (164) empty -> .

    comma           shift and go to state 317
    rParenthesis    reduce using rule 164 (empty -> .)

    MEAN_A                         shift and go to state 426
    empty                          shift and go to state 318

state 381

    (140) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 427


state 382

    (141) MODE_A -> comma id . MODE_A
    (141) MODE_A -> . comma id MODE_A
    (142) MODE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 320
    rParenthesis    reduce using rule 164 (empty -> .)

    MODE_A                         shift and go to state 428
    empty                          shift and go to state 321

state 383

    (143) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 429


state 384

    (144) MEDIAN_A -> comma id . MEDIAN_A
    (144) MEDIAN_A -> . comma id MEDIAN_A
    (145) MEDIAN_A -> . empty
    (164) empty -> .

    comma           shift and go to state 323
    rParenthesis    reduce using rule 164 (empty -> .)

    MEDIAN_A                       shift and go to state 430
    empty                          shift and go to state 324

state 385

    (146) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 431


state 386

    (147) PROBABILITY_A -> comma id . PROBABILITY_A
    (147) PROBABILITY_A -> . comma id PROBABILITY_A
    (148) PROBABILITY_A -> . empty
    (164) empty -> .

    comma           shift and go to state 326
    rParenthesis    reduce using rule 164 (empty -> .)

    PROBABILITY_A                  shift and go to state 432
    empty                          shift and go to state 327

state 387

    (149) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 433


state 388

    (150) FREQUENCY_A -> comma id . FREQUENCY_A
    (150) FREQUENCY_A -> . comma id FREQUENCY_A
    (151) FREQUENCY_A -> . empty
    (164) empty -> .

    comma           shift and go to state 329
    rParenthesis    reduce using rule 164 (empty -> .)

    FREQUENCY_A                    shift and go to state 434
    empty                          shift and go to state 330

state 389

    (152) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 435


state 390

    (153) VARIANCE_A -> comma id . VARIANCE_A
    (153) VARIANCE_A -> . comma id VARIANCE_A
    (154) VARIANCE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 332
    rParenthesis    reduce using rule 164 (empty -> .)

    VARIANCE_A                     shift and go to state 436
    empty                          shift and go to state 333

state 391

    (155) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 437


state 392

    (156) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (156) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (157) STANDARD_DEVIATION_A -> . empty
    (164) empty -> .

    comma           shift and go to state 335
    rParenthesis    reduce using rule 164 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 438
    empty                          shift and go to state 336

state 393

    (158) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 439


state 394

    (159) SKEWNESS_A -> comma id . SKEWNESS_A
    (159) SKEWNESS_A -> . comma id SKEWNESS_A
    (160) SKEWNESS_A -> . empty
    (164) empty -> .

    comma           shift and go to state 338
    rParenthesis    reduce using rule 164 (empty -> .)

    SKEWNESS_A                     shift and go to state 440
    empty                          shift and go to state 339

state 395

    (161) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 441


state 396

    (162) KURTOSI_A -> comma id . KURTOSI_A
    (162) KURTOSI_A -> . comma id KURTOSI_A
    (163) KURTOSI_A -> . empty
    (164) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 164 (empty -> .)

    KURTOSI_A                      shift and go to state 442
    empty                          shift and go to state 342

state 397

    (47) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 398

    (48) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 399

    (51) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 400

    (52) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 401

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 402

    (182) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 182 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 182 (POP_STACK_OPERATORS -> empty .)


state 403

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST

    rSqrBracket     shift and go to state 443


state 404

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .

    semicolon       reduce using rule 12 (VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .)


state 405

    (20) LIST_A -> comma . VARS_A
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (164) empty -> .

    id              shift and go to state 42
    semicolon       reduce using rule 164 (empty -> .)

    VARS_A                         shift and go to state 444
    empty                          shift and go to state 43

state 406

    (21) LIST_A -> empty .

    semicolon       reduce using rule 21 (LIST_A -> empty .)


state 407

    (99) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 99 (PARAMS_A -> comma PARAMS .)


state 408

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (187) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (164) empty -> .

    semicolon       reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 445
    empty                          shift and go to state 446

state 409

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER . METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (104) METHODCALL_A -> . comma EXP
    (105) METHODCALL_A -> . empty
    (164) empty -> .

    comma           shift and go to state 448
    rParenthesis    reduce using rule 164 (empty -> .)

    METHODCALL_A                   shift and go to state 447
    empty                          shift and go to state 449

state 410

    (177) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 177 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 177 (VALIDATE_PARAMETER -> empty .)


state 411

    (84) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (85) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (86) CONDITION_A -> . empty
    (164) empty -> .

    else            shift and go to state 451
    id              reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    print           reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    do              reduce using rule 164 (empty -> .)
    scan            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    ols             reduce using rule 164 (empty -> .)
    las             reduce using rule 164 (empty -> .)
    rid             reduce using rule 164 (empty -> .)
    kmeans          reduce using rule 164 (empty -> .)
    mbm             reduce using rule 164 (empty -> .)
    tseries         reduce using rule 164 (empty -> .)
    mean_abs_err    reduce using rule 164 (empty -> .)
    mean_sqr_err    reduce using rule 164 (empty -> .)
    median_abs_err  reduce using rule 164 (empty -> .)
    mean            reduce using rule 164 (empty -> .)
    mode            reduce using rule 164 (empty -> .)
    median          reduce using rule 164 (empty -> .)
    prob            reduce using rule 164 (empty -> .)
    freq            reduce using rule 164 (empty -> .)
    variance        reduce using rule 164 (empty -> .)
    stddev          reduce using rule 164 (empty -> .)
    skew            reduce using rule 164 (empty -> .)
    kurt            reduce using rule 164 (empty -> .)
    rCurlyBracket   reduce using rule 164 (empty -> .)

    CONDITION_A                    shift and go to state 450
    empty                          shift and go to state 452

state 412

    (87) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 453


state 413

    (88) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (194) GENERATE_QUAD_PRINT -> . empty
    (164) empty -> .

    comma           reduce using rule 164 (empty -> .)
    rParenthesis    reduce using rule 164 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 454
    empty                          shift and go to state 282

state 414

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 455

state 415

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 456


state 416

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 457

state 417

    (129) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 458

state 418

    (130) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 459

state 419

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 460

state 420

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 461

state 421

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 462


state 422

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 463


state 423

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 464


state 424

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 465


state 425

    (137) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 137 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 426

    (138) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 138 (MEAN_A -> comma id MEAN_A .)


state 427

    (140) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 140 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 428

    (141) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 141 (MODE_A -> comma id MODE_A .)


state 429

    (143) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 143 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 430

    (144) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 144 (MEDIAN_A -> comma id MEDIAN_A .)


state 431

    (146) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 146 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 432

    (147) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 147 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 433

    (149) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 149 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 434

    (150) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 150 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 435

    (152) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 152 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 436

    (153) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 153 (VARIANCE_A -> comma id VARIANCE_A .)


state 437

    (155) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 155 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 438

    (156) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 156 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 439

    (158) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 158 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 440

    (159) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 159 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 441

    (161) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 161 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 442

    (162) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 162 (KURTOSI_A -> comma id KURTOSI_A .)


state 443

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST
    (18) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (19) LIST -> . empty
    (164) empty -> .

    lSqrBracket     shift and go to state 272
    comma           reduce using rule 164 (empty -> .)
    semicolon       reduce using rule 164 (empty -> .)

    LIST                           shift and go to state 466
    empty                          shift and go to state 274

state 444

    (20) LIST_A -> comma VARS_A .

    semicolon       reduce using rule 20 (LIST_A -> comma VARS_A .)


state 445

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 467


state 446

    (187) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 187 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 447

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 468


state 448

    (104) METHODCALL_A -> comma . EXP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 151
    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    EXP                            shift and go to state 469
    TERM                           shift and go to state 149
    FACTOR                         shift and go to state 150
    VARCONSTAUX                    shift and go to state 152

state 449

    (105) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 105 (METHODCALL_A -> empty .)


state 450

    (84) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (189) SOLVE_OPERATION_CONDITIONAL -> . empty
    (164) empty -> .

    id              reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    print           reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    do              reduce using rule 164 (empty -> .)
    scan            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    ols             reduce using rule 164 (empty -> .)
    las             reduce using rule 164 (empty -> .)
    rid             reduce using rule 164 (empty -> .)
    kmeans          reduce using rule 164 (empty -> .)
    mbm             reduce using rule 164 (empty -> .)
    tseries         reduce using rule 164 (empty -> .)
    mean_abs_err    reduce using rule 164 (empty -> .)
    mean_sqr_err    reduce using rule 164 (empty -> .)
    median_abs_err  reduce using rule 164 (empty -> .)
    mean            reduce using rule 164 (empty -> .)
    mode            reduce using rule 164 (empty -> .)
    median          reduce using rule 164 (empty -> .)
    prob            reduce using rule 164 (empty -> .)
    freq            reduce using rule 164 (empty -> .)
    variance        reduce using rule 164 (empty -> .)
    stddev          reduce using rule 164 (empty -> .)
    skew            reduce using rule 164 (empty -> .)
    kurt            reduce using rule 164 (empty -> .)
    rCurlyBracket   reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 470
    empty                          shift and go to state 471

state 451

    (85) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (190) GENERATE_GOTO_CONDITIONAL -> . empty
    (164) empty -> .

    lCurlyBracket   reduce using rule 164 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 472
    empty                          shift and go to state 473

state 452

    (86) CONDITION_A -> empty .

    id              reduce using rule 86 (CONDITION_A -> empty .)
    if              reduce using rule 86 (CONDITION_A -> empty .)
    print           reduce using rule 86 (CONDITION_A -> empty .)
    while           reduce using rule 86 (CONDITION_A -> empty .)
    do              reduce using rule 86 (CONDITION_A -> empty .)
    scan            reduce using rule 86 (CONDITION_A -> empty .)
    return          reduce using rule 86 (CONDITION_A -> empty .)
    ols             reduce using rule 86 (CONDITION_A -> empty .)
    las             reduce using rule 86 (CONDITION_A -> empty .)
    rid             reduce using rule 86 (CONDITION_A -> empty .)
    kmeans          reduce using rule 86 (CONDITION_A -> empty .)
    mbm             reduce using rule 86 (CONDITION_A -> empty .)
    tseries         reduce using rule 86 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 86 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 86 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 86 (CONDITION_A -> empty .)
    mean            reduce using rule 86 (CONDITION_A -> empty .)
    mode            reduce using rule 86 (CONDITION_A -> empty .)
    median          reduce using rule 86 (CONDITION_A -> empty .)
    prob            reduce using rule 86 (CONDITION_A -> empty .)
    freq            reduce using rule 86 (CONDITION_A -> empty .)
    variance        reduce using rule 86 (CONDITION_A -> empty .)
    stddev          reduce using rule 86 (CONDITION_A -> empty .)
    skew            reduce using rule 86 (CONDITION_A -> empty .)
    kurt            reduce using rule 86 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 86 (CONDITION_A -> empty .)


state 453

    (87) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 87 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 454

    (88) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (88) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (89) WRITE_A -> . empty
    (164) empty -> .

    comma           shift and go to state 362
    rParenthesis    reduce using rule 164 (empty -> .)

    WRITE_A                        shift and go to state 474
    empty                          shift and go to state 363

state 455

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (192) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (164) empty -> .

    id              reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    print           reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    do              reduce using rule 164 (empty -> .)
    scan            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    ols             reduce using rule 164 (empty -> .)
    las             reduce using rule 164 (empty -> .)
    rid             reduce using rule 164 (empty -> .)
    kmeans          reduce using rule 164 (empty -> .)
    mbm             reduce using rule 164 (empty -> .)
    tseries         reduce using rule 164 (empty -> .)
    mean_abs_err    reduce using rule 164 (empty -> .)
    mean_sqr_err    reduce using rule 164 (empty -> .)
    median_abs_err  reduce using rule 164 (empty -> .)
    mean            reduce using rule 164 (empty -> .)
    mode            reduce using rule 164 (empty -> .)
    median          reduce using rule 164 (empty -> .)
    prob            reduce using rule 164 (empty -> .)
    freq            reduce using rule 164 (empty -> .)
    variance        reduce using rule 164 (empty -> .)
    stddev          reduce using rule 164 (empty -> .)
    skew            reduce using rule 164 (empty -> .)
    kurt            reduce using rule 164 (empty -> .)
    rCurlyBracket   reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 475
    empty                          shift and go to state 476

state 456

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (193) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (164) empty -> .

    id              reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    print           reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    do              reduce using rule 164 (empty -> .)
    scan            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    ols             reduce using rule 164 (empty -> .)
    las             reduce using rule 164 (empty -> .)
    rid             reduce using rule 164 (empty -> .)
    kmeans          reduce using rule 164 (empty -> .)
    mbm             reduce using rule 164 (empty -> .)
    tseries         reduce using rule 164 (empty -> .)
    mean_abs_err    reduce using rule 164 (empty -> .)
    mean_sqr_err    reduce using rule 164 (empty -> .)
    median_abs_err  reduce using rule 164 (empty -> .)
    mean            reduce using rule 164 (empty -> .)
    mode            reduce using rule 164 (empty -> .)
    median          reduce using rule 164 (empty -> .)
    prob            reduce using rule 164 (empty -> .)
    freq            reduce using rule 164 (empty -> .)
    variance        reduce using rule 164 (empty -> .)
    stddev          reduce using rule 164 (empty -> .)
    skew            reduce using rule 164 (empty -> .)
    kurt            reduce using rule 164 (empty -> .)
    rCurlyBracket   reduce using rule 164 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 477
    empty                          shift and go to state 478

state 457

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 479


state 458

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 480


state 459

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 481


state 460

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 482


state 461

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 483


state 462

    (133) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 463

    (134) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 134 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 464

    (135) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 135 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 465

    (136) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 136 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 466

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .

    comma           reduce using rule 18 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)
    semicolon       reduce using rule 18 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)


state 467

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 468

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 484


state 469

    (104) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 104 (METHODCALL_A -> comma EXP .)


state 470

    (84) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 84 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 471

    (189) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 189 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 472

    (85) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 74

    BLOCK                          shift and go to state 485

state 473

    (190) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 190 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 474

    (88) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 88 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 475

    (101) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 101 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 476

    (192) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 192 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 477

    (102) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 102 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 478

    (193) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 193 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 479

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 486

state 480

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 487

state 481

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 488

state 482

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 489

state 483

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 490

state 484

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon . VALIDATE_METHOD_CALL
    (178) VALIDATE_METHOD_CALL -> . empty
    (164) empty -> .

    id              reduce using rule 164 (empty -> .)
    if              reduce using rule 164 (empty -> .)
    print           reduce using rule 164 (empty -> .)
    while           reduce using rule 164 (empty -> .)
    do              reduce using rule 164 (empty -> .)
    scan            reduce using rule 164 (empty -> .)
    return          reduce using rule 164 (empty -> .)
    ols             reduce using rule 164 (empty -> .)
    las             reduce using rule 164 (empty -> .)
    rid             reduce using rule 164 (empty -> .)
    kmeans          reduce using rule 164 (empty -> .)
    mbm             reduce using rule 164 (empty -> .)
    tseries         reduce using rule 164 (empty -> .)
    mean_abs_err    reduce using rule 164 (empty -> .)
    mean_sqr_err    reduce using rule 164 (empty -> .)
    median_abs_err  reduce using rule 164 (empty -> .)
    mean            reduce using rule 164 (empty -> .)
    mode            reduce using rule 164 (empty -> .)
    median          reduce using rule 164 (empty -> .)
    prob            reduce using rule 164 (empty -> .)
    freq            reduce using rule 164 (empty -> .)
    variance        reduce using rule 164 (empty -> .)
    stddev          reduce using rule 164 (empty -> .)
    skew            reduce using rule 164 (empty -> .)
    kurt            reduce using rule 164 (empty -> .)
    rCurlyBracket   reduce using rule 164 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 491
    empty                          shift and go to state 492

state 485

    (85) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 85 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 486

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 493


state 487

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 494


state 488

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 495


state 489

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 496


state 490

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 497


state 491

    (103) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 103 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 492

    (178) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 178 (VALIDATE_METHOD_CALL -> empty .)


state 493

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 498

state 494

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 499

state 495

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 500

state 496

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 501

state 497

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 502

state 498

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 503


state 499

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 504


state 500

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 505


state 501

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 506


state 502

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 507


state 503

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 508

state 504

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 509

state 505

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 510

state 506

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 511


state 507

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 512

state 508

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 513


state 509

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 514


state 510

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 515


state 511

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 516


state 512

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 517


state 513

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 518


state 514

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 519

state 515

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 520

state 516

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 521

state 517

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 522

state 518

    (128) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 128 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 519

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 523


state 520

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 524


state 521

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 525


state 522

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 526


state 523

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 527

state 524

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 528

state 525

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 529

state 526

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 530

state 527

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 531


state 528

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 532


state 529

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 533


state 530

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 534


state 531

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 535

state 532

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 536


state 533

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 537

state 534

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 538

state 535

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 539


state 536

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 540


state 537

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 541


state 538

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 542


state 539

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 543

state 540

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 544

state 541

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 545

state 542

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 546

state 543

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 547


state 544

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 548


state 545

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 549


state 546

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 550


state 547

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 551


state 548

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 552


state 549

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 553


state 550

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 554

state 551

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 555


state 552

    (130) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 130 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 553

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 556


state 554

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 557


state 555

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 558


state 556

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 559


state 557

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 153
    cte_i           shift and go to state 154
    cte_f           shift and go to state 155

    VARCONSTAUX                    shift and go to state 560

state 558

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 561


state 559

    (131) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 131 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 560

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 562


state 561

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (108) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (109) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 229
    TRUE            shift and go to state 230

    BOOLEAN                        shift and go to state 563

state 562

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 564


state 563

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 565


state 564

    (132) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 132 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 565

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 566


state 566

    (129) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 129 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 47 resolved as shift
