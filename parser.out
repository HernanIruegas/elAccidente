Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK
Rule 2     PROGRAM_A -> VARS PROGRAM_A
Rule 3     PROGRAM_A -> METHOD PROGRAM_A
Rule 4     PROGRAM_A -> empty
Rule 5     VARS -> var VARS_A
Rule 6     VARS_A -> TYPE colon VARS_B semicolon VARS_C
Rule 7     VARS_B -> SIMPLE
Rule 8     VARS_B -> LIST
Rule 9     VARS_C -> VARS_A
Rule 10    VARS_C -> empty
Rule 11    SIMPLE -> id SAVE_VAR SIMPLE_A
Rule 12    SIMPLE_A -> comma SIMPLE
Rule 13    SIMPLE_A -> empty
Rule 14    LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
Rule 15    LIST_A -> comma LIST
Rule 16    LIST_A -> empty
Rule 17    EXPLOG -> EXPRESSION EXPLOG_A
Rule 18    EXPLOG -> not EXPRESSION EXPLOG_A
Rule 19    EXPLOG_A -> and EXPLOG
Rule 20    EXPLOG_A -> or EXPLOG
Rule 21    EXPLOG_A -> empty
Rule 22    EXPRESSION -> EXP
Rule 23    EXPRESSION -> EXP EXPRESSION_A EXP
Rule 24    EXPRESSION_A -> greater
Rule 25    EXPRESSION_A -> lessThan
Rule 26    EXPRESSION_A -> greaterEquals
Rule 27    EXPRESSION_A -> lessThanEquals
Rule 28    EXPRESSION_A -> equals
Rule 29    EXPRESSION_A -> notEquals
Rule 30    EXP -> TERM EXP_A SOLVE_OPERATION
Rule 31    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 32    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 33    EXP_A -> empty
Rule 34    TERM -> FACTOR TERM_A
Rule 35    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 36    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 37    TERM_A -> empty
Rule 38    FACTOR -> lParenthesis EXPLOG rParenthesis
Rule 39    FACTOR -> VARCONSTAUX
Rule 40    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 41    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS
Rule 42    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS
Rule 43    TYPE -> int SAVE_TYPE
Rule 44    TYPE -> float SAVE_TYPE
Rule 45    TYPE -> string SAVE_TYPE
Rule 46    TYPE -> bool SAVE_TYPE
Rule 47    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 48    BLOCK_A -> STATEMENT
Rule 49    BLOCK_A -> empty
Rule 50    STATEMENT -> ASSIGNMENT
Rule 51    STATEMENT -> CONDITION
Rule 52    STATEMENT -> WRITE
Rule 53    STATEMENT -> LOOP
Rule 54    STATEMENT -> METHODCALL
Rule 55    STATEMENT -> READ
Rule 56    STATEMENT -> STATMETHODS
Rule 57    STATEMENT -> RETURN
Rule 58    ASSIGNMENT -> id ISLIST assign EXPLOG semicolon
Rule 59    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 60    READ_A -> comma
Rule 61    READ_A -> empty
Rule 62    ISLIST -> lSqrBracket EXP rSqrBracket
Rule 63    ISLIST -> empty
Rule 64    TYPEMETHOD -> TYPE
Rule 65    TYPEMETHOD -> void
Rule 66    CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon
Rule 67    CONDITION_A -> else BLOCK
Rule 68    CONDITION_A -> empty
Rule 69    WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon
Rule 70    WRITE_A -> comma EXPRESSION WRITE_A
Rule 71    WRITE_A -> empty
Rule 72    VARCTE -> id ISLIST
Rule 73    VARCTE -> cte_i
Rule 74    VARCTE -> cte_f
Rule 75    VARCTE -> cte_str
Rule 76    VARCTE -> BOOLEAN
Rule 77    METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
Rule 78    PARAMS -> EXP PARAMS_A
Rule 79    PARAMS_A -> comma EXP PARAMS_A
Rule 80    PARAMS_A -> empty
Rule 81    LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK
Rule 82    METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon
Rule 83    METHODCALL_A -> comma EXP
Rule 84    METHODCALL_A -> empty
Rule 85    RETURN -> return EXPLOG semicolon
Rule 86    BOOLEAN -> FALSE
Rule 87    BOOLEAN -> TRUE
Rule 88    STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 89    STATMETHODS -> LASSO
Rule 90    STATMETHODS -> RIDGE
Rule 91    STATMETHODS -> K_MEANS
Rule 92    STATMETHODS -> MINI_BATCH_MEANS
Rule 93    STATMETHODS -> TIME_SERIES_SPLIT
Rule 94    STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 95    STATMETHODS -> MEAN_SQUARED_ERROR
Rule 96    STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 97    STATMETHODS -> MEAN
Rule 98    STATMETHODS -> MODE
Rule 99    STATMETHODS -> MEDIAN
Rule 100   STATMETHODS -> PROBABILITY
Rule 101   STATMETHODS -> FREQUENCY
Rule 102   STATMETHODS -> VARIANCE
Rule 103   STATMETHODS -> STANDARD_DEVIATION
Rule 104   STATMETHODS -> SKEWNESS
Rule 105   STATMETHODS -> KURTOSI
Rule 106   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 107   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 108   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 109   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 110   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 111   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 112   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 113   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 114   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 115   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 116   MEAN_A -> comma id MEAN_A
Rule 117   MEAN_A -> empty
Rule 118   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 119   MODE_A -> comma id MODE_A
Rule 120   MODE_A -> empty
Rule 121   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 122   MEDIAN_A -> comma id MEDIAN_A
Rule 123   MEDIAN_A -> empty
Rule 124   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 125   PROBABILITY_A -> comma id PROBABILITY_A
Rule 126   PROBABILITY_A -> empty
Rule 127   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 128   FREQUENCY_A -> comma id FREQUENCY_A
Rule 129   FREQUENCY_A -> empty
Rule 130   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 131   VARIANCE_A -> comma id VARIANCE_A
Rule 132   VARIANCE_A -> empty
Rule 133   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 134   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 135   STANDARD_DEVIATION_A -> empty
Rule 136   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 137   SKEWNESS_A -> comma id SKEWNESS_A
Rule 138   SKEWNESS_A -> empty
Rule 139   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 140   KURTOSI_A -> comma id KURTOSI_A
Rule 141   KURTOSI_A -> empty
Rule 142   empty -> <empty>
Rule 143   START_GLOBAL_FUNCTION -> empty
Rule 144   SAVE_TYPE -> empty
Rule 145   SAVE_VAR -> empty
Rule 146   SAVE_ARRAY -> empty
Rule 147   PUSH_STACK_OPERANDS -> empty
Rule 148   PUSH_STACK_OPERATORS -> empty
Rule 149   SOLVE_OPERATION -> empty
Rule 150   GENERATE_QUAD -> empty

Terminals, with rules where they appear

FALSE                : 86
TRUE                 : 87
and                  : 19
assign               : 58
bool                 : 46
colon                : 6
comma                : 12 15 60 70 79 83 106 106 106 106 106 107 107 107 107 107 107 107 107 107 107 107 107 108 108 108 108 108 108 108 108 108 109 109 109 109 109 109 109 109 109 109 110 110 110 110 110 110 110 110 110 110 110 111 112 113 114 116 119 122 125 128 131 134 137 140
cte_f                : 42 74
cte_i                : 41 73
cte_str              : 75
divide               : 36
else                 : 67
equals               : 28
error                : 
float                : 44 107
freq                 : 127
func                 : 77
globalFunc           : 1
greater              : 24
greaterEquals        : 26
id                   : 11 14 40 58 72 77 82 106 106 107 107 108 108 112 112 113 113 114 114 115 116 118 119 121 122 124 125 127 128 130 131 133 134 136 137 139 140
if                   : 66
int                  : 43
kmeans               : 109
kurt                 : 139
lCurlyBracket        : 47
lParenthesis         : 38 59 66 69 77 81 82 106 107 108 109 110 111 112 113 114 115 118 121 124 127 130 133 136 139
lSqrBracket          : 14 62
las                  : 107
lessThan             : 25
lessThanEquals       : 27
mbm                  : 110
mean                 : 115
mean_abs_err         : 112
mean_sqr_err         : 113
median               : 121
median_abs_err       : 114
minus                : 32
mode                 : 118
not                  : 18
notEquals            : 29
ols                  : 106
or                   : 20
plus                 : 31
print                : 69
prob                 : 124
program              : 1
rCurlyBracket        : 47
rParenthesis         : 38 59 66 69 77 81 82 106 107 108 109 110 111 112 113 114 115 118 121 124 127 130 133 136 139
rSqrBracket          : 14 62
return               : 85
rid                  : 108
scan                 : 59
semicolon            : 1 6 58 66 69 77 82 85 106 107 108 109 110 111 112 113 114 115 118 121 124 127 130 133 136 139
skew                 : 136
start                : 1
stddev               : 133
string               : 45 107 108 109 109 109 110
times                : 35
tseries              : 111
var                  : 5
variance             : 130
void                 : 65
while                : 81

Nonterminals, with rules where they appear

ASSIGNMENT           : 50
BLOCK                : 1 66 67 77 81
BLOCK_A              : 47
BOOLEAN              : 76 106 106 106 107 107 107 107 107 107 108 108 108 109 110 110
CONDITION            : 51
CONDITION_A          : 66
EXP                  : 22 23 23 31 32 62 78 79 82 83
EXPLOG               : 19 20 38 58 66 81 85
EXPLOG_A             : 17 18
EXPRESSION           : 17 18 69 70
EXPRESSION_A         : 23
EXP_A                : 30
FACTOR               : 34
FREQUENCY            : 101
FREQUENCY_A          : 127 128
GENERATE_QUAD        : 
ISLIST               : 40 58 72
KURTOSI              : 105
KURTOSI_A            : 139 140
K_MEANS              : 91
LASSO                : 89
LIST                 : 8 15
LIST_A               : 14
LOOP                 : 53
MEAN                 : 97
MEAN_A               : 115 116
MEAN_ABSOLUTE_ERROR  : 94
MEAN_SQUARED_ERROR   : 95
MEDIAN               : 99
MEDIAN_A             : 121 122
MEDIAN_ABSOLUTE_ERROR : 96
METHOD               : 3
METHODCALL           : 54
METHODCALL_A         : 82
MINI_BATCH_MEANS     : 92
MODE                 : 98
MODE_A               : 118 119
ORDINARY_LEAST_SQUARES : 88
PARAMS               : 77
PARAMS_A             : 78 79
PROBABILITY          : 100
PROBABILITY_A        : 124 125
PROGRAM              : 0
PROGRAM_A            : 1 2 3
PUSH_STACK_OPERANDS  : 40 41 42
PUSH_STACK_OPERATORS : 31 32 35 36
READ                 : 55
READ_A               : 59
RETURN               : 57
RIDGE                : 90
SAVE_ARRAY           : 14
SAVE_TYPE            : 43 44 45 46
SAVE_VAR             : 11
SIMPLE               : 7 12
SIMPLE_A             : 11
SKEWNESS             : 104
SKEWNESS_A           : 136 137
SOLVE_OPERATION      : 30
STANDARD_DEVIATION   : 103
STANDARD_DEVIATION_A : 133 134
START_GLOBAL_FUNCTION : 1
STATEMENT            : 48
STATMETHODS          : 56
TERM                 : 30 35 36
TERM_A               : 34
TIME_SERIES_SPLIT    : 93
TYPE                 : 6 64
TYPEMETHOD           : 77
VARCONSTAUX          : 14 39 106 107 107 107 108 108 108 108 109 109 109 109 109 109 109 110 110 110 110 110 110 110 110 110 111 111
VARCTE               : 59
VARIANCE             : 102
VARIANCE_A           : 130 131
VARS                 : 2
VARS_A               : 5 9
VARS_B               : 6
VARS_C               : 6
WRITE                : 52
WRITE_A              : 69 70
empty                : 4 10 13 16 21 33 37 49 61 63 68 71 80 84 117 120 123 126 129 132 135 138 141 143 144 145 146 147 148 149 150

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK

    globalFunc      shift and go to state 3


state 3

    (1) PROGRAM -> program globalFunc . START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK
    (143) START_GLOBAL_FUNCTION -> . empty
    (142) empty -> .

    semicolon       reduce using rule 142 (empty -> .)

    START_GLOBAL_FUNCTION          shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION . semicolon PROGRAM_A start BLOCK

    semicolon       shift and go to state 6


state 5

    (143) START_GLOBAL_FUNCTION -> empty .

    semicolon       reduce using rule 143 (START_GLOBAL_FUNCTION -> empty .)


state 6

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon . PROGRAM_A start BLOCK
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (77) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (142) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 142 (empty -> .)

    PROGRAM_A                      shift and go to state 7
    VARS                           shift and go to state 8
    METHOD                         shift and go to state 9
    empty                          shift and go to state 10

state 7

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A . start BLOCK

    start           shift and go to state 13


state 8

    (2) PROGRAM_A -> VARS . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (77) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (142) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 142 (empty -> .)

    VARS                           shift and go to state 8
    PROGRAM_A                      shift and go to state 14
    METHOD                         shift and go to state 9
    empty                          shift and go to state 10

state 9

    (3) PROGRAM_A -> METHOD . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (77) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (142) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 142 (empty -> .)

    METHOD                         shift and go to state 9
    PROGRAM_A                      shift and go to state 15
    VARS                           shift and go to state 8
    empty                          shift and go to state 10

state 10

    (4) PROGRAM_A -> empty .

    start           reduce using rule 4 (PROGRAM_A -> empty .)


state 11

    (5) VARS -> var . VARS_A
    (6) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (43) TYPE -> . int SAVE_TYPE
    (44) TYPE -> . float SAVE_TYPE
    (45) TYPE -> . string SAVE_TYPE
    (46) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    VARS_A                         shift and go to state 16
    TYPE                           shift and go to state 17

state 12

    (77) METHOD -> func . TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (64) TYPEMETHOD -> . TYPE
    (65) TYPEMETHOD -> . void
    (43) TYPE -> . int SAVE_TYPE
    (44) TYPE -> . float SAVE_TYPE
    (45) TYPE -> . string SAVE_TYPE
    (46) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 24
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    TYPEMETHOD                     shift and go to state 22
    TYPE                           shift and go to state 23

state 13

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start . BLOCK
    (47) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 25

state 14

    (2) PROGRAM_A -> VARS PROGRAM_A .

    start           reduce using rule 2 (PROGRAM_A -> VARS PROGRAM_A .)


state 15

    (3) PROGRAM_A -> METHOD PROGRAM_A .

    start           reduce using rule 3 (PROGRAM_A -> METHOD PROGRAM_A .)


state 16

    (5) VARS -> var VARS_A .

    var             reduce using rule 5 (VARS -> var VARS_A .)
    func            reduce using rule 5 (VARS -> var VARS_A .)
    start           reduce using rule 5 (VARS -> var VARS_A .)


state 17

    (6) VARS_A -> TYPE . colon VARS_B semicolon VARS_C

    colon           shift and go to state 27


state 18

    (43) TYPE -> int . SAVE_TYPE
    (144) SAVE_TYPE -> . empty
    (142) empty -> .

    colon           reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)

    SAVE_TYPE                      shift and go to state 28
    empty                          shift and go to state 29

state 19

    (44) TYPE -> float . SAVE_TYPE
    (144) SAVE_TYPE -> . empty
    (142) empty -> .

    colon           reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)

    SAVE_TYPE                      shift and go to state 30
    empty                          shift and go to state 29

state 20

    (45) TYPE -> string . SAVE_TYPE
    (144) SAVE_TYPE -> . empty
    (142) empty -> .

    colon           reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)

    SAVE_TYPE                      shift and go to state 31
    empty                          shift and go to state 29

state 21

    (46) TYPE -> bool . SAVE_TYPE
    (144) SAVE_TYPE -> . empty
    (142) empty -> .

    colon           reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 29

state 22

    (77) METHOD -> func TYPEMETHOD . id lParenthesis PARAMS rParenthesis BLOCK semicolon

    id              shift and go to state 33


state 23

    (64) TYPEMETHOD -> TYPE .

    id              reduce using rule 64 (TYPEMETHOD -> TYPE .)


state 24

    (65) TYPEMETHOD -> void .

    id              reduce using rule 65 (TYPEMETHOD -> void .)


state 25

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK .

    $end            reduce using rule 1 (PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK .)


state 26

    (47) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (48) BLOCK_A -> . STATEMENT
    (49) BLOCK_A -> . empty
    (50) STATEMENT -> . ASSIGNMENT
    (51) STATEMENT -> . CONDITION
    (52) STATEMENT -> . WRITE
    (53) STATEMENT -> . LOOP
    (54) STATEMENT -> . METHODCALL
    (55) STATEMENT -> . READ
    (56) STATEMENT -> . STATMETHODS
    (57) STATEMENT -> . RETURN
    (142) empty -> .
    (58) ASSIGNMENT -> . id ISLIST assign EXPLOG semicolon
    (66) CONDITION -> . if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon
    (69) WRITE -> . print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon
    (81) LOOP -> . while lParenthesis EXPLOG rParenthesis BLOCK
    (82) METHODCALL -> . id lParenthesis EXP METHODCALL_A rParenthesis semicolon
    (59) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (88) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (89) STATMETHODS -> . LASSO
    (90) STATMETHODS -> . RIDGE
    (91) STATMETHODS -> . K_MEANS
    (92) STATMETHODS -> . MINI_BATCH_MEANS
    (93) STATMETHODS -> . TIME_SERIES_SPLIT
    (94) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (95) STATMETHODS -> . MEAN_SQUARED_ERROR
    (96) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (97) STATMETHODS -> . MEAN
    (98) STATMETHODS -> . MODE
    (99) STATMETHODS -> . MEDIAN
    (100) STATMETHODS -> . PROBABILITY
    (101) STATMETHODS -> . FREQUENCY
    (102) STATMETHODS -> . VARIANCE
    (103) STATMETHODS -> . STANDARD_DEVIATION
    (104) STATMETHODS -> . SKEWNESS
    (105) STATMETHODS -> . KURTOSI
    (85) RETURN -> . return EXPLOG semicolon
    (106) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (107) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (108) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (109) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (110) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (111) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (112) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (113) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (114) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (115) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (118) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (121) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (124) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (127) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (130) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (133) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (136) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (139) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 142 (empty -> .)
    id              shift and go to state 45
    if              shift and go to state 46
    print           shift and go to state 47
    while           shift and go to state 48
    scan            shift and go to state 49
    return          shift and go to state 68
    ols             shift and go to state 69
    las             shift and go to state 70
    rid             shift and go to state 71
    kmeans          shift and go to state 72
    mbm             shift and go to state 73
    tseries         shift and go to state 74
    mean_abs_err    shift and go to state 75
    mean_sqr_err    shift and go to state 76
    median_abs_err  shift and go to state 77
    mean            shift and go to state 78
    mode            shift and go to state 79
    median          shift and go to state 80
    prob            shift and go to state 81
    freq            shift and go to state 82
    variance        shift and go to state 83
    stddev          shift and go to state 84
    skew            shift and go to state 85
    kurt            shift and go to state 86

    BLOCK_A                        shift and go to state 34
    STATEMENT                      shift and go to state 35
    empty                          shift and go to state 36
    ASSIGNMENT                     shift and go to state 37
    CONDITION                      shift and go to state 38
    WRITE                          shift and go to state 39
    LOOP                           shift and go to state 40
    METHODCALL                     shift and go to state 41
    READ                           shift and go to state 42
    STATMETHODS                    shift and go to state 43
    RETURN                         shift and go to state 44
    ORDINARY_LEAST_SQUARES         shift and go to state 50
    LASSO                          shift and go to state 51
    RIDGE                          shift and go to state 52
    K_MEANS                        shift and go to state 53
    MINI_BATCH_MEANS               shift and go to state 54
    TIME_SERIES_SPLIT              shift and go to state 55
    MEAN_ABSOLUTE_ERROR            shift and go to state 56
    MEAN_SQUARED_ERROR             shift and go to state 57
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 58
    MEAN                           shift and go to state 59
    MODE                           shift and go to state 60
    MEDIAN                         shift and go to state 61
    PROBABILITY                    shift and go to state 62
    FREQUENCY                      shift and go to state 63
    VARIANCE                       shift and go to state 64
    STANDARD_DEVIATION             shift and go to state 65
    SKEWNESS                       shift and go to state 66
    KURTOSI                        shift and go to state 67

state 27

    (6) VARS_A -> TYPE colon . VARS_B semicolon VARS_C
    (7) VARS_B -> . SIMPLE
    (8) VARS_B -> . LIST
    (11) SIMPLE -> . id SAVE_VAR SIMPLE_A
    (14) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 90

    VARS_B                         shift and go to state 87
    SIMPLE                         shift and go to state 88
    LIST                           shift and go to state 89

state 28

    (43) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 43 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 43 (TYPE -> int SAVE_TYPE .)


state 29

    (144) SAVE_TYPE -> empty .

    colon           reduce using rule 144 (SAVE_TYPE -> empty .)
    id              reduce using rule 144 (SAVE_TYPE -> empty .)


state 30

    (44) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 44 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 44 (TYPE -> float SAVE_TYPE .)


state 31

    (45) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 45 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 45 (TYPE -> string SAVE_TYPE .)


state 32

    (46) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 46 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 46 (TYPE -> bool SAVE_TYPE .)


state 33

    (77) METHOD -> func TYPEMETHOD id . lParenthesis PARAMS rParenthesis BLOCK semicolon

    lParenthesis    shift and go to state 91


state 34

    (47) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 92


state 35

    (48) BLOCK_A -> STATEMENT .

    rCurlyBracket   reduce using rule 48 (BLOCK_A -> STATEMENT .)


state 36

    (49) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 49 (BLOCK_A -> empty .)


state 37

    (50) STATEMENT -> ASSIGNMENT .

    rCurlyBracket   reduce using rule 50 (STATEMENT -> ASSIGNMENT .)


state 38

    (51) STATEMENT -> CONDITION .

    rCurlyBracket   reduce using rule 51 (STATEMENT -> CONDITION .)


state 39

    (52) STATEMENT -> WRITE .

    rCurlyBracket   reduce using rule 52 (STATEMENT -> WRITE .)


state 40

    (53) STATEMENT -> LOOP .

    rCurlyBracket   reduce using rule 53 (STATEMENT -> LOOP .)


state 41

    (54) STATEMENT -> METHODCALL .

    rCurlyBracket   reduce using rule 54 (STATEMENT -> METHODCALL .)


state 42

    (55) STATEMENT -> READ .

    rCurlyBracket   reduce using rule 55 (STATEMENT -> READ .)


state 43

    (56) STATEMENT -> STATMETHODS .

    rCurlyBracket   reduce using rule 56 (STATEMENT -> STATMETHODS .)


state 44

    (57) STATEMENT -> RETURN .

    rCurlyBracket   reduce using rule 57 (STATEMENT -> RETURN .)


state 45

    (58) ASSIGNMENT -> id . ISLIST assign EXPLOG semicolon
    (82) METHODCALL -> id . lParenthesis EXP METHODCALL_A rParenthesis semicolon
    (62) ISLIST -> . lSqrBracket EXP rSqrBracket
    (63) ISLIST -> . empty
    (142) empty -> .

    lParenthesis    shift and go to state 94
    lSqrBracket     shift and go to state 95
    assign          reduce using rule 142 (empty -> .)

    ISLIST                         shift and go to state 93
    empty                          shift and go to state 96

state 46

    (66) CONDITION -> if . lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon

    lParenthesis    shift and go to state 97


state 47

    (69) WRITE -> print . lParenthesis EXPRESSION WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 98


state 48

    (81) LOOP -> while . lParenthesis EXPLOG rParenthesis BLOCK

    lParenthesis    shift and go to state 99


state 49

    (59) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 100


state 50

    (88) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    rCurlyBracket   reduce using rule 88 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 51

    (89) STATMETHODS -> LASSO .

    rCurlyBracket   reduce using rule 89 (STATMETHODS -> LASSO .)


state 52

    (90) STATMETHODS -> RIDGE .

    rCurlyBracket   reduce using rule 90 (STATMETHODS -> RIDGE .)


state 53

    (91) STATMETHODS -> K_MEANS .

    rCurlyBracket   reduce using rule 91 (STATMETHODS -> K_MEANS .)


state 54

    (92) STATMETHODS -> MINI_BATCH_MEANS .

    rCurlyBracket   reduce using rule 92 (STATMETHODS -> MINI_BATCH_MEANS .)


state 55

    (93) STATMETHODS -> TIME_SERIES_SPLIT .

    rCurlyBracket   reduce using rule 93 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 56

    (94) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    rCurlyBracket   reduce using rule 94 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 57

    (95) STATMETHODS -> MEAN_SQUARED_ERROR .

    rCurlyBracket   reduce using rule 95 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 58

    (96) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    rCurlyBracket   reduce using rule 96 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 59

    (97) STATMETHODS -> MEAN .

    rCurlyBracket   reduce using rule 97 (STATMETHODS -> MEAN .)


state 60

    (98) STATMETHODS -> MODE .

    rCurlyBracket   reduce using rule 98 (STATMETHODS -> MODE .)


state 61

    (99) STATMETHODS -> MEDIAN .

    rCurlyBracket   reduce using rule 99 (STATMETHODS -> MEDIAN .)


state 62

    (100) STATMETHODS -> PROBABILITY .

    rCurlyBracket   reduce using rule 100 (STATMETHODS -> PROBABILITY .)


state 63

    (101) STATMETHODS -> FREQUENCY .

    rCurlyBracket   reduce using rule 101 (STATMETHODS -> FREQUENCY .)


state 64

    (102) STATMETHODS -> VARIANCE .

    rCurlyBracket   reduce using rule 102 (STATMETHODS -> VARIANCE .)


state 65

    (103) STATMETHODS -> STANDARD_DEVIATION .

    rCurlyBracket   reduce using rule 103 (STATMETHODS -> STANDARD_DEVIATION .)


state 66

    (104) STATMETHODS -> SKEWNESS .

    rCurlyBracket   reduce using rule 104 (STATMETHODS -> SKEWNESS .)


state 67

    (105) STATMETHODS -> KURTOSI .

    rCurlyBracket   reduce using rule 105 (STATMETHODS -> KURTOSI .)


state 68

    (85) RETURN -> return . EXPLOG semicolon
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 101
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 69

    (106) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 112


state 70

    (107) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 113


state 71

    (108) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 114


state 72

    (109) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 115


state 73

    (110) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 116


state 74

    (111) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 117


state 75

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 118


state 76

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 119


state 77

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 120


state 78

    (115) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 121


state 79

    (118) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 122


state 80

    (121) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 123


state 81

    (124) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 124


state 82

    (127) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 125


state 83

    (130) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 126


state 84

    (133) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 127


state 85

    (136) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 128


state 86

    (139) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 129


state 87

    (6) VARS_A -> TYPE colon VARS_B . semicolon VARS_C

    semicolon       shift and go to state 130


state 88

    (7) VARS_B -> SIMPLE .

    semicolon       reduce using rule 7 (VARS_B -> SIMPLE .)


state 89

    (8) VARS_B -> LIST .

    semicolon       reduce using rule 8 (VARS_B -> LIST .)


state 90

    (11) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (14) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (145) SAVE_VAR -> . empty
    (142) empty -> .

    lSqrBracket     shift and go to state 132
    comma           reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)

    SAVE_VAR                       shift and go to state 131
    empty                          shift and go to state 133

state 91

    (77) METHOD -> func TYPEMETHOD id lParenthesis . PARAMS rParenthesis BLOCK semicolon
    (78) PARAMS -> . EXP PARAMS_A
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    PARAMS                         shift and go to state 134
    EXP                            shift and go to state 135
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 92

    (47) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 47 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    semicolon       reduce using rule 47 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 47 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 47 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 93

    (58) ASSIGNMENT -> id ISLIST . assign EXPLOG semicolon

    assign          shift and go to state 136


state 94

    (82) METHODCALL -> id lParenthesis . EXP METHODCALL_A rParenthesis semicolon
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 137
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 95

    (62) ISLIST -> lSqrBracket . EXP rSqrBracket
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 138
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 96

    (63) ISLIST -> empty .

    assign          reduce using rule 63 (ISLIST -> empty .)
    comma           reduce using rule 63 (ISLIST -> empty .)
    rParenthesis    reduce using rule 63 (ISLIST -> empty .)
    times           reduce using rule 63 (ISLIST -> empty .)
    divide          reduce using rule 63 (ISLIST -> empty .)
    plus            reduce using rule 63 (ISLIST -> empty .)
    minus           reduce using rule 63 (ISLIST -> empty .)
    greater         reduce using rule 63 (ISLIST -> empty .)
    lessThan        reduce using rule 63 (ISLIST -> empty .)
    greaterEquals   reduce using rule 63 (ISLIST -> empty .)
    lessThanEquals  reduce using rule 63 (ISLIST -> empty .)
    equals          reduce using rule 63 (ISLIST -> empty .)
    notEquals       reduce using rule 63 (ISLIST -> empty .)
    and             reduce using rule 63 (ISLIST -> empty .)
    or              reduce using rule 63 (ISLIST -> empty .)
    semicolon       reduce using rule 63 (ISLIST -> empty .)
    rSqrBracket     reduce using rule 63 (ISLIST -> empty .)


state 97

    (66) CONDITION -> if lParenthesis . EXPLOG rParenthesis BLOCK CONDITION_A semicolon
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 139
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 98

    (69) WRITE -> print lParenthesis . EXPRESSION WRITE_A rParenthesis semicolon
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 140
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 99

    (81) LOOP -> while lParenthesis . EXPLOG rParenthesis BLOCK
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 141
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 100

    (59) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (72) VARCTE -> . id ISLIST
    (73) VARCTE -> . cte_i
    (74) VARCTE -> . cte_f
    (75) VARCTE -> . cte_str
    (76) VARCTE -> . BOOLEAN
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    id              shift and go to state 143
    cte_i           shift and go to state 144
    cte_f           shift and go to state 145
    cte_str         shift and go to state 146
    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    VARCTE                         shift and go to state 142
    BOOLEAN                        shift and go to state 147

state 101

    (85) RETURN -> return EXPLOG . semicolon

    semicolon       shift and go to state 150


state 102

    (17) EXPLOG -> EXPRESSION . EXPLOG_A
    (19) EXPLOG_A -> . and EXPLOG
    (20) EXPLOG_A -> . or EXPLOG
    (21) EXPLOG_A -> . empty
    (142) empty -> .

    and             shift and go to state 152
    or              shift and go to state 153
    semicolon       reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)

    EXPLOG_A                       shift and go to state 151
    empty                          shift and go to state 154

state 103

    (18) EXPLOG -> not . EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 155
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 104

    (22) EXPRESSION -> EXP .
    (23) EXPRESSION -> EXP . EXPRESSION_A EXP
    (24) EXPRESSION_A -> . greater
    (25) EXPRESSION_A -> . lessThan
    (26) EXPRESSION_A -> . greaterEquals
    (27) EXPRESSION_A -> . lessThanEquals
    (28) EXPRESSION_A -> . equals
    (29) EXPRESSION_A -> . notEquals

    and             reduce using rule 22 (EXPRESSION -> EXP .)
    or              reduce using rule 22 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 22 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 22 (EXPRESSION -> EXP .)
    comma           reduce using rule 22 (EXPRESSION -> EXP .)
    greater         shift and go to state 157
    lessThan        shift and go to state 158
    greaterEquals   shift and go to state 159
    lessThanEquals  shift and go to state 160
    equals          shift and go to state 161
    notEquals       shift and go to state 162

    EXPRESSION_A                   shift and go to state 156

state 105

    (30) EXP -> TERM . EXP_A SOLVE_OPERATION
    (31) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (32) EXP_A -> . minus PUSH_STACK_OPERATORS EXP
    (33) EXP_A -> . empty
    (142) empty -> .

    plus            shift and go to state 164
    minus           shift and go to state 165
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    EXP_A                          shift and go to state 163
    empty                          shift and go to state 166

state 106

    (34) TERM -> FACTOR . TERM_A
    (35) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (36) TERM_A -> . divide PUSH_STACK_OPERATORS TERM
    (37) TERM_A -> . empty
    (142) empty -> .

    times           shift and go to state 168
    divide          shift and go to state 169
    plus            reduce using rule 142 (empty -> .)
    minus           reduce using rule 142 (empty -> .)
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    TERM_A                         shift and go to state 167
    empty                          shift and go to state 170

state 107

    (38) FACTOR -> lParenthesis . EXPLOG rParenthesis
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 171
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 108

    (39) FACTOR -> VARCONSTAUX .

    times           reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 39 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 39 (FACTOR -> VARCONSTAUX .)


state 109

    (40) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (147) PUSH_STACK_OPERANDS -> . empty
    (142) empty -> .

    lSqrBracket     reduce using rule 142 (empty -> .)
    times           reduce using rule 142 (empty -> .)
    divide          reduce using rule 142 (empty -> .)
    plus            reduce using rule 142 (empty -> .)
    minus           reduce using rule 142 (empty -> .)
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 172
    empty                          shift and go to state 173

state 110

    (41) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS
    (147) PUSH_STACK_OPERANDS -> . empty
    (142) empty -> .

    times           reduce using rule 142 (empty -> .)
    divide          reduce using rule 142 (empty -> .)
    plus            reduce using rule 142 (empty -> .)
    minus           reduce using rule 142 (empty -> .)
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 174
    empty                          shift and go to state 173

state 111

    (42) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS
    (147) PUSH_STACK_OPERANDS -> . empty
    (142) empty -> .

    times           reduce using rule 142 (empty -> .)
    divide          reduce using rule 142 (empty -> .)
    plus            reduce using rule 142 (empty -> .)
    minus           reduce using rule 142 (empty -> .)
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 175
    empty                          shift and go to state 173

state 112

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 176


state 113

    (107) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 177


state 114

    (108) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 178


state 115

    (109) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 179

state 116

    (110) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 180

state 117

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 181

state 118

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 182


state 119

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 183


state 120

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 184


state 121

    (115) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 185


state 122

    (118) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 186


state 123

    (121) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 187


state 124

    (124) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 188


state 125

    (127) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 189


state 126

    (130) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 190


state 127

    (133) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 191


state 128

    (136) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 192


state 129

    (139) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 193


state 130

    (6) VARS_A -> TYPE colon VARS_B semicolon . VARS_C
    (9) VARS_C -> . VARS_A
    (10) VARS_C -> . empty
    (6) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (142) empty -> .
    (43) TYPE -> . int SAVE_TYPE
    (44) TYPE -> . float SAVE_TYPE
    (45) TYPE -> . string SAVE_TYPE
    (46) TYPE -> . bool SAVE_TYPE

    var             reduce using rule 142 (empty -> .)
    func            reduce using rule 142 (empty -> .)
    start           reduce using rule 142 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    TYPE                           shift and go to state 17
    VARS_C                         shift and go to state 194
    VARS_A                         shift and go to state 195
    empty                          shift and go to state 196

state 131

    (11) SIMPLE -> id SAVE_VAR . SIMPLE_A
    (12) SIMPLE_A -> . comma SIMPLE
    (13) SIMPLE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 198
    semicolon       reduce using rule 142 (empty -> .)

    SIMPLE_A                       shift and go to state 197
    empty                          shift and go to state 199

state 132

    (14) LIST -> id lSqrBracket . VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 200

state 133

    (145) SAVE_VAR -> empty .

    comma           reduce using rule 145 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 145 (SAVE_VAR -> empty .)


state 134

    (77) METHOD -> func TYPEMETHOD id lParenthesis PARAMS . rParenthesis BLOCK semicolon

    rParenthesis    shift and go to state 201


state 135

    (78) PARAMS -> EXP . PARAMS_A
    (79) PARAMS_A -> . comma EXP PARAMS_A
    (80) PARAMS_A -> . empty
    (142) empty -> .

    comma           shift and go to state 203
    rParenthesis    reduce using rule 142 (empty -> .)

    PARAMS_A                       shift and go to state 202
    empty                          shift and go to state 204

state 136

    (58) ASSIGNMENT -> id ISLIST assign . EXPLOG semicolon
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 205
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 137

    (82) METHODCALL -> id lParenthesis EXP . METHODCALL_A rParenthesis semicolon
    (83) METHODCALL_A -> . comma EXP
    (84) METHODCALL_A -> . empty
    (142) empty -> .

    comma           shift and go to state 207
    rParenthesis    reduce using rule 142 (empty -> .)

    METHODCALL_A                   shift and go to state 206
    empty                          shift and go to state 208

state 138

    (62) ISLIST -> lSqrBracket EXP . rSqrBracket

    rSqrBracket     shift and go to state 209


state 139

    (66) CONDITION -> if lParenthesis EXPLOG . rParenthesis BLOCK CONDITION_A semicolon

    rParenthesis    shift and go to state 210


state 140

    (69) WRITE -> print lParenthesis EXPRESSION . WRITE_A rParenthesis semicolon
    (70) WRITE_A -> . comma EXPRESSION WRITE_A
    (71) WRITE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 212
    rParenthesis    reduce using rule 142 (empty -> .)

    WRITE_A                        shift and go to state 211
    empty                          shift and go to state 213

state 141

    (81) LOOP -> while lParenthesis EXPLOG . rParenthesis BLOCK

    rParenthesis    shift and go to state 214


state 142

    (59) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (60) READ_A -> . comma
    (61) READ_A -> . empty
    (142) empty -> .

    comma           shift and go to state 216
    rParenthesis    reduce using rule 142 (empty -> .)

    READ_A                         shift and go to state 215
    empty                          shift and go to state 217

state 143

    (72) VARCTE -> id . ISLIST
    (62) ISLIST -> . lSqrBracket EXP rSqrBracket
    (63) ISLIST -> . empty
    (142) empty -> .

    lSqrBracket     shift and go to state 95
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)

    ISLIST                         shift and go to state 218
    empty                          shift and go to state 96

state 144

    (73) VARCTE -> cte_i .

    comma           reduce using rule 73 (VARCTE -> cte_i .)
    rParenthesis    reduce using rule 73 (VARCTE -> cte_i .)


state 145

    (74) VARCTE -> cte_f .

    comma           reduce using rule 74 (VARCTE -> cte_f .)
    rParenthesis    reduce using rule 74 (VARCTE -> cte_f .)


state 146

    (75) VARCTE -> cte_str .

    comma           reduce using rule 75 (VARCTE -> cte_str .)
    rParenthesis    reduce using rule 75 (VARCTE -> cte_str .)


state 147

    (76) VARCTE -> BOOLEAN .

    comma           reduce using rule 76 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 76 (VARCTE -> BOOLEAN .)


state 148

    (86) BOOLEAN -> FALSE .

    comma           reduce using rule 86 (BOOLEAN -> FALSE .)
    rParenthesis    reduce using rule 86 (BOOLEAN -> FALSE .)


state 149

    (87) BOOLEAN -> TRUE .

    comma           reduce using rule 87 (BOOLEAN -> TRUE .)
    rParenthesis    reduce using rule 87 (BOOLEAN -> TRUE .)


state 150

    (85) RETURN -> return EXPLOG semicolon .

    rCurlyBracket   reduce using rule 85 (RETURN -> return EXPLOG semicolon .)


state 151

    (17) EXPLOG -> EXPRESSION EXPLOG_A .

    semicolon       reduce using rule 17 (EXPLOG -> EXPRESSION EXPLOG_A .)
    rParenthesis    reduce using rule 17 (EXPLOG -> EXPRESSION EXPLOG_A .)


state 152

    (19) EXPLOG_A -> and . EXPLOG
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 219
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 153

    (20) EXPLOG_A -> or . EXPLOG
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 220
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 154

    (21) EXPLOG_A -> empty .

    semicolon       reduce using rule 21 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 21 (EXPLOG_A -> empty .)


state 155

    (18) EXPLOG -> not EXPRESSION . EXPLOG_A
    (19) EXPLOG_A -> . and EXPLOG
    (20) EXPLOG_A -> . or EXPLOG
    (21) EXPLOG_A -> . empty
    (142) empty -> .

    and             shift and go to state 152
    or              shift and go to state 153
    semicolon       reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)

    EXPLOG_A                       shift and go to state 221
    empty                          shift and go to state 154

state 156

    (23) EXPRESSION -> EXP EXPRESSION_A . EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 222
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 157

    (24) EXPRESSION_A -> greater .

    lParenthesis    reduce using rule 24 (EXPRESSION_A -> greater .)
    id              reduce using rule 24 (EXPRESSION_A -> greater .)
    cte_i           reduce using rule 24 (EXPRESSION_A -> greater .)
    cte_f           reduce using rule 24 (EXPRESSION_A -> greater .)


state 158

    (25) EXPRESSION_A -> lessThan .

    lParenthesis    reduce using rule 25 (EXPRESSION_A -> lessThan .)
    id              reduce using rule 25 (EXPRESSION_A -> lessThan .)
    cte_i           reduce using rule 25 (EXPRESSION_A -> lessThan .)
    cte_f           reduce using rule 25 (EXPRESSION_A -> lessThan .)


state 159

    (26) EXPRESSION_A -> greaterEquals .

    lParenthesis    reduce using rule 26 (EXPRESSION_A -> greaterEquals .)
    id              reduce using rule 26 (EXPRESSION_A -> greaterEquals .)
    cte_i           reduce using rule 26 (EXPRESSION_A -> greaterEquals .)
    cte_f           reduce using rule 26 (EXPRESSION_A -> greaterEquals .)


state 160

    (27) EXPRESSION_A -> lessThanEquals .

    lParenthesis    reduce using rule 27 (EXPRESSION_A -> lessThanEquals .)
    id              reduce using rule 27 (EXPRESSION_A -> lessThanEquals .)
    cte_i           reduce using rule 27 (EXPRESSION_A -> lessThanEquals .)
    cte_f           reduce using rule 27 (EXPRESSION_A -> lessThanEquals .)


state 161

    (28) EXPRESSION_A -> equals .

    lParenthesis    reduce using rule 28 (EXPRESSION_A -> equals .)
    id              reduce using rule 28 (EXPRESSION_A -> equals .)
    cte_i           reduce using rule 28 (EXPRESSION_A -> equals .)
    cte_f           reduce using rule 28 (EXPRESSION_A -> equals .)


state 162

    (29) EXPRESSION_A -> notEquals .

    lParenthesis    reduce using rule 29 (EXPRESSION_A -> notEquals .)
    id              reduce using rule 29 (EXPRESSION_A -> notEquals .)
    cte_i           reduce using rule 29 (EXPRESSION_A -> notEquals .)
    cte_f           reduce using rule 29 (EXPRESSION_A -> notEquals .)


state 163

    (30) EXP -> TERM EXP_A . SOLVE_OPERATION
    (149) SOLVE_OPERATION -> . empty
    (142) empty -> .

    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    SOLVE_OPERATION                shift and go to state 223
    empty                          shift and go to state 224

state 164

    (31) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (148) PUSH_STACK_OPERATORS -> . empty
    (142) empty -> .

    lParenthesis    reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)
    cte_i           reduce using rule 142 (empty -> .)
    cte_f           reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 225
    empty                          shift and go to state 226

state 165

    (32) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (148) PUSH_STACK_OPERATORS -> . empty
    (142) empty -> .

    lParenthesis    reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)
    cte_i           reduce using rule 142 (empty -> .)
    cte_f           reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 227
    empty                          shift and go to state 226

state 166

    (33) EXP_A -> empty .

    greater         reduce using rule 33 (EXP_A -> empty .)
    lessThan        reduce using rule 33 (EXP_A -> empty .)
    greaterEquals   reduce using rule 33 (EXP_A -> empty .)
    lessThanEquals  reduce using rule 33 (EXP_A -> empty .)
    equals          reduce using rule 33 (EXP_A -> empty .)
    notEquals       reduce using rule 33 (EXP_A -> empty .)
    and             reduce using rule 33 (EXP_A -> empty .)
    or              reduce using rule 33 (EXP_A -> empty .)
    semicolon       reduce using rule 33 (EXP_A -> empty .)
    comma           reduce using rule 33 (EXP_A -> empty .)
    rParenthesis    reduce using rule 33 (EXP_A -> empty .)
    rSqrBracket     reduce using rule 33 (EXP_A -> empty .)


state 167

    (34) TERM -> FACTOR TERM_A .

    plus            reduce using rule 34 (TERM -> FACTOR TERM_A .)
    minus           reduce using rule 34 (TERM -> FACTOR TERM_A .)
    greater         reduce using rule 34 (TERM -> FACTOR TERM_A .)
    lessThan        reduce using rule 34 (TERM -> FACTOR TERM_A .)
    greaterEquals   reduce using rule 34 (TERM -> FACTOR TERM_A .)
    lessThanEquals  reduce using rule 34 (TERM -> FACTOR TERM_A .)
    equals          reduce using rule 34 (TERM -> FACTOR TERM_A .)
    notEquals       reduce using rule 34 (TERM -> FACTOR TERM_A .)
    and             reduce using rule 34 (TERM -> FACTOR TERM_A .)
    or              reduce using rule 34 (TERM -> FACTOR TERM_A .)
    semicolon       reduce using rule 34 (TERM -> FACTOR TERM_A .)
    comma           reduce using rule 34 (TERM -> FACTOR TERM_A .)
    rParenthesis    reduce using rule 34 (TERM -> FACTOR TERM_A .)
    rSqrBracket     reduce using rule 34 (TERM -> FACTOR TERM_A .)


state 168

    (35) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (148) PUSH_STACK_OPERATORS -> . empty
    (142) empty -> .

    lParenthesis    reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)
    cte_i           reduce using rule 142 (empty -> .)
    cte_f           reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 228
    empty                          shift and go to state 226

state 169

    (36) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (148) PUSH_STACK_OPERATORS -> . empty
    (142) empty -> .

    lParenthesis    reduce using rule 142 (empty -> .)
    id              reduce using rule 142 (empty -> .)
    cte_i           reduce using rule 142 (empty -> .)
    cte_f           reduce using rule 142 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 229
    empty                          shift and go to state 226

state 170

    (37) TERM_A -> empty .

    plus            reduce using rule 37 (TERM_A -> empty .)
    minus           reduce using rule 37 (TERM_A -> empty .)
    greater         reduce using rule 37 (TERM_A -> empty .)
    lessThan        reduce using rule 37 (TERM_A -> empty .)
    greaterEquals   reduce using rule 37 (TERM_A -> empty .)
    lessThanEquals  reduce using rule 37 (TERM_A -> empty .)
    equals          reduce using rule 37 (TERM_A -> empty .)
    notEquals       reduce using rule 37 (TERM_A -> empty .)
    and             reduce using rule 37 (TERM_A -> empty .)
    or              reduce using rule 37 (TERM_A -> empty .)
    semicolon       reduce using rule 37 (TERM_A -> empty .)
    comma           reduce using rule 37 (TERM_A -> empty .)
    rParenthesis    reduce using rule 37 (TERM_A -> empty .)
    rSqrBracket     reduce using rule 37 (TERM_A -> empty .)


state 171

    (38) FACTOR -> lParenthesis EXPLOG . rParenthesis

    rParenthesis    shift and go to state 230


state 172

    (40) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (62) ISLIST -> . lSqrBracket EXP rSqrBracket
    (63) ISLIST -> . empty
    (142) empty -> .

    lSqrBracket     shift and go to state 95
    times           reduce using rule 142 (empty -> .)
    divide          reduce using rule 142 (empty -> .)
    plus            reduce using rule 142 (empty -> .)
    minus           reduce using rule 142 (empty -> .)
    greater         reduce using rule 142 (empty -> .)
    lessThan        reduce using rule 142 (empty -> .)
    greaterEquals   reduce using rule 142 (empty -> .)
    lessThanEquals  reduce using rule 142 (empty -> .)
    equals          reduce using rule 142 (empty -> .)
    notEquals       reduce using rule 142 (empty -> .)
    and             reduce using rule 142 (empty -> .)
    or              reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)
    comma           reduce using rule 142 (empty -> .)
    rParenthesis    reduce using rule 142 (empty -> .)
    rSqrBracket     reduce using rule 142 (empty -> .)

    ISLIST                         shift and go to state 231
    empty                          shift and go to state 96

state 173

    (147) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 147 (PUSH_STACK_OPERANDS -> empty .)


state 174

    (41) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .

    times           reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    divide          reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    plus            reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    minus           reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    greater         reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    lessThan        reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    greaterEquals   reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    lessThanEquals  reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    equals          reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    notEquals       reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    and             reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    or              reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    semicolon       reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    comma           reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    rParenthesis    reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)
    rSqrBracket     reduce using rule 41 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS .)


state 175

    (42) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .

    times           reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    divide          reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    plus            reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    minus           reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    greater         reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    lessThan        reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    greaterEquals   reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    lessThanEquals  reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    equals          reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    notEquals       reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    and             reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    or              reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    semicolon       reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    comma           reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    rParenthesis    reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)
    rSqrBracket     reduce using rule 42 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS .)


state 176

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 232


state 177

    (107) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 233


state 178

    (108) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 234


state 179

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 235


state 180

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 236


state 181

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 237


state 182

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 238


state 183

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 239


state 184

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 240


state 185

    (115) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (116) MEAN_A -> . comma id MEAN_A
    (117) MEAN_A -> . empty
    (142) empty -> .

    comma           shift and go to state 242
    rParenthesis    reduce using rule 142 (empty -> .)

    MEAN_A                         shift and go to state 241
    empty                          shift and go to state 243

state 186

    (118) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (119) MODE_A -> . comma id MODE_A
    (120) MODE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 245
    rParenthesis    reduce using rule 142 (empty -> .)

    MODE_A                         shift and go to state 244
    empty                          shift and go to state 246

state 187

    (121) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (122) MEDIAN_A -> . comma id MEDIAN_A
    (123) MEDIAN_A -> . empty
    (142) empty -> .

    comma           shift and go to state 248
    rParenthesis    reduce using rule 142 (empty -> .)

    MEDIAN_A                       shift and go to state 247
    empty                          shift and go to state 249

state 188

    (124) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (125) PROBABILITY_A -> . comma id PROBABILITY_A
    (126) PROBABILITY_A -> . empty
    (142) empty -> .

    comma           shift and go to state 251
    rParenthesis    reduce using rule 142 (empty -> .)

    PROBABILITY_A                  shift and go to state 250
    empty                          shift and go to state 252

state 189

    (127) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (128) FREQUENCY_A -> . comma id FREQUENCY_A
    (129) FREQUENCY_A -> . empty
    (142) empty -> .

    comma           shift and go to state 254
    rParenthesis    reduce using rule 142 (empty -> .)

    FREQUENCY_A                    shift and go to state 253
    empty                          shift and go to state 255

state 190

    (130) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (131) VARIANCE_A -> . comma id VARIANCE_A
    (132) VARIANCE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 257
    rParenthesis    reduce using rule 142 (empty -> .)

    VARIANCE_A                     shift and go to state 256
    empty                          shift and go to state 258

state 191

    (133) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (134) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (135) STANDARD_DEVIATION_A -> . empty
    (142) empty -> .

    comma           shift and go to state 260
    rParenthesis    reduce using rule 142 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 259
    empty                          shift and go to state 261

state 192

    (136) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (137) SKEWNESS_A -> . comma id SKEWNESS_A
    (138) SKEWNESS_A -> . empty
    (142) empty -> .

    comma           shift and go to state 263
    rParenthesis    reduce using rule 142 (empty -> .)

    SKEWNESS_A                     shift and go to state 262
    empty                          shift and go to state 264

state 193

    (139) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (140) KURTOSI_A -> . comma id KURTOSI_A
    (141) KURTOSI_A -> . empty
    (142) empty -> .

    comma           shift and go to state 266
    rParenthesis    reduce using rule 142 (empty -> .)

    KURTOSI_A                      shift and go to state 265
    empty                          shift and go to state 267

state 194

    (6) VARS_A -> TYPE colon VARS_B semicolon VARS_C .

    var             reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    func            reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    start           reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)


state 195

    (9) VARS_C -> VARS_A .

    var             reduce using rule 9 (VARS_C -> VARS_A .)
    func            reduce using rule 9 (VARS_C -> VARS_A .)
    start           reduce using rule 9 (VARS_C -> VARS_A .)


state 196

    (10) VARS_C -> empty .

    var             reduce using rule 10 (VARS_C -> empty .)
    func            reduce using rule 10 (VARS_C -> empty .)
    start           reduce using rule 10 (VARS_C -> empty .)


state 197

    (11) SIMPLE -> id SAVE_VAR SIMPLE_A .

    semicolon       reduce using rule 11 (SIMPLE -> id SAVE_VAR SIMPLE_A .)


state 198

    (12) SIMPLE_A -> comma . SIMPLE
    (11) SIMPLE -> . id SAVE_VAR SIMPLE_A

    id              shift and go to state 269

    SIMPLE                         shift and go to state 268

state 199

    (13) SIMPLE_A -> empty .

    semicolon       reduce using rule 13 (SIMPLE_A -> empty .)


state 200

    (14) LIST -> id lSqrBracket VARCONSTAUX . rSqrBracket SAVE_ARRAY LIST_A

    rSqrBracket     shift and go to state 270


state 201

    (77) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis . BLOCK semicolon
    (47) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 271

state 202

    (78) PARAMS -> EXP PARAMS_A .

    rParenthesis    reduce using rule 78 (PARAMS -> EXP PARAMS_A .)


state 203

    (79) PARAMS_A -> comma . EXP PARAMS_A
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 272
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 204

    (80) PARAMS_A -> empty .

    rParenthesis    reduce using rule 80 (PARAMS_A -> empty .)


state 205

    (58) ASSIGNMENT -> id ISLIST assign EXPLOG . semicolon

    semicolon       shift and go to state 273


state 206

    (82) METHODCALL -> id lParenthesis EXP METHODCALL_A . rParenthesis semicolon

    rParenthesis    shift and go to state 274


state 207

    (83) METHODCALL_A -> comma . EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 275
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 208

    (84) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 84 (METHODCALL_A -> empty .)


state 209

    (62) ISLIST -> lSqrBracket EXP rSqrBracket .

    assign          reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    comma           reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rParenthesis    reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    times           reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    divide          reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    plus            reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    minus           reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greater         reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThan        reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greaterEquals   reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThanEquals  reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    equals          reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    notEquals       reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    and             reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    or              reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    semicolon       reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rSqrBracket     reduce using rule 62 (ISLIST -> lSqrBracket EXP rSqrBracket .)


state 210

    (66) CONDITION -> if lParenthesis EXPLOG rParenthesis . BLOCK CONDITION_A semicolon
    (47) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 276

state 211

    (69) WRITE -> print lParenthesis EXPRESSION WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 277


state 212

    (70) WRITE_A -> comma . EXPRESSION WRITE_A
    (22) EXPRESSION -> . EXP
    (23) EXPRESSION -> . EXP EXPRESSION_A EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 278
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 213

    (71) WRITE_A -> empty .

    rParenthesis    reduce using rule 71 (WRITE_A -> empty .)


state 214

    (81) LOOP -> while lParenthesis EXPLOG rParenthesis . BLOCK
    (47) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 279

state 215

    (59) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 280


state 216

    (60) READ_A -> comma .

    rParenthesis    reduce using rule 60 (READ_A -> comma .)


state 217

    (61) READ_A -> empty .

    rParenthesis    reduce using rule 61 (READ_A -> empty .)


state 218

    (72) VARCTE -> id ISLIST .

    comma           reduce using rule 72 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 72 (VARCTE -> id ISLIST .)


state 219

    (19) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 19 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 19 (EXPLOG_A -> and EXPLOG .)


state 220

    (20) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 20 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 20 (EXPLOG_A -> or EXPLOG .)


state 221

    (18) EXPLOG -> not EXPRESSION EXPLOG_A .

    semicolon       reduce using rule 18 (EXPLOG -> not EXPRESSION EXPLOG_A .)
    rParenthesis    reduce using rule 18 (EXPLOG -> not EXPRESSION EXPLOG_A .)


state 222

    (23) EXPRESSION -> EXP EXPRESSION_A EXP .

    and             reduce using rule 23 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    or              reduce using rule 23 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    semicolon       reduce using rule 23 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    rParenthesis    reduce using rule 23 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    comma           reduce using rule 23 (EXPRESSION -> EXP EXPRESSION_A EXP .)


state 223

    (30) EXP -> TERM EXP_A SOLVE_OPERATION .

    greater         reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    lessThan        reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    greaterEquals   reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    lessThanEquals  reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    equals          reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    notEquals       reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    and             reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    or              reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    semicolon       reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    comma           reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    rParenthesis    reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)
    rSqrBracket     reduce using rule 30 (EXP -> TERM EXP_A SOLVE_OPERATION .)


state 224

    (149) SOLVE_OPERATION -> empty .

    greater         reduce using rule 149 (SOLVE_OPERATION -> empty .)
    lessThan        reduce using rule 149 (SOLVE_OPERATION -> empty .)
    greaterEquals   reduce using rule 149 (SOLVE_OPERATION -> empty .)
    lessThanEquals  reduce using rule 149 (SOLVE_OPERATION -> empty .)
    equals          reduce using rule 149 (SOLVE_OPERATION -> empty .)
    notEquals       reduce using rule 149 (SOLVE_OPERATION -> empty .)
    and             reduce using rule 149 (SOLVE_OPERATION -> empty .)
    or              reduce using rule 149 (SOLVE_OPERATION -> empty .)
    semicolon       reduce using rule 149 (SOLVE_OPERATION -> empty .)
    comma           reduce using rule 149 (SOLVE_OPERATION -> empty .)
    rParenthesis    reduce using rule 149 (SOLVE_OPERATION -> empty .)
    rSqrBracket     reduce using rule 149 (SOLVE_OPERATION -> empty .)


state 225

    (31) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 281
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 226

    (148) PUSH_STACK_OPERATORS -> empty .

    lParenthesis    reduce using rule 148 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 148 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 148 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 148 (PUSH_STACK_OPERATORS -> empty .)


state 227

    (32) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (30) EXP -> . TERM EXP_A SOLVE_OPERATION
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 282
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 228

    (35) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    TERM                           shift and go to state 283
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 229

    (36) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (34) TERM -> . FACTOR TERM_A
    (38) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (39) FACTOR -> . VARCONSTAUX
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    TERM                           shift and go to state 284
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 230

    (38) FACTOR -> lParenthesis EXPLOG rParenthesis .

    times           reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    divide          reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    plus            reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    minus           reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    greater         reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    lessThan        reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    greaterEquals   reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    lessThanEquals  reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    equals          reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    notEquals       reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    and             reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    or              reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    semicolon       reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    comma           reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    rParenthesis    reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    rSqrBracket     reduce using rule 38 (FACTOR -> lParenthesis EXPLOG rParenthesis .)


state 231

    (40) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 40 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 232

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 285


state 233

    (107) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 286


state 234

    (108) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 287


state 235

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 288


state 236

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 289


state 237

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 290

state 238

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 291


state 239

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 292


state 240

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 293


state 241

    (115) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 294


state 242

    (116) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 295


state 243

    (117) MEAN_A -> empty .

    rParenthesis    reduce using rule 117 (MEAN_A -> empty .)


state 244

    (118) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 296


state 245

    (119) MODE_A -> comma . id MODE_A

    id              shift and go to state 297


state 246

    (120) MODE_A -> empty .

    rParenthesis    reduce using rule 120 (MODE_A -> empty .)


state 247

    (121) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 298


state 248

    (122) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 299


state 249

    (123) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 123 (MEDIAN_A -> empty .)


state 250

    (124) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 300


state 251

    (125) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 301


state 252

    (126) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 126 (PROBABILITY_A -> empty .)


state 253

    (127) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 302


state 254

    (128) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 303


state 255

    (129) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 129 (FREQUENCY_A -> empty .)


state 256

    (130) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 304


state 257

    (131) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 305


state 258

    (132) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 132 (VARIANCE_A -> empty .)


state 259

    (133) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 306


state 260

    (134) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 307


state 261

    (135) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 135 (STANDARD_DEVIATION_A -> empty .)


state 262

    (136) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 308


state 263

    (137) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 309


state 264

    (138) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 138 (SKEWNESS_A -> empty .)


state 265

    (139) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 310


state 266

    (140) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 311


state 267

    (141) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 141 (KURTOSI_A -> empty .)


state 268

    (12) SIMPLE_A -> comma SIMPLE .

    semicolon       reduce using rule 12 (SIMPLE_A -> comma SIMPLE .)


state 269

    (11) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (145) SAVE_VAR -> . empty
    (142) empty -> .

    comma           reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)

    SAVE_VAR                       shift and go to state 131
    empty                          shift and go to state 133

state 270

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket . SAVE_ARRAY LIST_A
    (146) SAVE_ARRAY -> . empty
    (142) empty -> .

    comma           reduce using rule 142 (empty -> .)
    semicolon       reduce using rule 142 (empty -> .)

    SAVE_ARRAY                     shift and go to state 312
    empty                          shift and go to state 313

state 271

    (77) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK . semicolon

    semicolon       shift and go to state 314


state 272

    (79) PARAMS_A -> comma EXP . PARAMS_A
    (79) PARAMS_A -> . comma EXP PARAMS_A
    (80) PARAMS_A -> . empty
    (142) empty -> .

    comma           shift and go to state 203
    rParenthesis    reduce using rule 142 (empty -> .)

    PARAMS_A                       shift and go to state 315
    empty                          shift and go to state 204

state 273

    (58) ASSIGNMENT -> id ISLIST assign EXPLOG semicolon .

    rCurlyBracket   reduce using rule 58 (ASSIGNMENT -> id ISLIST assign EXPLOG semicolon .)


state 274

    (82) METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis . semicolon

    semicolon       shift and go to state 316


state 275

    (83) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 83 (METHODCALL_A -> comma EXP .)


state 276

    (66) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK . CONDITION_A semicolon
    (67) CONDITION_A -> . else BLOCK
    (68) CONDITION_A -> . empty
    (142) empty -> .

    else            shift and go to state 318
    semicolon       reduce using rule 142 (empty -> .)

    CONDITION_A                    shift and go to state 317
    empty                          shift and go to state 319

state 277

    (69) WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 320


state 278

    (70) WRITE_A -> comma EXPRESSION . WRITE_A
    (70) WRITE_A -> . comma EXPRESSION WRITE_A
    (71) WRITE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 212
    rParenthesis    reduce using rule 142 (empty -> .)

    WRITE_A                        shift and go to state 321
    empty                          shift and go to state 213

state 279

    (81) LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK .

    rCurlyBracket   reduce using rule 81 (LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK .)


state 280

    (59) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    rCurlyBracket   reduce using rule 59 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 281

    (31) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 31 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 282

    (32) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 32 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 283

    (35) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 35 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 284

    (36) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 36 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 285

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 322


state 286

    (107) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 323


state 287

    (108) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 324


state 288

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 325


state 289

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 326


state 290

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 327


state 291

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 328


state 292

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 329


state 293

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 330


state 294

    (115) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 331


state 295

    (116) MEAN_A -> comma id . MEAN_A
    (116) MEAN_A -> . comma id MEAN_A
    (117) MEAN_A -> . empty
    (142) empty -> .

    comma           shift and go to state 242
    rParenthesis    reduce using rule 142 (empty -> .)

    MEAN_A                         shift and go to state 332
    empty                          shift and go to state 243

state 296

    (118) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 333


state 297

    (119) MODE_A -> comma id . MODE_A
    (119) MODE_A -> . comma id MODE_A
    (120) MODE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 245
    rParenthesis    reduce using rule 142 (empty -> .)

    MODE_A                         shift and go to state 334
    empty                          shift and go to state 246

state 298

    (121) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 335


state 299

    (122) MEDIAN_A -> comma id . MEDIAN_A
    (122) MEDIAN_A -> . comma id MEDIAN_A
    (123) MEDIAN_A -> . empty
    (142) empty -> .

    comma           shift and go to state 248
    rParenthesis    reduce using rule 142 (empty -> .)

    MEDIAN_A                       shift and go to state 336
    empty                          shift and go to state 249

state 300

    (124) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 337


state 301

    (125) PROBABILITY_A -> comma id . PROBABILITY_A
    (125) PROBABILITY_A -> . comma id PROBABILITY_A
    (126) PROBABILITY_A -> . empty
    (142) empty -> .

    comma           shift and go to state 251
    rParenthesis    reduce using rule 142 (empty -> .)

    PROBABILITY_A                  shift and go to state 338
    empty                          shift and go to state 252

state 302

    (127) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 339


state 303

    (128) FREQUENCY_A -> comma id . FREQUENCY_A
    (128) FREQUENCY_A -> . comma id FREQUENCY_A
    (129) FREQUENCY_A -> . empty
    (142) empty -> .

    comma           shift and go to state 254
    rParenthesis    reduce using rule 142 (empty -> .)

    FREQUENCY_A                    shift and go to state 340
    empty                          shift and go to state 255

state 304

    (130) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 341


state 305

    (131) VARIANCE_A -> comma id . VARIANCE_A
    (131) VARIANCE_A -> . comma id VARIANCE_A
    (132) VARIANCE_A -> . empty
    (142) empty -> .

    comma           shift and go to state 257
    rParenthesis    reduce using rule 142 (empty -> .)

    VARIANCE_A                     shift and go to state 342
    empty                          shift and go to state 258

state 306

    (133) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 343


state 307

    (134) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (134) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (135) STANDARD_DEVIATION_A -> . empty
    (142) empty -> .

    comma           shift and go to state 260
    rParenthesis    reduce using rule 142 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 344
    empty                          shift and go to state 261

state 308

    (136) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 345


state 309

    (137) SKEWNESS_A -> comma id . SKEWNESS_A
    (137) SKEWNESS_A -> . comma id SKEWNESS_A
    (138) SKEWNESS_A -> . empty
    (142) empty -> .

    comma           shift and go to state 263
    rParenthesis    reduce using rule 142 (empty -> .)

    SKEWNESS_A                     shift and go to state 346
    empty                          shift and go to state 264

state 310

    (139) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 347


state 311

    (140) KURTOSI_A -> comma id . KURTOSI_A
    (140) KURTOSI_A -> . comma id KURTOSI_A
    (141) KURTOSI_A -> . empty
    (142) empty -> .

    comma           shift and go to state 266
    rParenthesis    reduce using rule 142 (empty -> .)

    KURTOSI_A                      shift and go to state 348
    empty                          shift and go to state 267

state 312

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY . LIST_A
    (15) LIST_A -> . comma LIST
    (16) LIST_A -> . empty
    (142) empty -> .

    comma           shift and go to state 350
    semicolon       reduce using rule 142 (empty -> .)

    LIST_A                         shift and go to state 349
    empty                          shift and go to state 351

state 313

    (146) SAVE_ARRAY -> empty .

    comma           reduce using rule 146 (SAVE_ARRAY -> empty .)
    semicolon       reduce using rule 146 (SAVE_ARRAY -> empty .)


state 314

    (77) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .

    var             reduce using rule 77 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)
    func            reduce using rule 77 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)
    start           reduce using rule 77 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)


state 315

    (79) PARAMS_A -> comma EXP PARAMS_A .

    rParenthesis    reduce using rule 79 (PARAMS_A -> comma EXP PARAMS_A .)


state 316

    (82) METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 82 (METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon .)


state 317

    (66) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A . semicolon

    semicolon       shift and go to state 352


state 318

    (67) CONDITION_A -> else . BLOCK
    (47) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 353

state 319

    (68) CONDITION_A -> empty .

    semicolon       reduce using rule 68 (CONDITION_A -> empty .)


state 320

    (69) WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 69 (WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon .)


state 321

    (70) WRITE_A -> comma EXPRESSION WRITE_A .

    rParenthesis    reduce using rule 70 (WRITE_A -> comma EXPRESSION WRITE_A .)


state 322

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 354

state 323

    (107) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 355

state 324

    (108) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 356

state 325

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 357

state 326

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 358

state 327

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 359


state 328

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 360


state 329

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 361


state 330

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 362


state 331

    (115) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 115 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 332

    (116) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 116 (MEAN_A -> comma id MEAN_A .)


state 333

    (118) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 118 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 334

    (119) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 119 (MODE_A -> comma id MODE_A .)


state 335

    (121) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 121 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 336

    (122) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 122 (MEDIAN_A -> comma id MEDIAN_A .)


state 337

    (124) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 124 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 338

    (125) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 125 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 339

    (127) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 127 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 340

    (128) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 128 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 341

    (130) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 130 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 342

    (131) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 131 (VARIANCE_A -> comma id VARIANCE_A .)


state 343

    (133) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 133 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 344

    (134) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 134 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 345

    (136) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 136 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 346

    (137) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 137 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 347

    (139) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 139 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 348

    (140) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 140 (KURTOSI_A -> comma id KURTOSI_A .)


state 349

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .

    semicolon       reduce using rule 14 (LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .)


state 350

    (15) LIST_A -> comma . LIST
    (14) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 364

    LIST                           shift and go to state 363

state 351

    (16) LIST_A -> empty .

    semicolon       reduce using rule 16 (LIST_A -> empty .)


state 352

    (66) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon .

    rCurlyBracket   reduce using rule 66 (CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon .)


state 353

    (67) CONDITION_A -> else BLOCK .

    semicolon       reduce using rule 67 (CONDITION_A -> else BLOCK .)


state 354

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 365


state 355

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 366


state 356

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 367


state 357

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 368


state 358

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 369


state 359

    (111) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 111 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 360

    (112) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 112 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 361

    (113) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 113 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 362

    (114) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 114 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 363

    (15) LIST_A -> comma LIST .

    semicolon       reduce using rule 15 (LIST_A -> comma LIST .)


state 364

    (14) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    lSqrBracket     shift and go to state 132


state 365

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 370

state 366

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 371

state 367

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 372

state 368

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 373

state 369

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 374

state 370

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 375


state 371

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 376


state 372

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 377


state 373

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 378


state 374

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 379


state 375

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 380

state 376

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 381

state 377

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 382

state 378

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 383

state 379

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 384

state 380

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 385


state 381

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 386


state 382

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 387


state 383

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 388


state 384

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 389


state 385

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 390

state 386

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 391

state 387

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 392

state 388

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 393


state 389

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 394

state 390

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 395


state 391

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 396


state 392

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 397


state 393

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 398


state 394

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 399


state 395

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 400


state 396

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 401

state 397

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 402

state 398

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 403

state 399

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 404

state 400

    (106) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    rCurlyBracket   reduce using rule 106 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 401

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 405


state 402

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 406


state 403

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 407


state 404

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 408


state 405

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 409

state 406

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 410

state 407

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 411

state 408

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 412

state 409

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 413


state 410

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 414


state 411

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 415


state 412

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 416


state 413

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 417

state 414

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 418


state 415

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 419

state 416

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 420

state 417

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 421


state 418

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 422


state 419

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 423


state 420

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 424


state 421

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 425

state 422

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 426

state 423

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 427

state 424

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 428

state 425

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 429


state 426

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 430


state 427

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 431


state 428

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 432


state 429

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 433


state 430

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 434


state 431

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 435


state 432

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 436

state 433

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 437


state 434

    (108) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 108 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 435

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 438


state 436

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 439


state 437

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 440


state 438

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 441


state 439

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (40) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (41) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS
    (42) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 442

state 440

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 443


state 441

    (109) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    rCurlyBracket   reduce using rule 109 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 442

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 444


state 443

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (86) BOOLEAN -> . FALSE
    (87) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 445

state 444

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 446


state 445

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 447


state 446

    (110) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 110 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 447

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 448


state 448

    (107) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    rCurlyBracket   reduce using rule 107 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

