Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
Rule 2     GENERATE_GOTO_MAIN -> empty
Rule 3     FILL_GOTO_MAIN -> empty
Rule 4     PROGRAM_A -> VARS PROGRAM_A
Rule 5     PROGRAM_A -> METHOD PROGRAM_B
Rule 6     PROGRAM_A -> empty
Rule 7     PROGRAM_B -> METHOD PROGRAM_B
Rule 8     PROGRAM_B -> empty
Rule 9     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 10    VARS_A -> id assign VARCTE_AUX_VARS SIMPLE
Rule 11    VARS_A -> id SAVE_VAR SIMPLE
Rule 12    VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
Rule 13    VARS_A -> empty
Rule 14    VARS_B -> VARS
Rule 15    VARS_B -> empty
Rule 16    SIMPLE -> comma VARS_A
Rule 17    SIMPLE -> empty
Rule 18    LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
Rule 19    LIST -> empty
Rule 20    LIST_A -> comma VARS_A
Rule 21    LIST_A -> empty
Rule 22    VARCTE_AUX_VARS -> id ISLIST
Rule 23    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 24    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 25    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 26    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 27    BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR
Rule 28    BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR
Rule 29    VALIDATE_NAME_ARRAY -> empty
Rule 30    ACUMULATE_R -> empty
Rule 31    CALCULATE_ARRAY -> empty
Rule 32    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 33    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 34    EXPLOG_A -> and EXPLOG
Rule 35    EXPLOG_A -> or EXPLOG
Rule 36    EXPLOG_A -> empty
Rule 37    EXPRESSION -> EXP
Rule 38    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 39    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 40    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 41    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 42    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 43    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 44    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 45    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 46    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 47    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 48    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 49    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 50    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 51    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 52    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 53    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 54    FACTOR -> VARCONSTAUX
Rule 55    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 56    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 57    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 58    TYPE -> int SAVE_TYPE
Rule 59    TYPE -> float SAVE_TYPE
Rule 60    TYPE -> string SAVE_TYPE
Rule 61    TYPE -> bool SAVE_TYPE
Rule 62    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 63    BLOCK_A -> STATEMENT BLOCK_A
Rule 64    BLOCK_A -> empty
Rule 65    STATEMENT -> ASSIGNMENT
Rule 66    STATEMENT -> CONDITION
Rule 67    STATEMENT -> WRITE
Rule 68    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 69    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 70    STATEMENT -> METHODCALL
Rule 71    STATEMENT -> READ
Rule 72    STATEMENT -> STATMETHODS
Rule 73    STATEMENT -> RETURN
Rule 74    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
Rule 75    ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 76    ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX
Rule 77    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 78    READ_A -> comma
Rule 79    READ_A -> empty
Rule 80    p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty
Rule 81    ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
Rule 82    ISLIST -> empty SOLVE_OFFSETS
Rule 83    VALIDATE_INDEX -> empty
Rule 84    SOLVE_OFFSETS -> empty
Rule 85    TYPEMETHOD -> TYPE
Rule 86    TYPEMETHOD -> void SAVE_TYPE
Rule 87    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 88    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 89    CONDITION_A -> empty
Rule 90    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 91    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 92    WRITE_A -> empty
Rule 93    VARCTE -> id ISLIST
Rule 94    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 95    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 96    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 97    VARCTE -> BOOLEAN
Rule 98    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 99    METHOD_A -> PARAMS
Rule 100   METHOD_A -> empty
Rule 101   PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 102   PARAMS_A -> comma PARAMS
Rule 103   PARAMS_A -> empty
Rule 104   PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 105   POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 106   METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 107   METHODCALL_A -> EXP VALIDATE_PARAMETER
Rule 108   METHODCALL_A -> empty
Rule 109   METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B
Rule 110   METHODCALL_B -> empty
Rule 111   RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon
Rule 112   GENERATE_QUAD_RETURN -> empty
Rule 113   BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT
Rule 114   BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT
Rule 115   STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 116   STATMETHODS -> LASSO
Rule 117   STATMETHODS -> RIDGE
Rule 118   STATMETHODS -> K_MEANS
Rule 119   STATMETHODS -> MINI_BATCH_MEANS
Rule 120   STATMETHODS -> TIME_SERIES_SPLIT
Rule 121   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 122   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 123   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 124   STATMETHODS -> MEAN
Rule 125   STATMETHODS -> MODE
Rule 126   STATMETHODS -> MEDIAN
Rule 127   STATMETHODS -> PROBABILITY
Rule 128   STATMETHODS -> FREQUENCY
Rule 129   STATMETHODS -> VARIANCE
Rule 130   STATMETHODS -> STANDARD_DEVIATION
Rule 131   STATMETHODS -> SKEWNESS
Rule 132   STATMETHODS -> KURTOSI
Rule 133   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 134   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 135   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 136   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 137   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 138   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 139   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 140   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 141   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 142   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 143   MEAN_A -> comma id MEAN_A
Rule 144   MEAN_A -> empty
Rule 145   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 146   MODE_A -> comma id MODE_A
Rule 147   MODE_A -> empty
Rule 148   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 149   MEDIAN_A -> comma id MEDIAN_A
Rule 150   MEDIAN_A -> empty
Rule 151   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 152   PROBABILITY_A -> comma id PROBABILITY_A
Rule 153   PROBABILITY_A -> empty
Rule 154   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 155   FREQUENCY_A -> comma id FREQUENCY_A
Rule 156   FREQUENCY_A -> empty
Rule 157   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 158   VARIANCE_A -> comma id VARIANCE_A
Rule 159   VARIANCE_A -> empty
Rule 160   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 161   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 162   STANDARD_DEVIATION_A -> empty
Rule 163   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 164   SKEWNESS_A -> comma id SKEWNESS_A
Rule 165   SKEWNESS_A -> empty
Rule 166   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 167   KURTOSI_A -> comma id KURTOSI_A
Rule 168   KURTOSI_A -> empty
Rule 169   empty -> <empty>
Rule 170   START_FUNCTION -> empty
Rule 171   SAVE_TYPE -> empty
Rule 172   SAVE_VAR -> empty
Rule 173   SAVE_ASSIGNED_VAR -> empty
Rule 174   SAVE_PARAM -> empty
Rule 175   INCREMENT_PARAM_COUNTER -> empty
Rule 176   SAVE_COUNTER_PARAM -> empty
Rule 177   SAVE_COUNTER_QUAD -> empty
Rule 178   END_PROCEDURE -> empty
Rule 179   SAVE_PARAM_TYPE -> empty
Rule 180   VALIDATE_FUNCTION_NAME -> empty
Rule 181   ERA -> empty
Rule 182   VALIDATE_PARAMETER -> empty
Rule 183   VALIDATE_METHOD_CALL -> empty
Rule 184   PUSH_STACK_OPERANDS -> empty
Rule 185   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 186   PUSH_STACK_OPERATORS -> empty
Rule 187   POP_STACK_OPERATORS -> empty
Rule 188   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 189   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 190   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 191   SOLVE_OPERATION_LOGIC -> empty
Rule 192   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 193   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 194   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 195   GENERATE_GOTO_CONDITIONAL -> empty
Rule 196   PUSH_STACK_JUMPS -> empty
Rule 197   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 198   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 199   GENERATE_QUAD_PRINT -> empty
Rule 200   PRINTQUADS -> empty

Terminals, with rules where they appear

FALSE                : 27 113
TRUE                 : 28 114
and                  : 34
assign               : 10 74
bool                 : 61
colon                : 9
comma                : 16 20 78 91 102 109 133 133 133 133 133 134 134 134 134 134 134 134 134 134 134 134 134 135 135 135 135 135 135 135 135 135 136 136 136 136 136 136 136 136 136 136 137 137 137 137 137 137 137 137 137 137 137 138 139 140 141 143 146 149 152 155 158 161 164 167
cte_f                : 24 57 95
cte_i                : 12 18 23 56 94
cte_str              : 25 96
divide               : 52
do                   : 105
else                 : 88
equals               : 43
error                : 
float                : 59 134
freq                 : 154
func                 : 98
globalFunc           : 1
greater              : 39
greaterEquals        : 41
id                   : 10 11 12 22 55 74 93 98 101 106 133 133 134 134 135 135 139 139 140 140 141 141 142 143 145 146 148 149 151 152 154 155 157 158 160 161 163 164 166 167
if                   : 87
int                  : 58
kmeans               : 136
kurt                 : 166
lCurlyBracket        : 62
lParenthesis         : 53 77 87 90 98 104 105 106 133 134 135 136 137 138 139 140 141 142 145 148 151 154 157 160 163 166
lSqrBracket          : 12 18 81
las                  : 134
lessThan             : 40
lessThanEquals       : 42
mbm                  : 137
mean                 : 142
mean_abs_err         : 139
mean_sqr_err         : 140
median               : 148
median_abs_err       : 141
minus                : 48
mode                 : 145
not                  : 33
notEquals            : 44
ols                  : 133
or                   : 35
plus                 : 47
print                : 90
prob                 : 151
program              : 1
rCurlyBracket        : 62
rParenthesis         : 53 77 87 90 98 104 105 106 133 134 135 136 137 138 139 140 141 142 145 148 151 154 157 160 163 166
rSqrBracket          : 12 18 81
return               : 111
rid                  : 135
scan                 : 77
semicolon            : 1 9 75 90 106 111 133 134 135 136 137 138 139 140 141 142 145 148 151 154 157 160 163 166
skew                 : 163
start                : 1
stddev               : 160
string               : 60 134 135 136 136 136 137
times                : 51
tseries              : 138
var                  : 9
variance             : 157
void                 : 1 1 86
while                : 104 105

Nonterminals, with rules where they appear

ACUMULATE_R          : 12 18
ASSIGNMENT           : 65
ASSIGNMENT_A         : 74
BLOCK                : 1 87 88 98 104 105
BLOCK_A              : 62 63
BOOLEAN              : 97 133 133 133 134 134 134 134 134 134 135 135 135 136 137 137
BOOLEAN_AUX_VARS     : 26
CALCULATE_ARRAY      : 12
CONDITION            : 66
CONDITION_A          : 87
END_PROCEDURE        : 1 98
ERA                  : 106
EXP                  : 37 38 38 47 48 81 107 109
EXPLOG               : 34 35 53 75 87 104 105 111
EXPLOG_A             : 32 33
EXPRESSION           : 32 33 90 91
EXPRESSION_A         : 38
EXP_A                : 46
FACTOR               : 49 50
FILL_GOTO_MAIN       : 1
FREQUENCY            : 128
FREQUENCY_A          : 154 155
GENERATE_GOTOF_CONDITIONAL : 87 104
GENERATE_GOTO_CONDITIONAL : 88
GENERATE_GOTO_MAIN   : 1
GENERATE_QUAD_PRINT  : 90 91
GENERATE_QUAD_RETURN : 111
INCREMENT_PARAM_COUNTER : 101
ISLIST               : 22 55 74 81 93
KURTOSI              : 132
KURTOSI_A            : 166 167
K_MEANS              : 118
LASSO                : 116
LIST                 : 12 18
LIST_A               : 12
MEAN                 : 124
MEAN_A               : 142 143
MEAN_ABSOLUTE_ERROR  : 121
MEAN_SQUARED_ERROR   : 122
MEDIAN               : 126
MEDIAN_A             : 148 149
MEDIAN_ABSOLUTE_ERROR : 123
METHOD               : 5 7
METHODCALL           : 70 76
METHODCALL_A         : 106
METHODCALL_B         : 106 109
METHOD_A             : 98
MINI_BATCH_MEANS     : 119
MODE                 : 125
MODE_A               : 145 146
ORDINARY_LEAST_SQUARES : 115
PARAMS               : 99 102
PARAMS_A             : 101
POP_STACK_OPERATORS  : 53
POST_CONDITIONAL_LOOP : 69
PRE_CONDITIONAL_LOOP : 68
PRINTQUADS           : 1
PROBABILITY          : 127
PROBABILITY_A        : 151 152
PROGRAM              : 0
PROGRAM_A            : 1 4
PROGRAM_B            : 5 7
PUSH_STACK_JUMPS     : 104 105
PUSH_STACK_OPERANDS  : 55 74
PUSH_STACK_OPERANDS_CONSTANT : 23 24 25 56 57 94 95 96 113 114
PUSH_STACK_OPERATORS : 39 40 41 42 43 44 47 48 51 52 53 74
READ                 : 71
READ_A               : 77
RETURN               : 73
RIDGE                : 117
SAVE_ASSIGNED_VAR    : 23 24 25 27 28
SAVE_COUNTER_PARAM   : 98
SAVE_COUNTER_QUAD    : 98
SAVE_PARAM           : 101
SAVE_PARAM_TYPE      : 101
SAVE_TYPE            : 1 1 58 59 60 61 86
SAVE_VAR             : 11
SIMPLE               : 10 11
SKEWNESS             : 131
SKEWNESS_A           : 163 164
SOLVE_OFFSETS        : 82
SOLVE_OPERATION_ASSIGNMENT : 75
SOLVE_OPERATION_CONDITIONAL : 87
SOLVE_OPERATION_LOGIC : 32 33
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 105
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 104
SOLVE_OPERATION_RELATIONSHIP : 38
SOLVE_OPERATION_SUM_MINUS : 45 46
SOLVE_OPERATION_TIMES_DIVIDE : 49 50
STANDARD_DEVIATION   : 130
STANDARD_DEVIATION_A : 160 161
START_FUNCTION       : 1 1 98
STATEMENT            : 63
STATMETHODS          : 72
TERM                 : 45 46 51 52
TERM_A               : 50
TIME_SERIES_SPLIT    : 120
TYPE                 : 9 85 101
TYPEMETHOD           : 98
VALIDATE_FUNCTION_NAME : 106
VALIDATE_INDEX       : 81
VALIDATE_METHOD_CALL : 106
VALIDATE_NAME_ARRAY  : 12
VALIDATE_PARAMETER   : 107 109
VARCONSTAUX          : 54 133 134 134 134 135 135 135 135 136 136 136 136 136 136 136 137 137 137 137 137 137 137 137 137 138 138
VARCTE               : 77
VARCTE_AUX_VARS      : 10
VARIANCE             : 129
VARIANCE_A           : 157 158
VARS                 : 4 14
VARS_A               : 9 16 20
VARS_B               : 9
WRITE                : 67
WRITE_A              : 90 91
empty                : 2 3 6 8 13 15 17 19 21 29 30 31 36 64 79 80 82 83 84 89 92 100 103 108 110 112 144 147 150 153 156 159 162 165 168 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
p_SOLVE_OPERATION_ASSIGNMENT_AUX : 76

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    globalFunc      reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (171) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 171 (SAVE_TYPE -> empty .)
    colon           reduce using rule 171 (SAVE_TYPE -> empty .)
    id              reduce using rule 171 (SAVE_TYPE -> empty .)
    start           reduce using rule 171 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (170) START_FUNCTION -> . empty
    (169) empty -> .

    semicolon       reduce using rule 169 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (170) START_FUNCTION -> empty .

    semicolon       reduce using rule 170 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 170 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 170 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . METHOD PROGRAM_B
    (6) PROGRAM_A -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (98) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 169 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (2) GENERATE_GOTO_MAIN -> . empty
    (169) empty -> .

    void            reduce using rule 169 (empty -> .)

    GENERATE_GOTO_MAIN             shift and go to state 16
    empty                          shift and go to state 17

state 11

    (4) PROGRAM_A -> VARS . PROGRAM_A
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . METHOD PROGRAM_B
    (6) PROGRAM_A -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (98) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 169 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 18
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 12

    (5) PROGRAM_A -> METHOD . PROGRAM_B
    (7) PROGRAM_B -> . METHOD PROGRAM_B
    (8) PROGRAM_B -> . empty
    (98) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) empty -> .

    func            shift and go to state 15
    void            reduce using rule 169 (empty -> .)

    METHOD                         shift and go to state 19
    PROGRAM_B                      shift and go to state 20
    empty                          shift and go to state 21

state 13

    (6) PROGRAM_A -> empty .

    void            reduce using rule 6 (PROGRAM_A -> empty .)


state 14

    (9) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    TYPE                           shift and go to state 22

state 15

    (98) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (85) TYPEMETHOD -> . TYPE
    (86) TYPEMETHOD -> . void SAVE_TYPE
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 29
    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    TYPEMETHOD                     shift and go to state 27
    TYPE                           shift and go to state 28

state 16

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN . void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 30


state 17

    (2) GENERATE_GOTO_MAIN -> empty .

    void            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)


state 18

    (4) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 4 (PROGRAM_A -> VARS PROGRAM_A .)


state 19

    (7) PROGRAM_B -> METHOD . PROGRAM_B
    (7) PROGRAM_B -> . METHOD PROGRAM_B
    (8) PROGRAM_B -> . empty
    (98) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) empty -> .

    func            shift and go to state 15
    void            reduce using rule 169 (empty -> .)

    METHOD                         shift and go to state 19
    PROGRAM_B                      shift and go to state 31
    empty                          shift and go to state 21

state 20

    (5) PROGRAM_A -> METHOD PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_A -> METHOD PROGRAM_B .)


state 21

    (8) PROGRAM_B -> empty .

    void            reduce using rule 8 (PROGRAM_B -> empty .)


state 22

    (9) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 32


state 23

    (58) TYPE -> int . SAVE_TYPE
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    colon           reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (59) TYPE -> float . SAVE_TYPE
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    colon           reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (60) TYPE -> string . SAVE_TYPE
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    colon           reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (61) TYPE -> bool . SAVE_TYPE
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    colon           reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 36
    empty                          shift and go to state 5

state 27

    (98) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 37


state 28

    (85) TYPEMETHOD -> TYPE .

    id              reduce using rule 85 (TYPEMETHOD -> TYPE .)


state 29

    (86) TYPEMETHOD -> void . SAVE_TYPE
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 38
    empty                          shift and go to state 5

state 30

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void . SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (171) SAVE_TYPE -> . empty
    (169) empty -> .

    start           reduce using rule 169 (empty -> .)

    SAVE_TYPE                      shift and go to state 39
    empty                          shift and go to state 5

state 31

    (7) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 7 (PROGRAM_B -> METHOD PROGRAM_B .)


state 32

    (9) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (169) empty -> .

    id              shift and go to state 41
    semicolon       reduce using rule 169 (empty -> .)

    VARS_A                         shift and go to state 40
    empty                          shift and go to state 42

state 33

    (58) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 58 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 58 (TYPE -> int SAVE_TYPE .)


state 34

    (59) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 59 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 59 (TYPE -> float SAVE_TYPE .)


state 35

    (60) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 60 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 60 (TYPE -> string SAVE_TYPE .)


state 36

    (61) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 61 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 61 (TYPE -> bool SAVE_TYPE .)


state 37

    (98) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (170) START_FUNCTION -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)

    START_FUNCTION                 shift and go to state 43
    empty                          shift and go to state 8

state 38

    (86) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 86 (TYPEMETHOD -> void SAVE_TYPE .)


state 39

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE . start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS

    start           shift and go to state 44


state 40

    (9) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 45


state 41

    (10) VARS_A -> id . assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> id . SAVE_VAR SIMPLE
    (12) VARS_A -> id . VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (172) SAVE_VAR -> . empty
    (29) VALIDATE_NAME_ARRAY -> . empty
    (169) empty -> .

    assign          shift and go to state 46
    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    lSqrBracket     reduce using rule 169 (empty -> .)

    SAVE_VAR                       shift and go to state 47
    VALIDATE_NAME_ARRAY            shift and go to state 48
    empty                          shift and go to state 49

state 42

    (13) VARS_A -> empty .

    semicolon       reduce using rule 13 (VARS_A -> empty .)


state 43

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 50


state 44

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start . FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (3) FILL_GOTO_MAIN -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    FILL_GOTO_MAIN                 shift and go to state 51
    empty                          shift and go to state 52

state 45

    (9) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (14) VARS_B -> . VARS
    (15) VARS_B -> . empty
    (9) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (169) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 14
    func            reduce using rule 169 (empty -> .)
    void            reduce using rule 169 (empty -> .)

  ! var             [ reduce using rule 169 (empty -> .) ]

    VARS_B                         shift and go to state 53
    VARS                           shift and go to state 54
    empty                          shift and go to state 55

state 46

    (10) VARS_A -> id assign . VARCTE_AUX_VARS SIMPLE
    (22) VARCTE_AUX_VARS -> . id ISLIST
    (23) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (24) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (25) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (26) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (27) BOOLEAN_AUX_VARS -> . FALSE SAVE_ASSIGNED_VAR
    (28) BOOLEAN_AUX_VARS -> . TRUE SAVE_ASSIGNED_VAR

    id              shift and go to state 56
    cte_i           shift and go to state 58
    cte_f           shift and go to state 59
    cte_str         shift and go to state 60
    FALSE           shift and go to state 62
    TRUE            shift and go to state 63

    VARCTE_AUX_VARS                shift and go to state 57
    BOOLEAN_AUX_VARS               shift and go to state 61

state 47

    (11) VARS_A -> id SAVE_VAR . SIMPLE
    (16) SIMPLE -> . comma VARS_A
    (17) SIMPLE -> . empty
    (169) empty -> .

    comma           shift and go to state 65
    semicolon       reduce using rule 169 (empty -> .)

    SIMPLE                         shift and go to state 64
    empty                          shift and go to state 66

state 48

    (12) VARS_A -> id VALIDATE_NAME_ARRAY . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    lSqrBracket     shift and go to state 67


state 49

    (172) SAVE_VAR -> empty .
    (29) VALIDATE_NAME_ARRAY -> empty .

    comma           reduce using rule 172 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 172 (SAVE_VAR -> empty .)
    lSqrBracket     reduce using rule 29 (VALIDATE_NAME_ARRAY -> empty .)


state 50

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (99) METHOD_A -> . PARAMS
    (100) METHOD_A -> . empty
    (101) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (169) empty -> .
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 169 (empty -> .)
    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    METHOD_A                       shift and go to state 68
    PARAMS                         shift and go to state 69
    empty                          shift and go to state 70
    TYPE                           shift and go to state 71

state 51

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN . START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS
    (170) START_FUNCTION -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    START_FUNCTION                 shift and go to state 72
    empty                          shift and go to state 8

state 52

    (3) FILL_GOTO_MAIN -> empty .

    lCurlyBracket   reduce using rule 3 (FILL_GOTO_MAIN -> empty .)


state 53

    (9) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 9 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 54

    (14) VARS_B -> VARS .

    var             reduce using rule 14 (VARS_B -> VARS .)
    func            reduce using rule 14 (VARS_B -> VARS .)
    void            reduce using rule 14 (VARS_B -> VARS .)


state 55

    (15) VARS_B -> empty .

    var             reduce using rule 15 (VARS_B -> empty .)
    func            reduce using rule 15 (VARS_B -> empty .)
    void            reduce using rule 15 (VARS_B -> empty .)


state 56

    (22) VARCTE_AUX_VARS -> id . ISLIST
    (81) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (82) ISLIST -> . empty SOLVE_OFFSETS
    (169) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    ISLIST                         shift and go to state 73
    empty                          shift and go to state 75

state 57

    (10) VARS_A -> id assign VARCTE_AUX_VARS . SIMPLE
    (16) SIMPLE -> . comma VARS_A
    (17) SIMPLE -> . empty
    (169) empty -> .

    comma           shift and go to state 65
    semicolon       reduce using rule 169 (empty -> .)

    SIMPLE                         shift and go to state 76
    empty                          shift and go to state 66

state 58

    (23) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 77
    empty                          shift and go to state 78

state 59

    (24) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 79
    empty                          shift and go to state 78

state 60

    (25) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 80
    empty                          shift and go to state 78

state 61

    (26) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 26 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 26 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 62

    (27) BOOLEAN_AUX_VARS -> FALSE . SAVE_ASSIGNED_VAR
    (173) SAVE_ASSIGNED_VAR -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 81
    empty                          shift and go to state 82

state 63

    (28) BOOLEAN_AUX_VARS -> TRUE . SAVE_ASSIGNED_VAR
    (173) SAVE_ASSIGNED_VAR -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 83
    empty                          shift and go to state 82

state 64

    (11) VARS_A -> id SAVE_VAR SIMPLE .

    semicolon       reduce using rule 11 (VARS_A -> id SAVE_VAR SIMPLE .)


state 65

    (16) SIMPLE -> comma . VARS_A
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (169) empty -> .

    id              shift and go to state 41
    semicolon       reduce using rule 169 (empty -> .)

    VARS_A                         shift and go to state 84
    empty                          shift and go to state 42

state 66

    (17) SIMPLE -> empty .

    semicolon       reduce using rule 17 (SIMPLE -> empty .)


state 67

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    cte_i           shift and go to state 85


state 68

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (176) SAVE_COUNTER_PARAM -> . empty
    (169) empty -> .

    rParenthesis    reduce using rule 169 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 86
    empty                          shift and go to state 87

state 69

    (99) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 99 (METHOD_A -> PARAMS .)


state 70

    (100) METHOD_A -> empty .

    rParenthesis    reduce using rule 100 (METHOD_A -> empty .)


state 71

    (101) PARAMS -> TYPE . id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 88


state 72

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION . BLOCK END_PROCEDURE PRINTQUADS
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 89

state 73

    (22) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 22 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 22 (VARCTE_AUX_VARS -> id ISLIST .)


state 74

    (81) ISLIST -> lSqrBracket . EXP VALIDATE_INDEX rSqrBracket ISLIST
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXP                            shift and go to state 91
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 75

    (82) ISLIST -> empty . SOLVE_OFFSETS
    (84) SOLVE_OFFSETS -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    assign          reduce using rule 169 (empty -> .)

    empty                          shift and go to state 99
    SOLVE_OFFSETS                  shift and go to state 100

state 76

    (10) VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .

    semicolon       reduce using rule 10 (VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .)


state 77

    (23) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (173) SAVE_ASSIGNED_VAR -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 101
    empty                          shift and go to state 82

state 78

    (185) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    comma           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rSqrBracket     reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 79

    (24) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (173) SAVE_ASSIGNED_VAR -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 102
    empty                          shift and go to state 82

state 80

    (25) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (173) SAVE_ASSIGNED_VAR -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 103
    empty                          shift and go to state 82

state 81

    (27) BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 27 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 27 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)


state 82

    (173) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 173 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 173 (SAVE_ASSIGNED_VAR -> empty .)


state 83

    (28) BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 28 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 28 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)


state 84

    (16) SIMPLE -> comma VARS_A .

    semicolon       reduce using rule 16 (SIMPLE -> comma VARS_A .)


state 85

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (30) ACUMULATE_R -> . empty
    (169) empty -> .

    rSqrBracket     reduce using rule 169 (empty -> .)

    ACUMULATE_R                    shift and go to state 104
    empty                          shift and go to state 105

state 86

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 106


state 87

    (176) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 176 (SAVE_COUNTER_PARAM -> empty .)


state 88

    (101) PARAMS -> TYPE id . SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (174) SAVE_PARAM -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    SAVE_PARAM                     shift and go to state 107
    empty                          shift and go to state 108

state 89

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK . END_PROCEDURE PRINTQUADS
    (178) END_PROCEDURE -> . empty
    (169) empty -> .

    $end            reduce using rule 169 (empty -> .)

    END_PROCEDURE                  shift and go to state 109
    empty                          shift and go to state 110

state 90

    (62) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (169) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (87) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (90) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (104) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (105) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (106) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (115) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (116) STATMETHODS -> . LASSO
    (117) STATMETHODS -> . RIDGE
    (118) STATMETHODS -> . K_MEANS
    (119) STATMETHODS -> . MINI_BATCH_MEANS
    (120) STATMETHODS -> . TIME_SERIES_SPLIT
    (121) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (122) STATMETHODS -> . MEAN_SQUARED_ERROR
    (123) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (124) STATMETHODS -> . MEAN
    (125) STATMETHODS -> . MODE
    (126) STATMETHODS -> . MEDIAN
    (127) STATMETHODS -> . PROBABILITY
    (128) STATMETHODS -> . FREQUENCY
    (129) STATMETHODS -> . VARIANCE
    (130) STATMETHODS -> . STANDARD_DEVIATION
    (131) STATMETHODS -> . SKEWNESS
    (132) STATMETHODS -> . KURTOSI
    (111) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (133) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (134) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (135) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (136) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (137) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (138) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (139) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (140) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (141) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (142) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (145) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (148) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (151) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (154) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (157) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (160) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (163) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (166) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 169 (empty -> .)
    id              shift and go to state 123
    if              shift and go to state 124
    print           shift and go to state 125
    while           shift and go to state 126
    do              shift and go to state 127
    scan            shift and go to state 128
    return          shift and go to state 147
    ols             shift and go to state 148
    las             shift and go to state 149
    rid             shift and go to state 150
    kmeans          shift and go to state 151
    mbm             shift and go to state 152
    tseries         shift and go to state 153
    mean_abs_err    shift and go to state 154
    mean_sqr_err    shift and go to state 155
    median_abs_err  shift and go to state 156
    mean            shift and go to state 157
    mode            shift and go to state 158
    median          shift and go to state 159
    prob            shift and go to state 160
    freq            shift and go to state 161
    variance        shift and go to state 162
    stddev          shift and go to state 163
    skew            shift and go to state 164
    kurt            shift and go to state 165

    BLOCK_A                        shift and go to state 111
    STATEMENT                      shift and go to state 112
    empty                          shift and go to state 113
    ASSIGNMENT                     shift and go to state 114
    CONDITION                      shift and go to state 115
    WRITE                          shift and go to state 116
    PRE_CONDITIONAL_LOOP           shift and go to state 117
    POST_CONDITIONAL_LOOP          shift and go to state 118
    METHODCALL                     shift and go to state 119
    READ                           shift and go to state 120
    STATMETHODS                    shift and go to state 121
    RETURN                         shift and go to state 122
    ORDINARY_LEAST_SQUARES         shift and go to state 129
    LASSO                          shift and go to state 130
    RIDGE                          shift and go to state 131
    K_MEANS                        shift and go to state 132
    MINI_BATCH_MEANS               shift and go to state 133
    TIME_SERIES_SPLIT              shift and go to state 134
    MEAN_ABSOLUTE_ERROR            shift and go to state 135
    MEAN_SQUARED_ERROR             shift and go to state 136
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 137
    MEAN                           shift and go to state 138
    MODE                           shift and go to state 139
    MEDIAN                         shift and go to state 140
    PROBABILITY                    shift and go to state 141
    FREQUENCY                      shift and go to state 142
    VARIANCE                       shift and go to state 143
    STANDARD_DEVIATION             shift and go to state 144
    SKEWNESS                       shift and go to state 145
    KURTOSI                        shift and go to state 146

state 91

    (81) ISLIST -> lSqrBracket EXP . VALIDATE_INDEX rSqrBracket ISLIST
    (83) VALIDATE_INDEX -> . empty
    (169) empty -> .

    rSqrBracket     reduce using rule 169 (empty -> .)

    VALIDATE_INDEX                 shift and go to state 166
    empty                          shift and go to state 167

state 92

    (45) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (188) SOLVE_OPERATION_SUM_MINUS -> . empty
    (169) empty -> .

    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 168
    empty                          shift and go to state 169

state 93

    (49) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (189) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (169) empty -> .

    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 170
    empty                          shift and go to state 171

state 94

    (53) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    not             reduce using rule 169 (empty -> .)
    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 172
    empty                          shift and go to state 173

state 95

    (54) FACTOR -> VARCONSTAUX .

    times           reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 54 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 54 (FACTOR -> VARCONSTAUX .)


state 96

    (55) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (184) PUSH_STACK_OPERANDS -> . empty
    (169) empty -> .

    lSqrBracket     reduce using rule 169 (empty -> .)
    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 174
    empty                          shift and go to state 175

state 97

    (56) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 176
    empty                          shift and go to state 78

state 98

    (57) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 177
    empty                          shift and go to state 78

state 99

    (84) SOLVE_OFFSETS -> empty .

    comma           reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    semicolon       reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    times           reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    divide          reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    plus            reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    minus           reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    rSqrBracket     reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    greater         reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    lessThan        reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    greaterEquals   reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    lessThanEquals  reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    equals          reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    notEquals       reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    and             reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    or              reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    rParenthesis    reduce using rule 84 (SOLVE_OFFSETS -> empty .)
    assign          reduce using rule 84 (SOLVE_OFFSETS -> empty .)


state 100

    (82) ISLIST -> empty SOLVE_OFFSETS .

    comma           reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    semicolon       reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    times           reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    divide          reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    plus            reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    minus           reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    rSqrBracket     reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    greater         reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThan        reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    greaterEquals   reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThanEquals  reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    equals          reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    notEquals       reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    and             reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    or              reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    rParenthesis    reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)
    assign          reduce using rule 82 (ISLIST -> empty SOLVE_OFFSETS .)


state 101

    (23) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 102

    (24) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 24 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 24 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 103

    (25) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 25 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 25 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 104

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST CALCULATE_ARRAY LIST_A

    rSqrBracket     shift and go to state 178


state 105

    (30) ACUMULATE_R -> empty .

    rSqrBracket     reduce using rule 30 (ACUMULATE_R -> empty .)


state 106

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (177) SAVE_COUNTER_QUAD -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 179
    empty                          shift and go to state 180

state 107

    (101) PARAMS -> TYPE id SAVE_PARAM . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (179) SAVE_PARAM_TYPE -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 181
    empty                          shift and go to state 182

state 108

    (174) SAVE_PARAM -> empty .

    comma           reduce using rule 174 (SAVE_PARAM -> empty .)
    rParenthesis    reduce using rule 174 (SAVE_PARAM -> empty .)


state 109

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE . PRINTQUADS
    (200) PRINTQUADS -> . empty
    (169) empty -> .

    $end            reduce using rule 169 (empty -> .)

    PRINTQUADS                     shift and go to state 183
    empty                          shift and go to state 184

state 110

    (178) END_PROCEDURE -> empty .

    $end            reduce using rule 178 (END_PROCEDURE -> empty .)
    func            reduce using rule 178 (END_PROCEDURE -> empty .)
    void            reduce using rule 178 (END_PROCEDURE -> empty .)


state 111

    (62) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 185


state 112

    (63) BLOCK_A -> STATEMENT . BLOCK_A
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (169) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (87) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (90) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (104) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (105) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (106) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (115) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (116) STATMETHODS -> . LASSO
    (117) STATMETHODS -> . RIDGE
    (118) STATMETHODS -> . K_MEANS
    (119) STATMETHODS -> . MINI_BATCH_MEANS
    (120) STATMETHODS -> . TIME_SERIES_SPLIT
    (121) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (122) STATMETHODS -> . MEAN_SQUARED_ERROR
    (123) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (124) STATMETHODS -> . MEAN
    (125) STATMETHODS -> . MODE
    (126) STATMETHODS -> . MEDIAN
    (127) STATMETHODS -> . PROBABILITY
    (128) STATMETHODS -> . FREQUENCY
    (129) STATMETHODS -> . VARIANCE
    (130) STATMETHODS -> . STANDARD_DEVIATION
    (131) STATMETHODS -> . SKEWNESS
    (132) STATMETHODS -> . KURTOSI
    (111) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (133) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (134) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (135) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (136) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (137) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (138) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (139) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (140) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (141) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (142) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (145) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (148) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (151) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (154) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (157) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (160) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (163) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (166) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 169 (empty -> .)
    id              shift and go to state 123
    if              shift and go to state 124
    print           shift and go to state 125
    while           shift and go to state 126
    do              shift and go to state 127
    scan            shift and go to state 128
    return          shift and go to state 147
    ols             shift and go to state 148
    las             shift and go to state 149
    rid             shift and go to state 150
    kmeans          shift and go to state 151
    mbm             shift and go to state 152
    tseries         shift and go to state 153
    mean_abs_err    shift and go to state 154
    mean_sqr_err    shift and go to state 155
    median_abs_err  shift and go to state 156
    mean            shift and go to state 157
    mode            shift and go to state 158
    median          shift and go to state 159
    prob            shift and go to state 160
    freq            shift and go to state 161
    variance        shift and go to state 162
    stddev          shift and go to state 163
    skew            shift and go to state 164
    kurt            shift and go to state 165

    STATEMENT                      shift and go to state 112
    BLOCK_A                        shift and go to state 186
    empty                          shift and go to state 113
    ASSIGNMENT                     shift and go to state 114
    CONDITION                      shift and go to state 115
    WRITE                          shift and go to state 116
    PRE_CONDITIONAL_LOOP           shift and go to state 117
    POST_CONDITIONAL_LOOP          shift and go to state 118
    METHODCALL                     shift and go to state 119
    READ                           shift and go to state 120
    STATMETHODS                    shift and go to state 121
    RETURN                         shift and go to state 122
    ORDINARY_LEAST_SQUARES         shift and go to state 129
    LASSO                          shift and go to state 130
    RIDGE                          shift and go to state 131
    K_MEANS                        shift and go to state 132
    MINI_BATCH_MEANS               shift and go to state 133
    TIME_SERIES_SPLIT              shift and go to state 134
    MEAN_ABSOLUTE_ERROR            shift and go to state 135
    MEAN_SQUARED_ERROR             shift and go to state 136
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 137
    MEAN                           shift and go to state 138
    MODE                           shift and go to state 139
    MEDIAN                         shift and go to state 140
    PROBABILITY                    shift and go to state 141
    FREQUENCY                      shift and go to state 142
    VARIANCE                       shift and go to state 143
    STANDARD_DEVIATION             shift and go to state 144
    SKEWNESS                       shift and go to state 145
    KURTOSI                        shift and go to state 146

state 113

    (64) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 64 (BLOCK_A -> empty .)


state 114

    (65) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> ASSIGNMENT .)


state 115

    (66) STATEMENT -> CONDITION .

    id              reduce using rule 66 (STATEMENT -> CONDITION .)
    if              reduce using rule 66 (STATEMENT -> CONDITION .)
    print           reduce using rule 66 (STATEMENT -> CONDITION .)
    while           reduce using rule 66 (STATEMENT -> CONDITION .)
    do              reduce using rule 66 (STATEMENT -> CONDITION .)
    scan            reduce using rule 66 (STATEMENT -> CONDITION .)
    return          reduce using rule 66 (STATEMENT -> CONDITION .)
    ols             reduce using rule 66 (STATEMENT -> CONDITION .)
    las             reduce using rule 66 (STATEMENT -> CONDITION .)
    rid             reduce using rule 66 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 66 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 66 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 66 (STATEMENT -> CONDITION .)
    mean            reduce using rule 66 (STATEMENT -> CONDITION .)
    mode            reduce using rule 66 (STATEMENT -> CONDITION .)
    median          reduce using rule 66 (STATEMENT -> CONDITION .)
    prob            reduce using rule 66 (STATEMENT -> CONDITION .)
    freq            reduce using rule 66 (STATEMENT -> CONDITION .)
    variance        reduce using rule 66 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 66 (STATEMENT -> CONDITION .)
    skew            reduce using rule 66 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 66 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> CONDITION .)


state 116

    (67) STATEMENT -> WRITE .

    id              reduce using rule 67 (STATEMENT -> WRITE .)
    if              reduce using rule 67 (STATEMENT -> WRITE .)
    print           reduce using rule 67 (STATEMENT -> WRITE .)
    while           reduce using rule 67 (STATEMENT -> WRITE .)
    do              reduce using rule 67 (STATEMENT -> WRITE .)
    scan            reduce using rule 67 (STATEMENT -> WRITE .)
    return          reduce using rule 67 (STATEMENT -> WRITE .)
    ols             reduce using rule 67 (STATEMENT -> WRITE .)
    las             reduce using rule 67 (STATEMENT -> WRITE .)
    rid             reduce using rule 67 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 67 (STATEMENT -> WRITE .)
    mbm             reduce using rule 67 (STATEMENT -> WRITE .)
    tseries         reduce using rule 67 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 67 (STATEMENT -> WRITE .)
    mean            reduce using rule 67 (STATEMENT -> WRITE .)
    mode            reduce using rule 67 (STATEMENT -> WRITE .)
    median          reduce using rule 67 (STATEMENT -> WRITE .)
    prob            reduce using rule 67 (STATEMENT -> WRITE .)
    freq            reduce using rule 67 (STATEMENT -> WRITE .)
    variance        reduce using rule 67 (STATEMENT -> WRITE .)
    stddev          reduce using rule 67 (STATEMENT -> WRITE .)
    skew            reduce using rule 67 (STATEMENT -> WRITE .)
    kurt            reduce using rule 67 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> WRITE .)


state 117

    (68) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 118

    (69) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 119

    (70) STATEMENT -> METHODCALL .

    id              reduce using rule 70 (STATEMENT -> METHODCALL .)
    if              reduce using rule 70 (STATEMENT -> METHODCALL .)
    print           reduce using rule 70 (STATEMENT -> METHODCALL .)
    while           reduce using rule 70 (STATEMENT -> METHODCALL .)
    do              reduce using rule 70 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 70 (STATEMENT -> METHODCALL .)
    return          reduce using rule 70 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 70 (STATEMENT -> METHODCALL .)
    las             reduce using rule 70 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 70 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 70 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 70 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 70 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 70 (STATEMENT -> METHODCALL .)
    median          reduce using rule 70 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 70 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 70 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 70 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 70 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 70 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 70 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 70 (STATEMENT -> METHODCALL .)


state 120

    (71) STATEMENT -> READ .

    id              reduce using rule 71 (STATEMENT -> READ .)
    if              reduce using rule 71 (STATEMENT -> READ .)
    print           reduce using rule 71 (STATEMENT -> READ .)
    while           reduce using rule 71 (STATEMENT -> READ .)
    do              reduce using rule 71 (STATEMENT -> READ .)
    scan            reduce using rule 71 (STATEMENT -> READ .)
    return          reduce using rule 71 (STATEMENT -> READ .)
    ols             reduce using rule 71 (STATEMENT -> READ .)
    las             reduce using rule 71 (STATEMENT -> READ .)
    rid             reduce using rule 71 (STATEMENT -> READ .)
    kmeans          reduce using rule 71 (STATEMENT -> READ .)
    mbm             reduce using rule 71 (STATEMENT -> READ .)
    tseries         reduce using rule 71 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 71 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 71 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 71 (STATEMENT -> READ .)
    mean            reduce using rule 71 (STATEMENT -> READ .)
    mode            reduce using rule 71 (STATEMENT -> READ .)
    median          reduce using rule 71 (STATEMENT -> READ .)
    prob            reduce using rule 71 (STATEMENT -> READ .)
    freq            reduce using rule 71 (STATEMENT -> READ .)
    variance        reduce using rule 71 (STATEMENT -> READ .)
    stddev          reduce using rule 71 (STATEMENT -> READ .)
    skew            reduce using rule 71 (STATEMENT -> READ .)
    kurt            reduce using rule 71 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 71 (STATEMENT -> READ .)


state 121

    (72) STATEMENT -> STATMETHODS .

    id              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 72 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 72 (STATEMENT -> STATMETHODS .)


state 122

    (73) STATEMENT -> RETURN .

    id              reduce using rule 73 (STATEMENT -> RETURN .)
    if              reduce using rule 73 (STATEMENT -> RETURN .)
    print           reduce using rule 73 (STATEMENT -> RETURN .)
    while           reduce using rule 73 (STATEMENT -> RETURN .)
    do              reduce using rule 73 (STATEMENT -> RETURN .)
    scan            reduce using rule 73 (STATEMENT -> RETURN .)
    return          reduce using rule 73 (STATEMENT -> RETURN .)
    ols             reduce using rule 73 (STATEMENT -> RETURN .)
    las             reduce using rule 73 (STATEMENT -> RETURN .)
    rid             reduce using rule 73 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 73 (STATEMENT -> RETURN .)
    mbm             reduce using rule 73 (STATEMENT -> RETURN .)
    tseries         reduce using rule 73 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 73 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 73 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 73 (STATEMENT -> RETURN .)
    mean            reduce using rule 73 (STATEMENT -> RETURN .)
    mode            reduce using rule 73 (STATEMENT -> RETURN .)
    median          reduce using rule 73 (STATEMENT -> RETURN .)
    prob            reduce using rule 73 (STATEMENT -> RETURN .)
    freq            reduce using rule 73 (STATEMENT -> RETURN .)
    variance        reduce using rule 73 (STATEMENT -> RETURN .)
    stddev          reduce using rule 73 (STATEMENT -> RETURN .)
    skew            reduce using rule 73 (STATEMENT -> RETURN .)
    kurt            reduce using rule 73 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 73 (STATEMENT -> RETURN .)


state 123

    (74) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (106) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (184) PUSH_STACK_OPERANDS -> . empty
    (180) VALIDATE_FUNCTION_NAME -> . empty
    (169) empty -> .

    lSqrBracket     reduce using rule 169 (empty -> .)
    assign          reduce using rule 169 (empty -> .)
    lParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 187
    VALIDATE_FUNCTION_NAME         shift and go to state 188
    empty                          shift and go to state 189

state 124

    (87) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 190


state 125

    (90) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 191


state 126

    (104) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (196) PUSH_STACK_JUMPS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 192
    empty                          shift and go to state 193

state 127

    (105) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (196) PUSH_STACK_JUMPS -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 194
    empty                          shift and go to state 193

state 128

    (77) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 195


state 129

    (115) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 130

    (116) STATMETHODS -> LASSO .

    id              reduce using rule 116 (STATMETHODS -> LASSO .)
    if              reduce using rule 116 (STATMETHODS -> LASSO .)
    print           reduce using rule 116 (STATMETHODS -> LASSO .)
    while           reduce using rule 116 (STATMETHODS -> LASSO .)
    do              reduce using rule 116 (STATMETHODS -> LASSO .)
    scan            reduce using rule 116 (STATMETHODS -> LASSO .)
    return          reduce using rule 116 (STATMETHODS -> LASSO .)
    ols             reduce using rule 116 (STATMETHODS -> LASSO .)
    las             reduce using rule 116 (STATMETHODS -> LASSO .)
    rid             reduce using rule 116 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 116 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 116 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 116 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> LASSO .)
    mean            reduce using rule 116 (STATMETHODS -> LASSO .)
    mode            reduce using rule 116 (STATMETHODS -> LASSO .)
    median          reduce using rule 116 (STATMETHODS -> LASSO .)
    prob            reduce using rule 116 (STATMETHODS -> LASSO .)
    freq            reduce using rule 116 (STATMETHODS -> LASSO .)
    variance        reduce using rule 116 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 116 (STATMETHODS -> LASSO .)
    skew            reduce using rule 116 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 116 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> LASSO .)


state 131

    (117) STATMETHODS -> RIDGE .

    id              reduce using rule 117 (STATMETHODS -> RIDGE .)
    if              reduce using rule 117 (STATMETHODS -> RIDGE .)
    print           reduce using rule 117 (STATMETHODS -> RIDGE .)
    while           reduce using rule 117 (STATMETHODS -> RIDGE .)
    do              reduce using rule 117 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 117 (STATMETHODS -> RIDGE .)
    return          reduce using rule 117 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 117 (STATMETHODS -> RIDGE .)
    las             reduce using rule 117 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 117 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 117 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 117 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 117 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 117 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 117 (STATMETHODS -> RIDGE .)
    median          reduce using rule 117 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 117 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 117 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 117 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 117 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 117 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 117 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> RIDGE .)


state 132

    (118) STATMETHODS -> K_MEANS .

    id              reduce using rule 118 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 118 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 118 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 118 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 118 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 118 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 118 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 118 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 118 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 118 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 118 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 118 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 118 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 118 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 118 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 118 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> K_MEANS .)


state 133

    (119) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> MINI_BATCH_MEANS .)


state 134

    (120) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 120 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 135

    (121) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 121 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 136

    (122) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 122 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 137

    (123) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 123 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 138

    (124) STATMETHODS -> MEAN .

    id              reduce using rule 124 (STATMETHODS -> MEAN .)
    if              reduce using rule 124 (STATMETHODS -> MEAN .)
    print           reduce using rule 124 (STATMETHODS -> MEAN .)
    while           reduce using rule 124 (STATMETHODS -> MEAN .)
    do              reduce using rule 124 (STATMETHODS -> MEAN .)
    scan            reduce using rule 124 (STATMETHODS -> MEAN .)
    return          reduce using rule 124 (STATMETHODS -> MEAN .)
    ols             reduce using rule 124 (STATMETHODS -> MEAN .)
    las             reduce using rule 124 (STATMETHODS -> MEAN .)
    rid             reduce using rule 124 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 124 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 124 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 124 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 124 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 124 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 124 (STATMETHODS -> MEAN .)
    mean            reduce using rule 124 (STATMETHODS -> MEAN .)
    mode            reduce using rule 124 (STATMETHODS -> MEAN .)
    median          reduce using rule 124 (STATMETHODS -> MEAN .)
    prob            reduce using rule 124 (STATMETHODS -> MEAN .)
    freq            reduce using rule 124 (STATMETHODS -> MEAN .)
    variance        reduce using rule 124 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 124 (STATMETHODS -> MEAN .)
    skew            reduce using rule 124 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 124 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 124 (STATMETHODS -> MEAN .)


state 139

    (125) STATMETHODS -> MODE .

    id              reduce using rule 125 (STATMETHODS -> MODE .)
    if              reduce using rule 125 (STATMETHODS -> MODE .)
    print           reduce using rule 125 (STATMETHODS -> MODE .)
    while           reduce using rule 125 (STATMETHODS -> MODE .)
    do              reduce using rule 125 (STATMETHODS -> MODE .)
    scan            reduce using rule 125 (STATMETHODS -> MODE .)
    return          reduce using rule 125 (STATMETHODS -> MODE .)
    ols             reduce using rule 125 (STATMETHODS -> MODE .)
    las             reduce using rule 125 (STATMETHODS -> MODE .)
    rid             reduce using rule 125 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 125 (STATMETHODS -> MODE .)
    mbm             reduce using rule 125 (STATMETHODS -> MODE .)
    tseries         reduce using rule 125 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 125 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 125 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 125 (STATMETHODS -> MODE .)
    mean            reduce using rule 125 (STATMETHODS -> MODE .)
    mode            reduce using rule 125 (STATMETHODS -> MODE .)
    median          reduce using rule 125 (STATMETHODS -> MODE .)
    prob            reduce using rule 125 (STATMETHODS -> MODE .)
    freq            reduce using rule 125 (STATMETHODS -> MODE .)
    variance        reduce using rule 125 (STATMETHODS -> MODE .)
    stddev          reduce using rule 125 (STATMETHODS -> MODE .)
    skew            reduce using rule 125 (STATMETHODS -> MODE .)
    kurt            reduce using rule 125 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 125 (STATMETHODS -> MODE .)


state 140

    (126) STATMETHODS -> MEDIAN .

    id              reduce using rule 126 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 126 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 126 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 126 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 126 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 126 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 126 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 126 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 126 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 126 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 126 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 126 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 126 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 126 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 126 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 126 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 126 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 126 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 126 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 126 (STATMETHODS -> MEDIAN .)


state 141

    (127) STATMETHODS -> PROBABILITY .

    id              reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 127 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 127 (STATMETHODS -> PROBABILITY .)


state 142

    (128) STATMETHODS -> FREQUENCY .

    id              reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 128 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 128 (STATMETHODS -> FREQUENCY .)


state 143

    (129) STATMETHODS -> VARIANCE .

    id              reduce using rule 129 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 129 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 129 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 129 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 129 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 129 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 129 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 129 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 129 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 129 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 129 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 129 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 129 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 129 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 129 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 129 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 129 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 129 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 129 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 129 (STATMETHODS -> VARIANCE .)


state 144

    (130) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 130 (STATMETHODS -> STANDARD_DEVIATION .)


state 145

    (131) STATMETHODS -> SKEWNESS .

    id              reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 131 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 131 (STATMETHODS -> SKEWNESS .)


state 146

    (132) STATMETHODS -> KURTOSI .

    id              reduce using rule 132 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 132 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 132 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 132 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 132 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 132 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 132 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 132 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 132 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 132 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 132 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 132 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 132 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 132 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 132 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 132 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 132 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 132 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 132 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 132 (STATMETHODS -> KURTOSI .)


state 147

    (111) RETURN -> return . EXPLOG GENERATE_QUAD_RETURN semicolon
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 196
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 148

    (133) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 200


state 149

    (134) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 201


state 150

    (135) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 202


state 151

    (136) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 203


state 152

    (137) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 204


state 153

    (138) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 205


state 154

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 206


state 155

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 207


state 156

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 208


state 157

    (142) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 209


state 158

    (145) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 210


state 159

    (148) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 211


state 160

    (151) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 212


state 161

    (154) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 213


state 162

    (157) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 214


state 163

    (160) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 215


state 164

    (163) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 216


state 165

    (166) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 217


state 166

    (81) ISLIST -> lSqrBracket EXP VALIDATE_INDEX . rSqrBracket ISLIST

    rSqrBracket     shift and go to state 218


state 167

    (83) VALIDATE_INDEX -> empty .

    rSqrBracket     reduce using rule 83 (VALIDATE_INDEX -> empty .)


state 168

    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (46) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (47) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (48) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    rSqrBracket     reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greater         reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 220
    minus           shift and go to state 221

    EXP_A                          shift and go to state 219

state 169

    (188) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 170

    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (50) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (51) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (52) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 223
    divide          shift and go to state 224

    TERM_A                         shift and go to state 222

state 171

    (189) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 172

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 225
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 173

    (186) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)


state 174

    (55) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (81) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (82) ISLIST -> . empty SOLVE_OFFSETS
    (169) empty -> .

    lSqrBracket     shift and go to state 74
    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    ISLIST                         shift and go to state 226
    empty                          shift and go to state 75

state 175

    (184) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)


state 176

    (56) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 56 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 177

    (57) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 57 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 178

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST CALCULATE_ARRAY LIST_A
    (18) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (19) LIST -> . empty
    (169) empty -> .

    lSqrBracket     shift and go to state 227
    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    LIST                           shift and go to state 228
    empty                          shift and go to state 229

state 179

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 230

state 180

    (177) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 177 (SAVE_COUNTER_QUAD -> empty .)


state 181

    (101) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (175) INCREMENT_PARAM_COUNTER -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 231
    empty                          shift and go to state 232

state 182

    (179) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 179 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 179 (SAVE_PARAM_TYPE -> empty .)


state 183

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS .)


state 184

    (200) PRINTQUADS -> empty .

    $end            reduce using rule 200 (PRINTQUADS -> empty .)


state 185

    (62) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 186

    (63) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 63 (BLOCK_A -> STATEMENT BLOCK_A .)


state 187

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (81) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (82) ISLIST -> . empty SOLVE_OFFSETS
    (169) empty -> .

    lSqrBracket     shift and go to state 74
    assign          reduce using rule 169 (empty -> .)

    ISLIST                         shift and go to state 233
    empty                          shift and go to state 75

state 188

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (181) ERA -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)

    ERA                            shift and go to state 234
    empty                          shift and go to state 235

state 189

    (184) PUSH_STACK_OPERANDS -> empty .
    (180) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 180 (VALIDATE_FUNCTION_NAME -> empty .)


state 190

    (87) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 236
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 191

    (90) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPRESSION                     shift and go to state 237
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 192

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 238


state 193

    (196) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 196 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 196 (PUSH_STACK_JUMPS -> empty .)


state 194

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 239

state 195

    (77) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (93) VARCTE -> . id ISLIST
    (94) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (95) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (96) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (97) VARCTE -> . BOOLEAN
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 241
    cte_i           shift and go to state 242
    cte_f           shift and go to state 243
    cte_str         shift and go to state 244
    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    VARCTE                         shift and go to state 240
    BOOLEAN                        shift and go to state 245

state 196

    (111) RETURN -> return EXPLOG . GENERATE_QUAD_RETURN semicolon
    (112) GENERATE_QUAD_RETURN -> . empty
    (169) empty -> .

    semicolon       reduce using rule 169 (empty -> .)

    GENERATE_QUAD_RETURN           shift and go to state 248
    empty                          shift and go to state 249

state 197

    (32) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (34) EXPLOG_A -> . and EXPLOG
    (35) EXPLOG_A -> . or EXPLOG
    (36) EXPLOG_A -> . empty
    (169) empty -> .

    and             shift and go to state 251
    or              shift and go to state 252
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    EXPLOG_A                       shift and go to state 250
    empty                          shift and go to state 253

state 198

    (33) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPRESSION                     shift and go to state 254
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 199

    (37) EXPRESSION -> EXP .
    (38) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (39) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (40) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (41) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (42) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (43) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (44) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 37 (EXPRESSION -> EXP .)
    or              reduce using rule 37 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 37 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 37 (EXPRESSION -> EXP .)
    comma           reduce using rule 37 (EXPRESSION -> EXP .)
    greater         shift and go to state 256
    lessThan        shift and go to state 257
    greaterEquals   shift and go to state 258
    lessThanEquals  shift and go to state 259
    equals          shift and go to state 260
    notEquals       shift and go to state 261

    EXPRESSION_A                   shift and go to state 255

state 200

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 262


state 201

    (134) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 263


state 202

    (135) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 264


state 203

    (136) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 265

state 204

    (137) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 266

state 205

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 267

state 206

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 268


state 207

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 269


state 208

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 270


state 209

    (142) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 271


state 210

    (145) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 272


state 211

    (148) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 273


state 212

    (151) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 274


state 213

    (154) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 275


state 214

    (157) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 276


state 215

    (160) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 277


state 216

    (163) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 278


state 217

    (166) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 279


state 218

    (81) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket . ISLIST
    (81) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (82) ISLIST -> . empty SOLVE_OFFSETS
    (169) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    assign          reduce using rule 169 (empty -> .)

    ISLIST                         shift and go to state 280
    empty                          shift and go to state 75

state 219

    (46) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    rSqrBracket     reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greater         reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 46 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 220

    (47) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 281
    empty                          shift and go to state 173

state 221

    (48) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 282
    empty                          shift and go to state 173

state 222

    (50) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 50 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 223

    (51) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 283
    empty                          shift and go to state 173

state 224

    (52) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 284
    empty                          shift and go to state 173

state 225

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 285


state 226

    (55) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 55 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 227

    (18) LIST -> lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST

    cte_i           shift and go to state 286


state 228

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST . CALCULATE_ARRAY LIST_A
    (31) CALCULATE_ARRAY -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    CALCULATE_ARRAY                shift and go to state 287
    empty                          shift and go to state 288

state 229

    (19) LIST -> empty .

    comma           reduce using rule 19 (LIST -> empty .)
    semicolon       reduce using rule 19 (LIST -> empty .)


state 230

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (178) END_PROCEDURE -> . empty
    (169) empty -> .

    func            reduce using rule 169 (empty -> .)
    void            reduce using rule 169 (empty -> .)

    END_PROCEDURE                  shift and go to state 289
    empty                          shift and go to state 110

state 231

    (101) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (102) PARAMS_A -> . comma PARAMS
    (103) PARAMS_A -> . empty
    (169) empty -> .

    comma           shift and go to state 291
    rParenthesis    reduce using rule 169 (empty -> .)

    PARAMS_A                       shift and go to state 290
    empty                          shift and go to state 292

state 232

    (175) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 175 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 175 (INCREMENT_PARAM_COUNTER -> empty .)


state 233

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS ASSIGNMENT_A

    assign          shift and go to state 293


state 234

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 294


state 235

    (181) ERA -> empty .

    lParenthesis    reduce using rule 181 (ERA -> empty .)


state 236

    (87) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 295


state 237

    (90) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (199) GENERATE_QUAD_PRINT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 296
    empty                          shift and go to state 297

state 238

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 298
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 239

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 299


state 240

    (77) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (78) READ_A -> . comma
    (79) READ_A -> . empty
    (169) empty -> .

    comma           shift and go to state 301
    rParenthesis    reduce using rule 169 (empty -> .)

    READ_A                         shift and go to state 300
    empty                          shift and go to state 302

state 241

    (93) VARCTE -> id . ISLIST
    (81) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (82) ISLIST -> . empty SOLVE_OFFSETS
    (169) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    ISLIST                         shift and go to state 303
    empty                          shift and go to state 75

state 242

    (94) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 304
    empty                          shift and go to state 78

state 243

    (95) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 305
    empty                          shift and go to state 78

state 244

    (96) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 306
    empty                          shift and go to state 78

state 245

    (97) VARCTE -> BOOLEAN .

    comma           reduce using rule 97 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 97 (VARCTE -> BOOLEAN .)


state 246

    (113) BOOLEAN -> FALSE . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 307
    empty                          shift and go to state 78

state 247

    (114) BOOLEAN -> TRUE . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 308
    empty                          shift and go to state 78

state 248

    (111) RETURN -> return EXPLOG GENERATE_QUAD_RETURN . semicolon

    semicolon       shift and go to state 309


state 249

    (112) GENERATE_QUAD_RETURN -> empty .

    semicolon       reduce using rule 112 (GENERATE_QUAD_RETURN -> empty .)


state 250

    (32) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (191) SOLVE_OPERATION_LOGIC -> . empty
    (169) empty -> .

    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 310
    empty                          shift and go to state 311

state 251

    (34) EXPLOG_A -> and . EXPLOG
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 312
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 252

    (35) EXPLOG_A -> or . EXPLOG
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 313
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 253

    (36) EXPLOG_A -> empty .

    semicolon       reduce using rule 36 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 36 (EXPLOG_A -> empty .)


state 254

    (33) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (34) EXPLOG_A -> . and EXPLOG
    (35) EXPLOG_A -> . or EXPLOG
    (36) EXPLOG_A -> . empty
    (169) empty -> .

    and             shift and go to state 251
    or              shift and go to state 252
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    EXPLOG_A                       shift and go to state 314
    empty                          shift and go to state 253

state 255

    (38) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXP                            shift and go to state 315
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 256

    (39) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 316
    empty                          shift and go to state 173

state 257

    (40) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 317
    empty                          shift and go to state 173

state 258

    (41) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 318
    empty                          shift and go to state 173

state 259

    (42) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 319
    empty                          shift and go to state 173

state 260

    (43) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 320
    empty                          shift and go to state 173

state 261

    (44) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 321
    empty                          shift and go to state 173

state 262

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 322


state 263

    (134) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 323


state 264

    (135) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 324


state 265

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 325


state 266

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 326


state 267

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 327


state 268

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 328


state 269

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 329


state 270

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 330


state 271

    (142) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (143) MEAN_A -> . comma id MEAN_A
    (144) MEAN_A -> . empty
    (169) empty -> .

    comma           shift and go to state 332
    rParenthesis    reduce using rule 169 (empty -> .)

    MEAN_A                         shift and go to state 331
    empty                          shift and go to state 333

state 272

    (145) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (146) MODE_A -> . comma id MODE_A
    (147) MODE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 335
    rParenthesis    reduce using rule 169 (empty -> .)

    MODE_A                         shift and go to state 334
    empty                          shift and go to state 336

state 273

    (148) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (149) MEDIAN_A -> . comma id MEDIAN_A
    (150) MEDIAN_A -> . empty
    (169) empty -> .

    comma           shift and go to state 338
    rParenthesis    reduce using rule 169 (empty -> .)

    MEDIAN_A                       shift and go to state 337
    empty                          shift and go to state 339

state 274

    (151) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (152) PROBABILITY_A -> . comma id PROBABILITY_A
    (153) PROBABILITY_A -> . empty
    (169) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 169 (empty -> .)

    PROBABILITY_A                  shift and go to state 340
    empty                          shift and go to state 342

state 275

    (154) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (155) FREQUENCY_A -> . comma id FREQUENCY_A
    (156) FREQUENCY_A -> . empty
    (169) empty -> .

    comma           shift and go to state 344
    rParenthesis    reduce using rule 169 (empty -> .)

    FREQUENCY_A                    shift and go to state 343
    empty                          shift and go to state 345

state 276

    (157) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (158) VARIANCE_A -> . comma id VARIANCE_A
    (159) VARIANCE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 347
    rParenthesis    reduce using rule 169 (empty -> .)

    VARIANCE_A                     shift and go to state 346
    empty                          shift and go to state 348

state 277

    (160) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (161) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (162) STANDARD_DEVIATION_A -> . empty
    (169) empty -> .

    comma           shift and go to state 350
    rParenthesis    reduce using rule 169 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 349
    empty                          shift and go to state 351

state 278

    (163) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (164) SKEWNESS_A -> . comma id SKEWNESS_A
    (165) SKEWNESS_A -> . empty
    (169) empty -> .

    comma           shift and go to state 353
    rParenthesis    reduce using rule 169 (empty -> .)

    SKEWNESS_A                     shift and go to state 352
    empty                          shift and go to state 354

state 279

    (166) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (167) KURTOSI_A -> . comma id KURTOSI_A
    (168) KURTOSI_A -> . empty
    (169) empty -> .

    comma           shift and go to state 356
    rParenthesis    reduce using rule 169 (empty -> .)

    KURTOSI_A                      shift and go to state 355
    empty                          shift and go to state 357

state 280

    (81) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .

    comma           reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    semicolon       reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    times           reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    divide          reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    plus            reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    minus           reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rSqrBracket     reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greater         reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThan        reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greaterEquals   reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThanEquals  reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    equals          reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    notEquals       reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    and             reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    or              reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rParenthesis    reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    assign          reduce using rule 81 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)


state 281

    (47) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXP                            shift and go to state 358
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 282

    (48) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXP                            shift and go to state 359
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 283

    (51) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    TERM                           shift and go to state 360
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 284

    (52) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    TERM                           shift and go to state 361
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 285

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (187) POP_STACK_OPERATORS -> . empty
    (169) empty -> .

    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    rSqrBracket     reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 362
    empty                          shift and go to state 363

state 286

    (18) LIST -> lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST
    (30) ACUMULATE_R -> . empty
    (169) empty -> .

    rSqrBracket     reduce using rule 169 (empty -> .)

    ACUMULATE_R                    shift and go to state 364
    empty                          shift and go to state 105

state 287

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY . LIST_A
    (20) LIST_A -> . comma VARS_A
    (21) LIST_A -> . empty
    (169) empty -> .

    comma           shift and go to state 366
    semicolon       reduce using rule 169 (empty -> .)

    LIST_A                         shift and go to state 365
    empty                          shift and go to state 367

state 288

    (31) CALCULATE_ARRAY -> empty .

    comma           reduce using rule 31 (CALCULATE_ARRAY -> empty .)
    semicolon       reduce using rule 31 (CALCULATE_ARRAY -> empty .)


state 289

    (98) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 98 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 98 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 290

    (101) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 101 (PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 291

    (102) PARAMS_A -> comma . PARAMS
    (101) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    PARAMS                         shift and go to state 368
    TYPE                           shift and go to state 71

state 292

    (103) PARAMS_A -> empty .

    rParenthesis    reduce using rule 103 (PARAMS_A -> empty .)


state 293

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS ASSIGNMENT_A
    (186) PUSH_STACK_OPERATORS -> . empty
    (169) empty -> .

    not             reduce using rule 169 (empty -> .)
    id              reduce using rule 169 (empty -> .)
    lParenthesis    reduce using rule 169 (empty -> .)
    cte_i           reduce using rule 169 (empty -> .)
    cte_f           reduce using rule 169 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 369
    empty                          shift and go to state 173

state 294

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (107) METHODCALL_A -> . EXP VALIDATE_PARAMETER
    (108) METHODCALL_A -> . empty
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (169) empty -> .
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    METHODCALL_A                   shift and go to state 370
    EXP                            shift and go to state 371
    empty                          shift and go to state 372
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 295

    (87) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (193) GENERATE_GOTOF_CONDITIONAL -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 373
    empty                          shift and go to state 374

state 296

    (90) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (91) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (92) WRITE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 376
    rParenthesis    reduce using rule 169 (empty -> .)

    WRITE_A                        shift and go to state 375
    empty                          shift and go to state 377

state 297

    (199) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 199 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 199 (GENERATE_QUAD_PRINT -> empty .)


state 298

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 378


state 299

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 379


state 300

    (77) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 380


state 301

    (78) READ_A -> comma .

    rParenthesis    reduce using rule 78 (READ_A -> comma .)


state 302

    (79) READ_A -> empty .

    rParenthesis    reduce using rule 79 (READ_A -> empty .)


state 303

    (93) VARCTE -> id ISLIST .

    comma           reduce using rule 93 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 93 (VARCTE -> id ISLIST .)


state 304

    (94) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 94 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 94 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 305

    (95) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 95 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 95 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 306

    (96) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 96 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 96 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 307

    (113) BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 113 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 113 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)


state 308

    (114) BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 114 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 114 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)


state 309

    (111) RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .

    id              reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    if              reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    print           reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    while           reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    do              reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    scan            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    return          reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    ols             reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    las             reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rid             reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kmeans          reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mbm             reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    tseries         reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_abs_err    reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_sqr_err    reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median_abs_err  reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mode            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median          reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    prob            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    freq            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    variance        reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    stddev          reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    skew            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kurt            reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rCurlyBracket   reduce using rule 111 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)


state 310

    (32) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 32 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 32 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 311

    (191) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 191 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 191 (SOLVE_OPERATION_LOGIC -> empty .)


state 312

    (34) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 34 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 34 (EXPLOG_A -> and EXPLOG .)


state 313

    (35) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 35 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 35 (EXPLOG_A -> or EXPLOG .)


state 314

    (33) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (191) SOLVE_OPERATION_LOGIC -> . empty
    (169) empty -> .

    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 381
    empty                          shift and go to state 311

state 315

    (38) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (190) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (169) empty -> .

    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)
    comma           reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 382
    empty                          shift and go to state 383

state 316

    (39) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 317

    (40) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 40 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 318

    (41) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 41 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 319

    (42) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 42 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 320

    (43) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 43 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 321

    (44) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 44 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 322

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 384


state 323

    (134) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 385


state 324

    (135) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 386


state 325

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 387


state 326

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 388


state 327

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 389

state 328

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 390


state 329

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 391


state 330

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 392


state 331

    (142) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 393


state 332

    (143) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 394


state 333

    (144) MEAN_A -> empty .

    rParenthesis    reduce using rule 144 (MEAN_A -> empty .)


state 334

    (145) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 395


state 335

    (146) MODE_A -> comma . id MODE_A

    id              shift and go to state 396


state 336

    (147) MODE_A -> empty .

    rParenthesis    reduce using rule 147 (MODE_A -> empty .)


state 337

    (148) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 397


state 338

    (149) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 398


state 339

    (150) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 150 (MEDIAN_A -> empty .)


state 340

    (151) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 399


state 341

    (152) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 400


state 342

    (153) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 153 (PROBABILITY_A -> empty .)


state 343

    (154) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 401


state 344

    (155) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 402


state 345

    (156) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 156 (FREQUENCY_A -> empty .)


state 346

    (157) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 403


state 347

    (158) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 404


state 348

    (159) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 159 (VARIANCE_A -> empty .)


state 349

    (160) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 405


state 350

    (161) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 406


state 351

    (162) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 162 (STANDARD_DEVIATION_A -> empty .)


state 352

    (163) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 407


state 353

    (164) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 408


state 354

    (165) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 165 (SKEWNESS_A -> empty .)


state 355

    (166) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 409


state 356

    (167) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 410


state 357

    (168) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 168 (KURTOSI_A -> empty .)


state 358

    (47) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 47 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 359

    (48) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 48 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 360

    (51) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 51 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 361

    (52) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 52 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 362

    (53) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 53 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 363

    (187) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)


state 364

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST

    rSqrBracket     shift and go to state 411


state 365

    (12) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .

    semicolon       reduce using rule 12 (VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .)


state 366

    (20) LIST_A -> comma . VARS_A
    (10) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (11) VARS_A -> . id SAVE_VAR SIMPLE
    (12) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (13) VARS_A -> . empty
    (169) empty -> .

    id              shift and go to state 41
    semicolon       reduce using rule 169 (empty -> .)

    VARS_A                         shift and go to state 412
    empty                          shift and go to state 42

state 367

    (21) LIST_A -> empty .

    semicolon       reduce using rule 21 (LIST_A -> empty .)


state 368

    (102) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 102 (PARAMS_A -> comma PARAMS .)


state 369

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . ASSIGNMENT_A
    (75) ASSIGNMENT_A -> . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (76) ASSIGNMENT_A -> . METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (106) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    id              shift and go to state 413
    lParenthesis    shift and go to state 94
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    ASSIGNMENT_A                   shift and go to state 414
    EXPLOG                         shift and go to state 415
    METHODCALL                     shift and go to state 416
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 370

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A . METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (109) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (110) METHODCALL_B -> . empty
    (169) empty -> .

    comma           shift and go to state 418
    rParenthesis    reduce using rule 169 (empty -> .)

    METHODCALL_B                   shift and go to state 417
    empty                          shift and go to state 419

state 371

    (107) METHODCALL_A -> EXP . VALIDATE_PARAMETER
    (182) VALIDATE_PARAMETER -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 420
    empty                          shift and go to state 421

state 372

    (108) METHODCALL_A -> empty .

    comma           reduce using rule 108 (METHODCALL_A -> empty .)
    rParenthesis    reduce using rule 108 (METHODCALL_A -> empty .)


state 373

    (87) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 422

state 374

    (193) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 193 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 375

    (90) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 423


state 376

    (91) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPRESSION                     shift and go to state 424
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 377

    (92) WRITE_A -> empty .

    rParenthesis    reduce using rule 92 (WRITE_A -> empty .)


state 378

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (193) GENERATE_GOTOF_CONDITIONAL -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 425
    empty                          shift and go to state 374

state 379

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (32) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (37) EXPRESSION -> . EXP
    (38) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 198
    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXPLOG                         shift and go to state 426
    EXPRESSION                     shift and go to state 197
    EXP                            shift and go to state 199
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 380

    (77) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 381

    (33) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 33 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 33 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 382

    (38) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 38 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 383

    (190) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 384

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 427


state 385

    (134) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 428


state 386

    (135) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 429


state 387

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 430


state 388

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 431


state 389

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 432


state 390

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 433


state 391

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 434


state 392

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 435


state 393

    (142) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 436


state 394

    (143) MEAN_A -> comma id . MEAN_A
    (143) MEAN_A -> . comma id MEAN_A
    (144) MEAN_A -> . empty
    (169) empty -> .

    comma           shift and go to state 332
    rParenthesis    reduce using rule 169 (empty -> .)

    MEAN_A                         shift and go to state 437
    empty                          shift and go to state 333

state 395

    (145) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 438


state 396

    (146) MODE_A -> comma id . MODE_A
    (146) MODE_A -> . comma id MODE_A
    (147) MODE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 335
    rParenthesis    reduce using rule 169 (empty -> .)

    MODE_A                         shift and go to state 439
    empty                          shift and go to state 336

state 397

    (148) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 440


state 398

    (149) MEDIAN_A -> comma id . MEDIAN_A
    (149) MEDIAN_A -> . comma id MEDIAN_A
    (150) MEDIAN_A -> . empty
    (169) empty -> .

    comma           shift and go to state 338
    rParenthesis    reduce using rule 169 (empty -> .)

    MEDIAN_A                       shift and go to state 441
    empty                          shift and go to state 339

state 399

    (151) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 442


state 400

    (152) PROBABILITY_A -> comma id . PROBABILITY_A
    (152) PROBABILITY_A -> . comma id PROBABILITY_A
    (153) PROBABILITY_A -> . empty
    (169) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 169 (empty -> .)

    PROBABILITY_A                  shift and go to state 443
    empty                          shift and go to state 342

state 401

    (154) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 444


state 402

    (155) FREQUENCY_A -> comma id . FREQUENCY_A
    (155) FREQUENCY_A -> . comma id FREQUENCY_A
    (156) FREQUENCY_A -> . empty
    (169) empty -> .

    comma           shift and go to state 344
    rParenthesis    reduce using rule 169 (empty -> .)

    FREQUENCY_A                    shift and go to state 445
    empty                          shift and go to state 345

state 403

    (157) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 446


state 404

    (158) VARIANCE_A -> comma id . VARIANCE_A
    (158) VARIANCE_A -> . comma id VARIANCE_A
    (159) VARIANCE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 347
    rParenthesis    reduce using rule 169 (empty -> .)

    VARIANCE_A                     shift and go to state 447
    empty                          shift and go to state 348

state 405

    (160) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 448


state 406

    (161) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (161) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (162) STANDARD_DEVIATION_A -> . empty
    (169) empty -> .

    comma           shift and go to state 350
    rParenthesis    reduce using rule 169 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 449
    empty                          shift and go to state 351

state 407

    (163) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 450


state 408

    (164) SKEWNESS_A -> comma id . SKEWNESS_A
    (164) SKEWNESS_A -> . comma id SKEWNESS_A
    (165) SKEWNESS_A -> . empty
    (169) empty -> .

    comma           shift and go to state 353
    rParenthesis    reduce using rule 169 (empty -> .)

    SKEWNESS_A                     shift and go to state 451
    empty                          shift and go to state 354

state 409

    (166) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 452


state 410

    (167) KURTOSI_A -> comma id . KURTOSI_A
    (167) KURTOSI_A -> . comma id KURTOSI_A
    (168) KURTOSI_A -> . empty
    (169) empty -> .

    comma           shift and go to state 356
    rParenthesis    reduce using rule 169 (empty -> .)

    KURTOSI_A                      shift and go to state 453
    empty                          shift and go to state 357

state 411

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST
    (18) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (19) LIST -> . empty
    (169) empty -> .

    lSqrBracket     shift and go to state 227
    comma           reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    LIST                           shift and go to state 454
    empty                          shift and go to state 229

state 412

    (20) LIST_A -> comma VARS_A .

    semicolon       reduce using rule 20 (LIST_A -> comma VARS_A .)


state 413

    (106) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (55) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (180) VALIDATE_FUNCTION_NAME -> . empty
    (184) PUSH_STACK_OPERANDS -> . empty
    (169) empty -> .

    lParenthesis    reduce using rule 169 (empty -> .)
    lSqrBracket     reduce using rule 169 (empty -> .)
    times           reduce using rule 169 (empty -> .)
    divide          reduce using rule 169 (empty -> .)
    plus            reduce using rule 169 (empty -> .)
    minus           reduce using rule 169 (empty -> .)
    greater         reduce using rule 169 (empty -> .)
    lessThan        reduce using rule 169 (empty -> .)
    greaterEquals   reduce using rule 169 (empty -> .)
    lessThanEquals  reduce using rule 169 (empty -> .)
    equals          reduce using rule 169 (empty -> .)
    notEquals       reduce using rule 169 (empty -> .)
    and             reduce using rule 169 (empty -> .)
    or              reduce using rule 169 (empty -> .)
    semicolon       reduce using rule 169 (empty -> .)

    VALIDATE_FUNCTION_NAME         shift and go to state 188
    PUSH_STACK_OPERANDS            shift and go to state 174
    empty                          shift and go to state 455

state 414

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .

    id              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    if              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    print           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    while           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    do              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    scan            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    return          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    ols             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    las             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    rid             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    kmeans          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mbm             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    tseries         reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_abs_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_sqr_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median_abs_err  reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mode            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    prob            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    freq            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    variance        reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    stddev          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    skew            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    kurt            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    rCurlyBracket   reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)


state 415

    (75) ASSIGNMENT_A -> EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (192) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (169) empty -> .

    semicolon       reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 456
    empty                          shift and go to state 457

state 416

    (76) ASSIGNMENT_A -> METHODCALL . p_SOLVE_OPERATION_ASSIGNMENT_AUX
    (80) p_SOLVE_OPERATION_ASSIGNMENT_AUX -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    p_SOLVE_OPERATION_ASSIGNMENT_AUX shift and go to state 458
    empty                          shift and go to state 459

state 417

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 460


state 418

    (109) METHODCALL_B -> comma . EXP VALIDATE_PARAMETER METHODCALL_B
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (46) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (50) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (53) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (54) FACTOR -> . VARCONSTAUX
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 94
    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    EXP                            shift and go to state 461
    TERM                           shift and go to state 92
    FACTOR                         shift and go to state 93
    VARCONSTAUX                    shift and go to state 95

state 419

    (110) METHODCALL_B -> empty .

    rParenthesis    reduce using rule 110 (METHODCALL_B -> empty .)


state 420

    (107) METHODCALL_A -> EXP VALIDATE_PARAMETER .

    comma           reduce using rule 107 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)
    rParenthesis    reduce using rule 107 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)


state 421

    (182) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 182 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 182 (VALIDATE_PARAMETER -> empty .)


state 422

    (87) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (88) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (89) CONDITION_A -> . empty
    (169) empty -> .

    else            shift and go to state 463
    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    CONDITION_A                    shift and go to state 462
    empty                          shift and go to state 464

state 423

    (90) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 465


state 424

    (91) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (199) GENERATE_QUAD_PRINT -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 466
    empty                          shift and go to state 297

state 425

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 467

state 426

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 468


state 427

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 469

state 428

    (134) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 470

state 429

    (135) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 471

state 430

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 472

state 431

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 473

state 432

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 474


state 433

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 475


state 434

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 476


state 435

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 477


state 436

    (142) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 142 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 437

    (143) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 143 (MEAN_A -> comma id MEAN_A .)


state 438

    (145) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 145 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 439

    (146) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 146 (MODE_A -> comma id MODE_A .)


state 440

    (148) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 148 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 441

    (149) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 149 (MEDIAN_A -> comma id MEDIAN_A .)


state 442

    (151) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 151 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 443

    (152) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 152 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 444

    (154) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 154 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 445

    (155) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 155 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 446

    (157) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 157 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 447

    (158) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 158 (VARIANCE_A -> comma id VARIANCE_A .)


state 448

    (160) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 160 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 449

    (161) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 161 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 450

    (163) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 163 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 451

    (164) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 164 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 452

    (166) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 166 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 453

    (167) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 167 (KURTOSI_A -> comma id KURTOSI_A .)


state 454

    (18) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .

    comma           reduce using rule 18 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)
    semicolon       reduce using rule 18 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)


state 455

    (180) VALIDATE_FUNCTION_NAME -> empty .
    (184) PUSH_STACK_OPERANDS -> empty .

    lParenthesis    reduce using rule 180 (VALIDATE_FUNCTION_NAME -> empty .)
    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)


state 456

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 478


state 457

    (192) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 458

    (76) ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .

    id              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    if              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    print           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    while           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    do              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    scan            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    return          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    ols             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    las             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    rid             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    kmeans          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    mbm             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    tseries         reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    mean_abs_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    mean_sqr_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    median_abs_err  reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    mean            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    mode            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    median          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    prob            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    freq            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    variance        reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    stddev          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    skew            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    kurt            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)
    rCurlyBracket   reduce using rule 76 (ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX .)


state 459

    (80) p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .

    id              reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    if              reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    print           reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    while           reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    do              reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    scan            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    return          reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    ols             reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    las             reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    rid             reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    kmeans          reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    mbm             reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    tseries         reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    mean_abs_err    reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    mean_sqr_err    reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    median_abs_err  reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    mean            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    mode            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    median          reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    prob            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    freq            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    variance        reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    stddev          reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    skew            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    kurt            reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)
    rCurlyBracket   reduce using rule 80 (p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty .)


state 460

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 479


state 461

    (109) METHODCALL_B -> comma EXP . VALIDATE_PARAMETER METHODCALL_B
    (182) VALIDATE_PARAMETER -> . empty
    (169) empty -> .

    comma           reduce using rule 169 (empty -> .)
    rParenthesis    reduce using rule 169 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 480
    empty                          shift and go to state 421

state 462

    (87) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (194) SOLVE_OPERATION_CONDITIONAL -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 481
    empty                          shift and go to state 482

state 463

    (88) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (195) GENERATE_GOTO_CONDITIONAL -> . empty
    (169) empty -> .

    lCurlyBracket   reduce using rule 169 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 483
    empty                          shift and go to state 484

state 464

    (89) CONDITION_A -> empty .

    id              reduce using rule 89 (CONDITION_A -> empty .)
    if              reduce using rule 89 (CONDITION_A -> empty .)
    print           reduce using rule 89 (CONDITION_A -> empty .)
    while           reduce using rule 89 (CONDITION_A -> empty .)
    do              reduce using rule 89 (CONDITION_A -> empty .)
    scan            reduce using rule 89 (CONDITION_A -> empty .)
    return          reduce using rule 89 (CONDITION_A -> empty .)
    ols             reduce using rule 89 (CONDITION_A -> empty .)
    las             reduce using rule 89 (CONDITION_A -> empty .)
    rid             reduce using rule 89 (CONDITION_A -> empty .)
    kmeans          reduce using rule 89 (CONDITION_A -> empty .)
    mbm             reduce using rule 89 (CONDITION_A -> empty .)
    tseries         reduce using rule 89 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 89 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 89 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 89 (CONDITION_A -> empty .)
    mean            reduce using rule 89 (CONDITION_A -> empty .)
    mode            reduce using rule 89 (CONDITION_A -> empty .)
    median          reduce using rule 89 (CONDITION_A -> empty .)
    prob            reduce using rule 89 (CONDITION_A -> empty .)
    freq            reduce using rule 89 (CONDITION_A -> empty .)
    variance        reduce using rule 89 (CONDITION_A -> empty .)
    stddev          reduce using rule 89 (CONDITION_A -> empty .)
    skew            reduce using rule 89 (CONDITION_A -> empty .)
    kurt            reduce using rule 89 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 89 (CONDITION_A -> empty .)


state 465

    (90) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 90 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 466

    (91) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (91) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (92) WRITE_A -> . empty
    (169) empty -> .

    comma           shift and go to state 376
    rParenthesis    reduce using rule 169 (empty -> .)

    WRITE_A                        shift and go to state 485
    empty                          shift and go to state 377

state 467

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (197) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 486
    empty                          shift and go to state 487

state 468

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (198) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 488
    empty                          shift and go to state 489

state 469

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 490


state 470

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 491


state 471

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 492


state 472

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 493


state 473

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 494


state 474

    (138) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 138 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 475

    (139) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 139 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 476

    (140) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 140 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 477

    (141) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 141 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 478

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 479

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon . VALIDATE_METHOD_CALL
    (183) VALIDATE_METHOD_CALL -> . empty
    (169) empty -> .

    id              reduce using rule 169 (empty -> .)
    if              reduce using rule 169 (empty -> .)
    print           reduce using rule 169 (empty -> .)
    while           reduce using rule 169 (empty -> .)
    do              reduce using rule 169 (empty -> .)
    scan            reduce using rule 169 (empty -> .)
    return          reduce using rule 169 (empty -> .)
    ols             reduce using rule 169 (empty -> .)
    las             reduce using rule 169 (empty -> .)
    rid             reduce using rule 169 (empty -> .)
    kmeans          reduce using rule 169 (empty -> .)
    mbm             reduce using rule 169 (empty -> .)
    tseries         reduce using rule 169 (empty -> .)
    mean_abs_err    reduce using rule 169 (empty -> .)
    mean_sqr_err    reduce using rule 169 (empty -> .)
    median_abs_err  reduce using rule 169 (empty -> .)
    mean            reduce using rule 169 (empty -> .)
    mode            reduce using rule 169 (empty -> .)
    median          reduce using rule 169 (empty -> .)
    prob            reduce using rule 169 (empty -> .)
    freq            reduce using rule 169 (empty -> .)
    variance        reduce using rule 169 (empty -> .)
    stddev          reduce using rule 169 (empty -> .)
    skew            reduce using rule 169 (empty -> .)
    kurt            reduce using rule 169 (empty -> .)
    rCurlyBracket   reduce using rule 169 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 495
    empty                          shift and go to state 496

state 480

    (109) METHODCALL_B -> comma EXP VALIDATE_PARAMETER . METHODCALL_B
    (109) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (110) METHODCALL_B -> . empty
    (169) empty -> .

    comma           shift and go to state 418
    rParenthesis    reduce using rule 169 (empty -> .)

    METHODCALL_B                   shift and go to state 497
    empty                          shift and go to state 419

state 481

    (87) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 87 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 482

    (194) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 483

    (88) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 90

    BLOCK                          shift and go to state 498

state 484

    (195) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 195 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 485

    (91) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 91 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 486

    (104) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 104 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 487

    (197) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 488

    (105) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 105 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 489

    (198) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 490

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 499

state 491

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 500

state 492

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 501

state 493

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 502

state 494

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 503

state 495

    (106) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 106 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 496

    (183) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)


state 497

    (109) METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .

    rParenthesis    reduce using rule 109 (METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .)


state 498

    (88) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 88 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 499

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 504


state 500

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 505


state 501

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 506


state 502

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 507


state 503

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 508


state 504

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 509

state 505

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 510

state 506

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 511

state 507

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 512

state 508

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 513

state 509

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 514


state 510

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 515


state 511

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 516


state 512

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 517


state 513

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 518


state 514

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 519

state 515

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 520

state 516

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 521

state 517

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 522


state 518

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 523

state 519

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 524


state 520

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 525


state 521

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 526


state 522

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 527


state 523

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 528


state 524

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 529


state 525

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 530

state 526

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 531

state 527

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 532

state 528

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 533

state 529

    (133) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 530

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 534


state 531

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 535


state 532

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 536


state 533

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 537


state 534

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 538

state 535

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 539

state 536

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 540

state 537

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 541

state 538

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 542


state 539

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 543


state 540

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 544


state 541

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 545


state 542

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 546

state 543

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 547


state 544

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 548

state 545

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 549

state 546

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 550


state 547

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 551


state 548

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 552


state 549

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 553


state 550

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 554

state 551

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 555

state 552

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 556

state 553

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 557

state 554

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 558


state 555

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 559


state 556

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 560


state 557

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 561


state 558

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 562


state 559

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 563


state 560

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 564


state 561

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 565

state 562

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 566


state 563

    (135) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 135 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 564

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 567


state 565

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 568


state 566

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 569


state 567

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 570


state 568

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (55) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (56) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 96
    cte_i           shift and go to state 97
    cte_f           shift and go to state 98

    VARCONSTAUX                    shift and go to state 571

state 569

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 572


state 570

    (136) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 136 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 571

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 573


state 572

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (113) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (114) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 246
    TRUE            shift and go to state 247

    BOOLEAN                        shift and go to state 574

state 573

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 575


state 574

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 576


state 575

    (137) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 137 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 576

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 577


state 577

    (134) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 134 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 45 resolved as shift
