Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
Rule 2     PROGRAM_A -> VARS PROGRAM_A
Rule 3     PROGRAM_A -> METHOD PROGRAM_B
Rule 4     PROGRAM_A -> empty
Rule 5     PROGRAM_B -> METHOD PROGRAM_B
Rule 6     PROGRAM_B -> empty
Rule 7     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 8     VARS_A -> SIMPLE
Rule 9     VARS_A -> LIST
Rule 10    VARS_B -> VARS
Rule 11    VARS_B -> empty
Rule 12    SIMPLE -> id SIMPLE_A
Rule 13    SIMPLE_A -> assign VARCTE_AUX_VARS SIMPLE_B
Rule 14    SIMPLE_A -> SAVE_VAR SIMPLE_B
Rule 15    SIMPLE_B -> comma SIMPLE
Rule 16    SIMPLE_B -> empty
Rule 17    VARCTE_AUX_VARS -> id ISLIST
Rule 18    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 19    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 20    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 21    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 22    BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR
Rule 23    BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR
Rule 24    LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
Rule 25    LIST_A -> comma LIST
Rule 26    LIST_A -> empty
Rule 27    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 28    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 29    EXPLOG_A -> and EXPLOG
Rule 30    EXPLOG_A -> or EXPLOG
Rule 31    EXPLOG_A -> empty
Rule 32    EXPRESSION -> EXP
Rule 33    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 34    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 35    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 36    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 37    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 38    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 39    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 40    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 41    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 42    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 43    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 44    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 45    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 46    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 47    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 48    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 49    FACTOR -> VARCONSTAUX
Rule 50    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 51    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 52    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 53    TYPE -> int SAVE_TYPE
Rule 54    TYPE -> float SAVE_TYPE
Rule 55    TYPE -> string SAVE_TYPE
Rule 56    TYPE -> bool SAVE_TYPE
Rule 57    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 58    BLOCK_A -> STATEMENT BLOCK_A
Rule 59    BLOCK_A -> empty
Rule 60    STATEMENT -> ASSIGNMENT
Rule 61    STATEMENT -> CONDITION
Rule 62    STATEMENT -> WRITE
Rule 63    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 64    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 65    STATEMENT -> METHODCALL
Rule 66    STATEMENT -> READ
Rule 67    STATEMENT -> STATMETHODS
Rule 68    STATEMENT -> RETURN
Rule 69    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 70    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 71    READ_A -> comma
Rule 72    READ_A -> empty
Rule 73    ISLIST -> lSqrBracket EXP rSqrBracket
Rule 74    ISLIST -> empty
Rule 75    TYPEMETHOD -> TYPE
Rule 76    TYPEMETHOD -> void SAVE_TYPE
Rule 77    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 78    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 79    CONDITION_A -> empty
Rule 80    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 81    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 82    WRITE_A -> empty
Rule 83    VARCTE -> id ISLIST
Rule 84    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 85    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 86    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 87    VARCTE -> BOOLEAN
Rule 88    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 89    METHOD_A -> PARAMS
Rule 90    METHOD_A -> empty
Rule 91    PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 92    PARAMS_A -> comma PARAMS
Rule 93    PARAMS_A -> empty
Rule 94    PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 95    POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 96    METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 97    METHODCALL_A -> comma EXP
Rule 98    METHODCALL_A -> empty
Rule 99    RETURN -> return EXPLOG semicolon
Rule 100   BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT
Rule 101   BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT
Rule 102   STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 103   STATMETHODS -> LASSO
Rule 104   STATMETHODS -> RIDGE
Rule 105   STATMETHODS -> K_MEANS
Rule 106   STATMETHODS -> MINI_BATCH_MEANS
Rule 107   STATMETHODS -> TIME_SERIES_SPLIT
Rule 108   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 109   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 110   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 111   STATMETHODS -> MEAN
Rule 112   STATMETHODS -> MODE
Rule 113   STATMETHODS -> MEDIAN
Rule 114   STATMETHODS -> PROBABILITY
Rule 115   STATMETHODS -> FREQUENCY
Rule 116   STATMETHODS -> VARIANCE
Rule 117   STATMETHODS -> STANDARD_DEVIATION
Rule 118   STATMETHODS -> SKEWNESS
Rule 119   STATMETHODS -> KURTOSI
Rule 120   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 121   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 122   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 123   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 124   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 125   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 126   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 127   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 128   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 129   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 130   MEAN_A -> comma id MEAN_A
Rule 131   MEAN_A -> empty
Rule 132   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 133   MODE_A -> comma id MODE_A
Rule 134   MODE_A -> empty
Rule 135   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 136   MEDIAN_A -> comma id MEDIAN_A
Rule 137   MEDIAN_A -> empty
Rule 138   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 139   PROBABILITY_A -> comma id PROBABILITY_A
Rule 140   PROBABILITY_A -> empty
Rule 141   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 142   FREQUENCY_A -> comma id FREQUENCY_A
Rule 143   FREQUENCY_A -> empty
Rule 144   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 145   VARIANCE_A -> comma id VARIANCE_A
Rule 146   VARIANCE_A -> empty
Rule 147   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 148   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 149   STANDARD_DEVIATION_A -> empty
Rule 150   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 151   SKEWNESS_A -> comma id SKEWNESS_A
Rule 152   SKEWNESS_A -> empty
Rule 153   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 154   KURTOSI_A -> comma id KURTOSI_A
Rule 155   KURTOSI_A -> empty
Rule 156   empty -> <empty>
Rule 157   START_FUNCTION -> empty
Rule 158   SAVE_TYPE -> empty
Rule 159   SAVE_VAR -> empty
Rule 160   SAVE_ASSIGNED_VAR -> empty
Rule 161   SAVE_ARRAY -> empty
Rule 162   INCREMENT_PARAM_COUNTER -> empty
Rule 163   SAVE_COUNTER_PARAM -> empty
Rule 164   SAVE_COUNTER_QUAD -> empty
Rule 165   END_PROCEDURE -> empty
Rule 166   SAVE_PARAM_TYPE -> empty
Rule 167   VALIDATE_FUNCTION_NAME -> empty
Rule 168   ERA -> empty
Rule 169   VALIDATE_PARAMETER -> empty
Rule 170   VALIDATE_METHOD_CALL -> empty
Rule 171   PUSH_STACK_OPERANDS -> empty
Rule 172   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 173   PUSH_STACK_OPERATORS -> empty
Rule 174   POP_STACK_OPERATORS -> empty
Rule 175   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 176   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 177   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 178   SOLVE_OPERATION_LOGIC -> empty
Rule 179   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 180   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 181   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 182   GENERATE_GOTO_CONDITIONAL -> empty
Rule 183   PUSH_STACK_JUMPS -> empty
Rule 184   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 185   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 186   GENERATE_QUAD_PRINT -> empty
Rule 187   PRINTQUADS -> empty

Terminals, with rules where they appear

FALSE                : 22 100
TRUE                 : 23 101
and                  : 29
assign               : 13 69
bool                 : 56
colon                : 7
comma                : 15 25 71 81 92 97 120 120 120 120 120 121 121 121 121 121 121 121 121 121 121 121 121 122 122 122 122 122 122 122 122 122 123 123 123 123 123 123 123 123 123 123 124 124 124 124 124 124 124 124 124 124 124 125 126 127 128 130 133 136 139 142 145 148 151 154
cte_f                : 19 52 85
cte_i                : 18 51 84
cte_str              : 20 86
divide               : 47
do                   : 95
else                 : 78
equals               : 38
error                : 
float                : 54 121
freq                 : 141
func                 : 88
globalFunc           : 1
greater              : 34
greaterEquals        : 36
id                   : 12 17 24 50 69 83 88 91 96 120 120 121 121 122 122 126 126 127 127 128 128 129 130 132 133 135 136 138 139 141 142 144 145 147 148 150 151 153 154
if                   : 77
int                  : 53
kmeans               : 123
kurt                 : 153
lCurlyBracket        : 57
lParenthesis         : 48 70 77 80 88 94 95 96 120 121 122 123 124 125 126 127 128 129 132 135 138 141 144 147 150 153
lSqrBracket          : 24 73
las                  : 121
lessThan             : 35
lessThanEquals       : 37
mbm                  : 124
mean                 : 129
mean_abs_err         : 126
mean_sqr_err         : 127
median               : 135
median_abs_err       : 128
minus                : 43
mode                 : 132
not                  : 28
notEquals            : 39
ols                  : 120
or                   : 30
plus                 : 42
print                : 80
prob                 : 138
program              : 1
rCurlyBracket        : 57
rParenthesis         : 48 70 77 80 88 94 95 96 120 121 122 123 124 125 126 127 128 129 132 135 138 141 144 147 150 153
rSqrBracket          : 24 73
return               : 99
rid                  : 122
scan                 : 70
semicolon            : 1 7 69 80 96 99 120 121 122 123 124 125 126 127 128 129 132 135 138 141 144 147 150 153
skew                 : 150
start                : 1
stddev               : 147
string               : 55 121 122 123 123 123 124
times                : 46
tseries              : 125
var                  : 7
variance             : 144
void                 : 1 1 76
while                : 94 95

Nonterminals, with rules where they appear

ASSIGNMENT           : 60
BLOCK                : 1 77 78 88 94 95
BLOCK_A              : 57 58
BOOLEAN              : 87 120 120 120 121 121 121 121 121 121 122 122 122 123 124 124
BOOLEAN_AUX_VARS     : 21
CONDITION            : 61
CONDITION_A          : 77
END_PROCEDURE        : 88
ERA                  : 96
EXP                  : 32 33 33 42 43 73 96 97
EXPLOG               : 29 30 48 69 77 94 95 99
EXPLOG_A             : 27 28
EXPRESSION           : 27 28 80 81
EXPRESSION_A         : 33
EXP_A                : 41
FACTOR               : 44 45
FREQUENCY            : 115
FREQUENCY_A          : 141 142
GENERATE_GOTOF_CONDITIONAL : 77 94
GENERATE_GOTO_CONDITIONAL : 78
GENERATE_QUAD_PRINT  : 80 81
INCREMENT_PARAM_COUNTER : 91
ISLIST               : 17 50 69 83
KURTOSI              : 119
KURTOSI_A            : 153 154
K_MEANS              : 105
LASSO                : 103
LIST                 : 9 25
LIST_A               : 24
MEAN                 : 111
MEAN_A               : 129 130
MEAN_ABSOLUTE_ERROR  : 108
MEAN_SQUARED_ERROR   : 109
MEDIAN               : 113
MEDIAN_A             : 135 136
MEDIAN_ABSOLUTE_ERROR : 110
METHOD               : 3 5
METHODCALL           : 65
METHODCALL_A         : 96
METHOD_A             : 88
MINI_BATCH_MEANS     : 106
MODE                 : 112
MODE_A               : 132 133
ORDINARY_LEAST_SQUARES : 102
PARAMS               : 89 92
PARAMS_A             : 91
POP_STACK_OPERATORS  : 48
POST_CONDITIONAL_LOOP : 64
PRE_CONDITIONAL_LOOP : 63
PRINTQUADS           : 1
PROBABILITY          : 114
PROBABILITY_A        : 138 139
PROGRAM              : 0
PROGRAM_A            : 1 2
PROGRAM_B            : 3 5
PUSH_STACK_JUMPS     : 94 95
PUSH_STACK_OPERANDS  : 50 69
PUSH_STACK_OPERANDS_CONSTANT : 18 19 20 51 52 84 85 86 100 101
PUSH_STACK_OPERATORS : 34 35 36 37 38 39 42 43 46 47 48 69
READ                 : 66
READ_A               : 70
RETURN               : 68
RIDGE                : 104
SAVE_ARRAY           : 24
SAVE_ASSIGNED_VAR    : 18 19 20 22 23
SAVE_COUNTER_PARAM   : 88
SAVE_COUNTER_QUAD    : 88
SAVE_PARAM_TYPE      : 91
SAVE_TYPE            : 1 1 53 54 55 56 76
SAVE_VAR             : 14 91
SIMPLE               : 8 15
SIMPLE_A             : 12
SIMPLE_B             : 13 14
SKEWNESS             : 118
SKEWNESS_A           : 150 151
SOLVE_OPERATION_ASSIGNMENT : 69
SOLVE_OPERATION_CONDITIONAL : 77
SOLVE_OPERATION_LOGIC : 27 28
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 95
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 94
SOLVE_OPERATION_RELATIONSHIP : 33
SOLVE_OPERATION_SUM_MINUS : 40 41
SOLVE_OPERATION_TIMES_DIVIDE : 44 45
STANDARD_DEVIATION   : 117
STANDARD_DEVIATION_A : 147 148
START_FUNCTION       : 1 1 88
STATEMENT            : 58
STATMETHODS          : 67
TERM                 : 40 41 46 47
TERM_A               : 45
TIME_SERIES_SPLIT    : 107
TYPE                 : 7 75 91
TYPEMETHOD           : 88
VALIDATE_FUNCTION_NAME : 96
VALIDATE_METHOD_CALL : 96
VALIDATE_PARAMETER   : 96
VARCONSTAUX          : 24 49 120 121 121 121 122 122 122 122 123 123 123 123 123 123 123 124 124 124 124 124 124 124 124 124 125 125
VARCTE               : 70
VARCTE_AUX_VARS      : 13
VARIANCE             : 116
VARIANCE_A           : 144 145
VARS                 : 2 10
VARS_A               : 7
VARS_B               : 7
WRITE                : 62
WRITE_A              : 80 81
empty                : 4 6 11 16 26 31 59 72 74 79 82 90 93 98 131 134 137 140 143 146 149 152 155 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    globalFunc      reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (158) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 158 (SAVE_TYPE -> empty .)
    start           reduce using rule 158 (SAVE_TYPE -> empty .)
    colon           reduce using rule 158 (SAVE_TYPE -> empty .)
    id              reduce using rule 158 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (157) START_FUNCTION -> . empty
    (156) empty -> .

    semicolon       reduce using rule 156 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (157) START_FUNCTION -> empty .

    semicolon       reduce using rule 157 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 157 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 157 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (88) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (156) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 156 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 16


state 11

    (2) PROGRAM_A -> VARS . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (88) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (156) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 156 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 17
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 12

    (3) PROGRAM_A -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (88) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (156) empty -> .

    func            shift and go to state 15
    void            reduce using rule 156 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 19
    empty                          shift and go to state 20

state 13

    (4) PROGRAM_A -> empty .

    void            reduce using rule 4 (PROGRAM_A -> empty .)


state 14

    (7) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (53) TYPE -> . int SAVE_TYPE
    (54) TYPE -> . float SAVE_TYPE
    (55) TYPE -> . string SAVE_TYPE
    (56) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPE                           shift and go to state 21

state 15

    (88) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (75) TYPEMETHOD -> . TYPE
    (76) TYPEMETHOD -> . void SAVE_TYPE
    (53) TYPE -> . int SAVE_TYPE
    (54) TYPE -> . float SAVE_TYPE
    (55) TYPE -> . string SAVE_TYPE
    (56) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 28
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPEMETHOD                     shift and go to state 26
    TYPE                           shift and go to state 27

state 16

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void . SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    start           reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 29
    empty                          shift and go to state 5

state 17

    (2) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 2 (PROGRAM_A -> VARS PROGRAM_A .)


state 18

    (5) PROGRAM_B -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (88) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (156) empty -> .

    func            shift and go to state 15
    void            reduce using rule 156 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 30
    empty                          shift and go to state 20

state 19

    (3) PROGRAM_A -> METHOD PROGRAM_B .

    void            reduce using rule 3 (PROGRAM_A -> METHOD PROGRAM_B .)


state 20

    (6) PROGRAM_B -> empty .

    void            reduce using rule 6 (PROGRAM_B -> empty .)


state 21

    (7) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 31


state 22

    (53) TYPE -> int . SAVE_TYPE
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    colon           reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 5

state 23

    (54) TYPE -> float . SAVE_TYPE
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    colon           reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (55) TYPE -> string . SAVE_TYPE
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    colon           reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (56) TYPE -> bool . SAVE_TYPE
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    colon           reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (88) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 36


state 27

    (75) TYPEMETHOD -> TYPE .

    id              reduce using rule 75 (TYPEMETHOD -> TYPE .)


state 28

    (76) TYPEMETHOD -> void . SAVE_TYPE
    (158) SAVE_TYPE -> . empty
    (156) empty -> .

    id              reduce using rule 156 (empty -> .)

    SAVE_TYPE                      shift and go to state 37
    empty                          shift and go to state 5

state 29

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE . start START_FUNCTION BLOCK PRINTQUADS

    start           shift and go to state 38


state 30

    (5) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_B -> METHOD PROGRAM_B .)


state 31

    (7) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (8) VARS_A -> . SIMPLE
    (9) VARS_A -> . LIST
    (12) SIMPLE -> . id SIMPLE_A
    (24) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 42

    VARS_A                         shift and go to state 39
    SIMPLE                         shift and go to state 40
    LIST                           shift and go to state 41

state 32

    (53) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 53 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 53 (TYPE -> int SAVE_TYPE .)


state 33

    (54) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 54 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 54 (TYPE -> float SAVE_TYPE .)


state 34

    (55) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 55 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 55 (TYPE -> string SAVE_TYPE .)


state 35

    (56) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 56 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 56 (TYPE -> bool SAVE_TYPE .)


state 36

    (88) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (157) START_FUNCTION -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)

    START_FUNCTION                 shift and go to state 43
    empty                          shift and go to state 8

state 37

    (76) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 76 (TYPEMETHOD -> void SAVE_TYPE .)


state 38

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start . START_FUNCTION BLOCK PRINTQUADS
    (157) START_FUNCTION -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    START_FUNCTION                 shift and go to state 44
    empty                          shift and go to state 8

state 39

    (7) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 45


state 40

    (8) VARS_A -> SIMPLE .

    semicolon       reduce using rule 8 (VARS_A -> SIMPLE .)


state 41

    (9) VARS_A -> LIST .

    semicolon       reduce using rule 9 (VARS_A -> LIST .)


state 42

    (12) SIMPLE -> id . SIMPLE_A
    (24) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (13) SIMPLE_A -> . assign VARCTE_AUX_VARS SIMPLE_B
    (14) SIMPLE_A -> . SAVE_VAR SIMPLE_B
    (159) SAVE_VAR -> . empty
    (156) empty -> .

    lSqrBracket     shift and go to state 47
    assign          shift and go to state 48
    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SIMPLE_A                       shift and go to state 46
    SAVE_VAR                       shift and go to state 49
    empty                          shift and go to state 50

state 43

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 51


state 44

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION . BLOCK PRINTQUADS
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 52

state 45

    (7) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (10) VARS_B -> . VARS
    (11) VARS_B -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (156) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 14
    func            reduce using rule 156 (empty -> .)
    void            reduce using rule 156 (empty -> .)

  ! var             [ reduce using rule 156 (empty -> .) ]

    VARS_B                         shift and go to state 54
    VARS                           shift and go to state 55
    empty                          shift and go to state 56

state 46

    (12) SIMPLE -> id SIMPLE_A .

    semicolon       reduce using rule 12 (SIMPLE -> id SIMPLE_A .)


state 47

    (24) LIST -> id lSqrBracket . VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 58

state 48

    (13) SIMPLE_A -> assign . VARCTE_AUX_VARS SIMPLE_B
    (17) VARCTE_AUX_VARS -> . id ISLIST
    (18) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (19) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (20) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (21) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (22) BOOLEAN_AUX_VARS -> . FALSE SAVE_ASSIGNED_VAR
    (23) BOOLEAN_AUX_VARS -> . TRUE SAVE_ASSIGNED_VAR

    id              shift and go to state 62
    cte_i           shift and go to state 63
    cte_f           shift and go to state 64
    cte_str         shift and go to state 65
    FALSE           shift and go to state 67
    TRUE            shift and go to state 68

    VARCTE_AUX_VARS                shift and go to state 61
    BOOLEAN_AUX_VARS               shift and go to state 66

state 49

    (14) SIMPLE_A -> SAVE_VAR . SIMPLE_B
    (15) SIMPLE_B -> . comma SIMPLE
    (16) SIMPLE_B -> . empty
    (156) empty -> .

    comma           shift and go to state 70
    semicolon       reduce using rule 156 (empty -> .)

    SIMPLE_B                       shift and go to state 69
    empty                          shift and go to state 71

state 50

    (159) SAVE_VAR -> empty .

    comma           reduce using rule 159 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 159 (SAVE_VAR -> empty .)
    rParenthesis    reduce using rule 159 (SAVE_VAR -> empty .)


state 51

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (89) METHOD_A -> . PARAMS
    (90) METHOD_A -> . empty
    (91) PARAMS -> . TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (156) empty -> .
    (53) TYPE -> . int SAVE_TYPE
    (54) TYPE -> . float SAVE_TYPE
    (55) TYPE -> . string SAVE_TYPE
    (56) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 156 (empty -> .)
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    METHOD_A                       shift and go to state 72
    PARAMS                         shift and go to state 73
    empty                          shift and go to state 74
    TYPE                           shift and go to state 75

state 52

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK . PRINTQUADS
    (187) PRINTQUADS -> . empty
    (156) empty -> .

    $end            reduce using rule 156 (empty -> .)

    PRINTQUADS                     shift and go to state 76
    empty                          shift and go to state 77

state 53

    (57) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (58) BLOCK_A -> . STATEMENT BLOCK_A
    (59) BLOCK_A -> . empty
    (60) STATEMENT -> . ASSIGNMENT
    (61) STATEMENT -> . CONDITION
    (62) STATEMENT -> . WRITE
    (63) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (64) STATEMENT -> . POST_CONDITIONAL_LOOP
    (65) STATEMENT -> . METHODCALL
    (66) STATEMENT -> . READ
    (67) STATEMENT -> . STATMETHODS
    (68) STATEMENT -> . RETURN
    (156) empty -> .
    (69) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (77) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (80) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (94) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (95) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (96) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (70) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (102) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (103) STATMETHODS -> . LASSO
    (104) STATMETHODS -> . RIDGE
    (105) STATMETHODS -> . K_MEANS
    (106) STATMETHODS -> . MINI_BATCH_MEANS
    (107) STATMETHODS -> . TIME_SERIES_SPLIT
    (108) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (109) STATMETHODS -> . MEAN_SQUARED_ERROR
    (110) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (111) STATMETHODS -> . MEAN
    (112) STATMETHODS -> . MODE
    (113) STATMETHODS -> . MEDIAN
    (114) STATMETHODS -> . PROBABILITY
    (115) STATMETHODS -> . FREQUENCY
    (116) STATMETHODS -> . VARIANCE
    (117) STATMETHODS -> . STANDARD_DEVIATION
    (118) STATMETHODS -> . SKEWNESS
    (119) STATMETHODS -> . KURTOSI
    (99) RETURN -> . return EXPLOG semicolon
    (120) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (121) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (122) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (123) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (124) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (125) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (126) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (127) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (128) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (129) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (132) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (135) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (138) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (141) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (144) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (147) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (150) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (153) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 156 (empty -> .)
    id              shift and go to state 90
    if              shift and go to state 91
    print           shift and go to state 92
    while           shift and go to state 93
    do              shift and go to state 94
    scan            shift and go to state 95
    return          shift and go to state 114
    ols             shift and go to state 115
    las             shift and go to state 116
    rid             shift and go to state 117
    kmeans          shift and go to state 118
    mbm             shift and go to state 119
    tseries         shift and go to state 120
    mean_abs_err    shift and go to state 121
    mean_sqr_err    shift and go to state 122
    median_abs_err  shift and go to state 123
    mean            shift and go to state 124
    mode            shift and go to state 125
    median          shift and go to state 126
    prob            shift and go to state 127
    freq            shift and go to state 128
    variance        shift and go to state 129
    stddev          shift and go to state 130
    skew            shift and go to state 131
    kurt            shift and go to state 132

    BLOCK_A                        shift and go to state 78
    STATEMENT                      shift and go to state 79
    empty                          shift and go to state 80
    ASSIGNMENT                     shift and go to state 81
    CONDITION                      shift and go to state 82
    WRITE                          shift and go to state 83
    PRE_CONDITIONAL_LOOP           shift and go to state 84
    POST_CONDITIONAL_LOOP          shift and go to state 85
    METHODCALL                     shift and go to state 86
    READ                           shift and go to state 87
    STATMETHODS                    shift and go to state 88
    RETURN                         shift and go to state 89
    ORDINARY_LEAST_SQUARES         shift and go to state 96
    LASSO                          shift and go to state 97
    RIDGE                          shift and go to state 98
    K_MEANS                        shift and go to state 99
    MINI_BATCH_MEANS               shift and go to state 100
    TIME_SERIES_SPLIT              shift and go to state 101
    MEAN_ABSOLUTE_ERROR            shift and go to state 102
    MEAN_SQUARED_ERROR             shift and go to state 103
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 104
    MEAN                           shift and go to state 105
    MODE                           shift and go to state 106
    MEDIAN                         shift and go to state 107
    PROBABILITY                    shift and go to state 108
    FREQUENCY                      shift and go to state 109
    VARIANCE                       shift and go to state 110
    STANDARD_DEVIATION             shift and go to state 111
    SKEWNESS                       shift and go to state 112
    KURTOSI                        shift and go to state 113

state 54

    (7) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 55

    (10) VARS_B -> VARS .

    var             reduce using rule 10 (VARS_B -> VARS .)
    func            reduce using rule 10 (VARS_B -> VARS .)
    void            reduce using rule 10 (VARS_B -> VARS .)


state 56

    (11) VARS_B -> empty .

    var             reduce using rule 11 (VARS_B -> empty .)
    func            reduce using rule 11 (VARS_B -> empty .)
    void            reduce using rule 11 (VARS_B -> empty .)


state 57

    (50) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (171) PUSH_STACK_OPERANDS -> . empty
    (156) empty -> .

    lSqrBracket     reduce using rule 156 (empty -> .)
    rSqrBracket     reduce using rule 156 (empty -> .)
    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 133
    empty                          shift and go to state 134

state 58

    (24) LIST -> id lSqrBracket VARCONSTAUX . rSqrBracket SAVE_ARRAY LIST_A

    rSqrBracket     shift and go to state 135


state 59

    (51) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    rSqrBracket     reduce using rule 156 (empty -> .)
    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 136
    empty                          shift and go to state 137

state 60

    (52) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    rSqrBracket     reduce using rule 156 (empty -> .)
    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 138
    empty                          shift and go to state 137

state 61

    (13) SIMPLE_A -> assign VARCTE_AUX_VARS . SIMPLE_B
    (15) SIMPLE_B -> . comma SIMPLE
    (16) SIMPLE_B -> . empty
    (156) empty -> .

    comma           shift and go to state 70
    semicolon       reduce using rule 156 (empty -> .)

    SIMPLE_B                       shift and go to state 139
    empty                          shift and go to state 71

state 62

    (17) VARCTE_AUX_VARS -> id . ISLIST
    (73) ISLIST -> . lSqrBracket EXP rSqrBracket
    (74) ISLIST -> . empty
    (156) empty -> .

    lSqrBracket     shift and go to state 141
    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    ISLIST                         shift and go to state 140
    empty                          shift and go to state 142

state 63

    (18) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 143
    empty                          shift and go to state 137

state 64

    (19) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 144
    empty                          shift and go to state 137

state 65

    (20) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 145
    empty                          shift and go to state 137

state 66

    (21) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 21 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 21 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 67

    (22) BOOLEAN_AUX_VARS -> FALSE . SAVE_ASSIGNED_VAR
    (160) SAVE_ASSIGNED_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 146
    empty                          shift and go to state 147

state 68

    (23) BOOLEAN_AUX_VARS -> TRUE . SAVE_ASSIGNED_VAR
    (160) SAVE_ASSIGNED_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 148
    empty                          shift and go to state 147

state 69

    (14) SIMPLE_A -> SAVE_VAR SIMPLE_B .

    semicolon       reduce using rule 14 (SIMPLE_A -> SAVE_VAR SIMPLE_B .)


state 70

    (15) SIMPLE_B -> comma . SIMPLE
    (12) SIMPLE -> . id SIMPLE_A

    id              shift and go to state 150

    SIMPLE                         shift and go to state 149

state 71

    (16) SIMPLE_B -> empty .

    semicolon       reduce using rule 16 (SIMPLE_B -> empty .)


state 72

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (163) SAVE_COUNTER_PARAM -> . empty
    (156) empty -> .

    rParenthesis    reduce using rule 156 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 151
    empty                          shift and go to state 152

state 73

    (89) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 89 (METHOD_A -> PARAMS .)


state 74

    (90) METHOD_A -> empty .

    rParenthesis    reduce using rule 90 (METHOD_A -> empty .)


state 75

    (91) PARAMS -> TYPE . id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 153


state 76

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .)


state 77

    (187) PRINTQUADS -> empty .

    $end            reduce using rule 187 (PRINTQUADS -> empty .)


state 78

    (57) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 154


state 79

    (58) BLOCK_A -> STATEMENT . BLOCK_A
    (58) BLOCK_A -> . STATEMENT BLOCK_A
    (59) BLOCK_A -> . empty
    (60) STATEMENT -> . ASSIGNMENT
    (61) STATEMENT -> . CONDITION
    (62) STATEMENT -> . WRITE
    (63) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (64) STATEMENT -> . POST_CONDITIONAL_LOOP
    (65) STATEMENT -> . METHODCALL
    (66) STATEMENT -> . READ
    (67) STATEMENT -> . STATMETHODS
    (68) STATEMENT -> . RETURN
    (156) empty -> .
    (69) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (77) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (80) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (94) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (95) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (96) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (70) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (102) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (103) STATMETHODS -> . LASSO
    (104) STATMETHODS -> . RIDGE
    (105) STATMETHODS -> . K_MEANS
    (106) STATMETHODS -> . MINI_BATCH_MEANS
    (107) STATMETHODS -> . TIME_SERIES_SPLIT
    (108) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (109) STATMETHODS -> . MEAN_SQUARED_ERROR
    (110) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (111) STATMETHODS -> . MEAN
    (112) STATMETHODS -> . MODE
    (113) STATMETHODS -> . MEDIAN
    (114) STATMETHODS -> . PROBABILITY
    (115) STATMETHODS -> . FREQUENCY
    (116) STATMETHODS -> . VARIANCE
    (117) STATMETHODS -> . STANDARD_DEVIATION
    (118) STATMETHODS -> . SKEWNESS
    (119) STATMETHODS -> . KURTOSI
    (99) RETURN -> . return EXPLOG semicolon
    (120) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (121) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (122) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (123) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (124) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (125) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (126) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (127) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (128) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (129) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (132) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (135) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (138) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (141) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (144) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (147) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (150) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (153) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 156 (empty -> .)
    id              shift and go to state 90
    if              shift and go to state 91
    print           shift and go to state 92
    while           shift and go to state 93
    do              shift and go to state 94
    scan            shift and go to state 95
    return          shift and go to state 114
    ols             shift and go to state 115
    las             shift and go to state 116
    rid             shift and go to state 117
    kmeans          shift and go to state 118
    mbm             shift and go to state 119
    tseries         shift and go to state 120
    mean_abs_err    shift and go to state 121
    mean_sqr_err    shift and go to state 122
    median_abs_err  shift and go to state 123
    mean            shift and go to state 124
    mode            shift and go to state 125
    median          shift and go to state 126
    prob            shift and go to state 127
    freq            shift and go to state 128
    variance        shift and go to state 129
    stddev          shift and go to state 130
    skew            shift and go to state 131
    kurt            shift and go to state 132

    STATEMENT                      shift and go to state 79
    BLOCK_A                        shift and go to state 155
    empty                          shift and go to state 80
    ASSIGNMENT                     shift and go to state 81
    CONDITION                      shift and go to state 82
    WRITE                          shift and go to state 83
    PRE_CONDITIONAL_LOOP           shift and go to state 84
    POST_CONDITIONAL_LOOP          shift and go to state 85
    METHODCALL                     shift and go to state 86
    READ                           shift and go to state 87
    STATMETHODS                    shift and go to state 88
    RETURN                         shift and go to state 89
    ORDINARY_LEAST_SQUARES         shift and go to state 96
    LASSO                          shift and go to state 97
    RIDGE                          shift and go to state 98
    K_MEANS                        shift and go to state 99
    MINI_BATCH_MEANS               shift and go to state 100
    TIME_SERIES_SPLIT              shift and go to state 101
    MEAN_ABSOLUTE_ERROR            shift and go to state 102
    MEAN_SQUARED_ERROR             shift and go to state 103
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 104
    MEAN                           shift and go to state 105
    MODE                           shift and go to state 106
    MEDIAN                         shift and go to state 107
    PROBABILITY                    shift and go to state 108
    FREQUENCY                      shift and go to state 109
    VARIANCE                       shift and go to state 110
    STANDARD_DEVIATION             shift and go to state 111
    SKEWNESS                       shift and go to state 112
    KURTOSI                        shift and go to state 113

state 80

    (59) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 59 (BLOCK_A -> empty .)


state 81

    (60) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 60 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 60 (STATEMENT -> ASSIGNMENT .)


state 82

    (61) STATEMENT -> CONDITION .

    id              reduce using rule 61 (STATEMENT -> CONDITION .)
    if              reduce using rule 61 (STATEMENT -> CONDITION .)
    print           reduce using rule 61 (STATEMENT -> CONDITION .)
    while           reduce using rule 61 (STATEMENT -> CONDITION .)
    do              reduce using rule 61 (STATEMENT -> CONDITION .)
    scan            reduce using rule 61 (STATEMENT -> CONDITION .)
    return          reduce using rule 61 (STATEMENT -> CONDITION .)
    ols             reduce using rule 61 (STATEMENT -> CONDITION .)
    las             reduce using rule 61 (STATEMENT -> CONDITION .)
    rid             reduce using rule 61 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 61 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 61 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 61 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 61 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 61 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 61 (STATEMENT -> CONDITION .)
    mean            reduce using rule 61 (STATEMENT -> CONDITION .)
    mode            reduce using rule 61 (STATEMENT -> CONDITION .)
    median          reduce using rule 61 (STATEMENT -> CONDITION .)
    prob            reduce using rule 61 (STATEMENT -> CONDITION .)
    freq            reduce using rule 61 (STATEMENT -> CONDITION .)
    variance        reduce using rule 61 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 61 (STATEMENT -> CONDITION .)
    skew            reduce using rule 61 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 61 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 61 (STATEMENT -> CONDITION .)


state 83

    (62) STATEMENT -> WRITE .

    id              reduce using rule 62 (STATEMENT -> WRITE .)
    if              reduce using rule 62 (STATEMENT -> WRITE .)
    print           reduce using rule 62 (STATEMENT -> WRITE .)
    while           reduce using rule 62 (STATEMENT -> WRITE .)
    do              reduce using rule 62 (STATEMENT -> WRITE .)
    scan            reduce using rule 62 (STATEMENT -> WRITE .)
    return          reduce using rule 62 (STATEMENT -> WRITE .)
    ols             reduce using rule 62 (STATEMENT -> WRITE .)
    las             reduce using rule 62 (STATEMENT -> WRITE .)
    rid             reduce using rule 62 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 62 (STATEMENT -> WRITE .)
    mbm             reduce using rule 62 (STATEMENT -> WRITE .)
    tseries         reduce using rule 62 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 62 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 62 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 62 (STATEMENT -> WRITE .)
    mean            reduce using rule 62 (STATEMENT -> WRITE .)
    mode            reduce using rule 62 (STATEMENT -> WRITE .)
    median          reduce using rule 62 (STATEMENT -> WRITE .)
    prob            reduce using rule 62 (STATEMENT -> WRITE .)
    freq            reduce using rule 62 (STATEMENT -> WRITE .)
    variance        reduce using rule 62 (STATEMENT -> WRITE .)
    stddev          reduce using rule 62 (STATEMENT -> WRITE .)
    skew            reduce using rule 62 (STATEMENT -> WRITE .)
    kurt            reduce using rule 62 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 62 (STATEMENT -> WRITE .)


state 84

    (63) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 63 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 85

    (64) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 64 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 86

    (65) STATEMENT -> METHODCALL .

    id              reduce using rule 65 (STATEMENT -> METHODCALL .)
    if              reduce using rule 65 (STATEMENT -> METHODCALL .)
    print           reduce using rule 65 (STATEMENT -> METHODCALL .)
    while           reduce using rule 65 (STATEMENT -> METHODCALL .)
    do              reduce using rule 65 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 65 (STATEMENT -> METHODCALL .)
    return          reduce using rule 65 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 65 (STATEMENT -> METHODCALL .)
    las             reduce using rule 65 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 65 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 65 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 65 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 65 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 65 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 65 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 65 (STATEMENT -> METHODCALL .)
    median          reduce using rule 65 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 65 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 65 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 65 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 65 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 65 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 65 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> METHODCALL .)


state 87

    (66) STATEMENT -> READ .

    id              reduce using rule 66 (STATEMENT -> READ .)
    if              reduce using rule 66 (STATEMENT -> READ .)
    print           reduce using rule 66 (STATEMENT -> READ .)
    while           reduce using rule 66 (STATEMENT -> READ .)
    do              reduce using rule 66 (STATEMENT -> READ .)
    scan            reduce using rule 66 (STATEMENT -> READ .)
    return          reduce using rule 66 (STATEMENT -> READ .)
    ols             reduce using rule 66 (STATEMENT -> READ .)
    las             reduce using rule 66 (STATEMENT -> READ .)
    rid             reduce using rule 66 (STATEMENT -> READ .)
    kmeans          reduce using rule 66 (STATEMENT -> READ .)
    mbm             reduce using rule 66 (STATEMENT -> READ .)
    tseries         reduce using rule 66 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 66 (STATEMENT -> READ .)
    mean            reduce using rule 66 (STATEMENT -> READ .)
    mode            reduce using rule 66 (STATEMENT -> READ .)
    median          reduce using rule 66 (STATEMENT -> READ .)
    prob            reduce using rule 66 (STATEMENT -> READ .)
    freq            reduce using rule 66 (STATEMENT -> READ .)
    variance        reduce using rule 66 (STATEMENT -> READ .)
    stddev          reduce using rule 66 (STATEMENT -> READ .)
    skew            reduce using rule 66 (STATEMENT -> READ .)
    kurt            reduce using rule 66 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> READ .)


state 88

    (67) STATEMENT -> STATMETHODS .

    id              reduce using rule 67 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 67 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 67 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 67 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 67 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 67 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 67 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 67 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 67 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 67 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 67 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 67 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 67 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 67 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 67 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 67 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 67 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> STATMETHODS .)


state 89

    (68) STATEMENT -> RETURN .

    id              reduce using rule 68 (STATEMENT -> RETURN .)
    if              reduce using rule 68 (STATEMENT -> RETURN .)
    print           reduce using rule 68 (STATEMENT -> RETURN .)
    while           reduce using rule 68 (STATEMENT -> RETURN .)
    do              reduce using rule 68 (STATEMENT -> RETURN .)
    scan            reduce using rule 68 (STATEMENT -> RETURN .)
    return          reduce using rule 68 (STATEMENT -> RETURN .)
    ols             reduce using rule 68 (STATEMENT -> RETURN .)
    las             reduce using rule 68 (STATEMENT -> RETURN .)
    rid             reduce using rule 68 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 68 (STATEMENT -> RETURN .)
    mbm             reduce using rule 68 (STATEMENT -> RETURN .)
    tseries         reduce using rule 68 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 68 (STATEMENT -> RETURN .)
    mean            reduce using rule 68 (STATEMENT -> RETURN .)
    mode            reduce using rule 68 (STATEMENT -> RETURN .)
    median          reduce using rule 68 (STATEMENT -> RETURN .)
    prob            reduce using rule 68 (STATEMENT -> RETURN .)
    freq            reduce using rule 68 (STATEMENT -> RETURN .)
    variance        reduce using rule 68 (STATEMENT -> RETURN .)
    stddev          reduce using rule 68 (STATEMENT -> RETURN .)
    skew            reduce using rule 68 (STATEMENT -> RETURN .)
    kurt            reduce using rule 68 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> RETURN .)


state 90

    (69) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (96) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (171) PUSH_STACK_OPERANDS -> . empty
    (167) VALIDATE_FUNCTION_NAME -> . empty
    (156) empty -> .

    lSqrBracket     reduce using rule 156 (empty -> .)
    assign          reduce using rule 156 (empty -> .)
    lParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 156
    VALIDATE_FUNCTION_NAME         shift and go to state 157
    empty                          shift and go to state 158

state 91

    (77) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 159


state 92

    (80) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 160


state 93

    (94) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (183) PUSH_STACK_JUMPS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 161
    empty                          shift and go to state 162

state 94

    (95) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (183) PUSH_STACK_JUMPS -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 163
    empty                          shift and go to state 162

state 95

    (70) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 164


state 96

    (102) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 102 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 97

    (103) STATMETHODS -> LASSO .

    id              reduce using rule 103 (STATMETHODS -> LASSO .)
    if              reduce using rule 103 (STATMETHODS -> LASSO .)
    print           reduce using rule 103 (STATMETHODS -> LASSO .)
    while           reduce using rule 103 (STATMETHODS -> LASSO .)
    do              reduce using rule 103 (STATMETHODS -> LASSO .)
    scan            reduce using rule 103 (STATMETHODS -> LASSO .)
    return          reduce using rule 103 (STATMETHODS -> LASSO .)
    ols             reduce using rule 103 (STATMETHODS -> LASSO .)
    las             reduce using rule 103 (STATMETHODS -> LASSO .)
    rid             reduce using rule 103 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 103 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 103 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 103 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 103 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 103 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 103 (STATMETHODS -> LASSO .)
    mean            reduce using rule 103 (STATMETHODS -> LASSO .)
    mode            reduce using rule 103 (STATMETHODS -> LASSO .)
    median          reduce using rule 103 (STATMETHODS -> LASSO .)
    prob            reduce using rule 103 (STATMETHODS -> LASSO .)
    freq            reduce using rule 103 (STATMETHODS -> LASSO .)
    variance        reduce using rule 103 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 103 (STATMETHODS -> LASSO .)
    skew            reduce using rule 103 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 103 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 103 (STATMETHODS -> LASSO .)


state 98

    (104) STATMETHODS -> RIDGE .

    id              reduce using rule 104 (STATMETHODS -> RIDGE .)
    if              reduce using rule 104 (STATMETHODS -> RIDGE .)
    print           reduce using rule 104 (STATMETHODS -> RIDGE .)
    while           reduce using rule 104 (STATMETHODS -> RIDGE .)
    do              reduce using rule 104 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 104 (STATMETHODS -> RIDGE .)
    return          reduce using rule 104 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 104 (STATMETHODS -> RIDGE .)
    las             reduce using rule 104 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 104 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 104 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 104 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 104 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 104 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 104 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 104 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 104 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 104 (STATMETHODS -> RIDGE .)
    median          reduce using rule 104 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 104 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 104 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 104 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 104 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 104 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 104 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 104 (STATMETHODS -> RIDGE .)


state 99

    (105) STATMETHODS -> K_MEANS .

    id              reduce using rule 105 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 105 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 105 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 105 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 105 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 105 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 105 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 105 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 105 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 105 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 105 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 105 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 105 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 105 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 105 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 105 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 105 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 105 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 105 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 105 (STATMETHODS -> K_MEANS .)


state 100

    (106) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 106 (STATMETHODS -> MINI_BATCH_MEANS .)


state 101

    (107) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 107 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 102

    (108) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 108 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 103

    (109) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 109 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 104

    (110) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 110 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 105

    (111) STATMETHODS -> MEAN .

    id              reduce using rule 111 (STATMETHODS -> MEAN .)
    if              reduce using rule 111 (STATMETHODS -> MEAN .)
    print           reduce using rule 111 (STATMETHODS -> MEAN .)
    while           reduce using rule 111 (STATMETHODS -> MEAN .)
    do              reduce using rule 111 (STATMETHODS -> MEAN .)
    scan            reduce using rule 111 (STATMETHODS -> MEAN .)
    return          reduce using rule 111 (STATMETHODS -> MEAN .)
    ols             reduce using rule 111 (STATMETHODS -> MEAN .)
    las             reduce using rule 111 (STATMETHODS -> MEAN .)
    rid             reduce using rule 111 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 111 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 111 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 111 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 111 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 111 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 111 (STATMETHODS -> MEAN .)
    mean            reduce using rule 111 (STATMETHODS -> MEAN .)
    mode            reduce using rule 111 (STATMETHODS -> MEAN .)
    median          reduce using rule 111 (STATMETHODS -> MEAN .)
    prob            reduce using rule 111 (STATMETHODS -> MEAN .)
    freq            reduce using rule 111 (STATMETHODS -> MEAN .)
    variance        reduce using rule 111 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 111 (STATMETHODS -> MEAN .)
    skew            reduce using rule 111 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 111 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 111 (STATMETHODS -> MEAN .)


state 106

    (112) STATMETHODS -> MODE .

    id              reduce using rule 112 (STATMETHODS -> MODE .)
    if              reduce using rule 112 (STATMETHODS -> MODE .)
    print           reduce using rule 112 (STATMETHODS -> MODE .)
    while           reduce using rule 112 (STATMETHODS -> MODE .)
    do              reduce using rule 112 (STATMETHODS -> MODE .)
    scan            reduce using rule 112 (STATMETHODS -> MODE .)
    return          reduce using rule 112 (STATMETHODS -> MODE .)
    ols             reduce using rule 112 (STATMETHODS -> MODE .)
    las             reduce using rule 112 (STATMETHODS -> MODE .)
    rid             reduce using rule 112 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 112 (STATMETHODS -> MODE .)
    mbm             reduce using rule 112 (STATMETHODS -> MODE .)
    tseries         reduce using rule 112 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 112 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 112 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 112 (STATMETHODS -> MODE .)
    mean            reduce using rule 112 (STATMETHODS -> MODE .)
    mode            reduce using rule 112 (STATMETHODS -> MODE .)
    median          reduce using rule 112 (STATMETHODS -> MODE .)
    prob            reduce using rule 112 (STATMETHODS -> MODE .)
    freq            reduce using rule 112 (STATMETHODS -> MODE .)
    variance        reduce using rule 112 (STATMETHODS -> MODE .)
    stddev          reduce using rule 112 (STATMETHODS -> MODE .)
    skew            reduce using rule 112 (STATMETHODS -> MODE .)
    kurt            reduce using rule 112 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 112 (STATMETHODS -> MODE .)


state 107

    (113) STATMETHODS -> MEDIAN .

    id              reduce using rule 113 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 113 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 113 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 113 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 113 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 113 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 113 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 113 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 113 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 113 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 113 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 113 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 113 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 113 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 113 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 113 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 113 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 113 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 113 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 113 (STATMETHODS -> MEDIAN .)


state 108

    (114) STATMETHODS -> PROBABILITY .

    id              reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 114 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 114 (STATMETHODS -> PROBABILITY .)


state 109

    (115) STATMETHODS -> FREQUENCY .

    id              reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 115 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> FREQUENCY .)


state 110

    (116) STATMETHODS -> VARIANCE .

    id              reduce using rule 116 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 116 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 116 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 116 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 116 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 116 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 116 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 116 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 116 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 116 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 116 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 116 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 116 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 116 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 116 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 116 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> VARIANCE .)


state 111

    (117) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> STANDARD_DEVIATION .)


state 112

    (118) STATMETHODS -> SKEWNESS .

    id              reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 118 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> SKEWNESS .)


state 113

    (119) STATMETHODS -> KURTOSI .

    id              reduce using rule 119 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 119 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 119 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 119 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 119 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 119 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 119 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 119 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 119 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 119 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 119 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 119 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 119 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 119 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 119 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 119 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> KURTOSI .)


state 114

    (99) RETURN -> return . EXPLOG semicolon
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 165
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 115

    (120) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 173


state 116

    (121) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 174


state 117

    (122) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 175


state 118

    (123) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 176


state 119

    (124) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 177


state 120

    (125) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 178


state 121

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 179


state 122

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 180


state 123

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 181


state 124

    (129) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 182


state 125

    (132) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 183


state 126

    (135) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 184


state 127

    (138) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 185


state 128

    (141) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 186


state 129

    (144) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 187


state 130

    (147) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 188


state 131

    (150) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 189


state 132

    (153) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 190


state 133

    (50) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (73) ISLIST -> . lSqrBracket EXP rSqrBracket
    (74) ISLIST -> . empty
    (156) empty -> .

    lSqrBracket     shift and go to state 141
    rSqrBracket     reduce using rule 156 (empty -> .)
    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    ISLIST                         shift and go to state 191
    empty                          shift and go to state 142

state 134

    (171) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)


state 135

    (24) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket . SAVE_ARRAY LIST_A
    (161) SAVE_ARRAY -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ARRAY                     shift and go to state 192
    empty                          shift and go to state 193

state 136

    (51) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    rSqrBracket     reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    times           reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 51 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 137

    (172) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    rSqrBracket     reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    comma           reduce using rule 172 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 138

    (52) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    rSqrBracket     reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    times           reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 52 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 139

    (13) SIMPLE_A -> assign VARCTE_AUX_VARS SIMPLE_B .

    semicolon       reduce using rule 13 (SIMPLE_A -> assign VARCTE_AUX_VARS SIMPLE_B .)


state 140

    (17) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 17 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 17 (VARCTE_AUX_VARS -> id ISLIST .)


state 141

    (73) ISLIST -> lSqrBracket . EXP rSqrBracket
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 194
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 142

    (74) ISLIST -> empty .

    comma           reduce using rule 74 (ISLIST -> empty .)
    semicolon       reduce using rule 74 (ISLIST -> empty .)
    rSqrBracket     reduce using rule 74 (ISLIST -> empty .)
    times           reduce using rule 74 (ISLIST -> empty .)
    divide          reduce using rule 74 (ISLIST -> empty .)
    plus            reduce using rule 74 (ISLIST -> empty .)
    minus           reduce using rule 74 (ISLIST -> empty .)
    greater         reduce using rule 74 (ISLIST -> empty .)
    lessThan        reduce using rule 74 (ISLIST -> empty .)
    greaterEquals   reduce using rule 74 (ISLIST -> empty .)
    lessThanEquals  reduce using rule 74 (ISLIST -> empty .)
    equals          reduce using rule 74 (ISLIST -> empty .)
    notEquals       reduce using rule 74 (ISLIST -> empty .)
    and             reduce using rule 74 (ISLIST -> empty .)
    or              reduce using rule 74 (ISLIST -> empty .)
    rParenthesis    reduce using rule 74 (ISLIST -> empty .)
    assign          reduce using rule 74 (ISLIST -> empty .)


state 143

    (18) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (160) SAVE_ASSIGNED_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 195
    empty                          shift and go to state 147

state 144

    (19) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (160) SAVE_ASSIGNED_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 196
    empty                          shift and go to state 147

state 145

    (20) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (160) SAVE_ASSIGNED_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 197
    empty                          shift and go to state 147

state 146

    (22) BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 22 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 22 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)


state 147

    (160) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 160 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 160 (SAVE_ASSIGNED_VAR -> empty .)


state 148

    (23) BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)


state 149

    (15) SIMPLE_B -> comma SIMPLE .

    semicolon       reduce using rule 15 (SIMPLE_B -> comma SIMPLE .)


state 150

    (12) SIMPLE -> id . SIMPLE_A
    (13) SIMPLE_A -> . assign VARCTE_AUX_VARS SIMPLE_B
    (14) SIMPLE_A -> . SAVE_VAR SIMPLE_B
    (159) SAVE_VAR -> . empty
    (156) empty -> .

    assign          shift and go to state 48
    comma           reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)

    SIMPLE_A                       shift and go to state 46
    SAVE_VAR                       shift and go to state 49
    empty                          shift and go to state 50

state 151

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 198


state 152

    (163) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 163 (SAVE_COUNTER_PARAM -> empty .)


state 153

    (91) PARAMS -> TYPE id . SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (159) SAVE_VAR -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    SAVE_VAR                       shift and go to state 199
    empty                          shift and go to state 50

state 154

    (57) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 57 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 155

    (58) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 58 (BLOCK_A -> STATEMENT BLOCK_A .)


state 156

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (73) ISLIST -> . lSqrBracket EXP rSqrBracket
    (74) ISLIST -> . empty
    (156) empty -> .

    lSqrBracket     shift and go to state 141
    assign          reduce using rule 156 (empty -> .)

    ISLIST                         shift and go to state 200
    empty                          shift and go to state 142

state 157

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (168) ERA -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)

    ERA                            shift and go to state 201
    empty                          shift and go to state 202

state 158

    (171) PUSH_STACK_OPERANDS -> empty .
    (167) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 171 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 167 (VALIDATE_FUNCTION_NAME -> empty .)


state 159

    (77) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 203
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 160

    (80) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPRESSION                     shift and go to state 204
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 161

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 205


state 162

    (183) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 183 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 183 (PUSH_STACK_JUMPS -> empty .)


state 163

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 206

state 164

    (70) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (83) VARCTE -> . id ISLIST
    (84) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (85) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (86) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (87) VARCTE -> . BOOLEAN
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 208
    cte_i           shift and go to state 209
    cte_f           shift and go to state 210
    cte_str         shift and go to state 211
    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    VARCTE                         shift and go to state 207
    BOOLEAN                        shift and go to state 212

state 165

    (99) RETURN -> return EXPLOG . semicolon

    semicolon       shift and go to state 215


state 166

    (27) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (29) EXPLOG_A -> . and EXPLOG
    (30) EXPLOG_A -> . or EXPLOG
    (31) EXPLOG_A -> . empty
    (156) empty -> .

    and             shift and go to state 217
    or              shift and go to state 218
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    EXPLOG_A                       shift and go to state 216
    empty                          shift and go to state 219

state 167

    (28) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPRESSION                     shift and go to state 220
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 168

    (32) EXPRESSION -> EXP .
    (33) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (34) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (35) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (36) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (37) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (38) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (39) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 32 (EXPRESSION -> EXP .)
    or              reduce using rule 32 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 32 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 32 (EXPRESSION -> EXP .)
    comma           reduce using rule 32 (EXPRESSION -> EXP .)
    greater         shift and go to state 222
    lessThan        shift and go to state 223
    greaterEquals   shift and go to state 224
    lessThanEquals  shift and go to state 225
    equals          shift and go to state 226
    notEquals       shift and go to state 227

    EXPRESSION_A                   shift and go to state 221

state 169

    (40) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (175) SOLVE_OPERATION_SUM_MINUS -> . empty
    (156) empty -> .

    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rSqrBracket     reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 228
    empty                          shift and go to state 229

state 170

    (44) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (176) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (156) empty -> .

    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rSqrBracket     reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 230
    empty                          shift and go to state 231

state 171

    (48) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    not             reduce using rule 156 (empty -> .)
    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 232
    empty                          shift and go to state 233

state 172

    (49) FACTOR -> VARCONSTAUX .

    times           reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 49 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 49 (FACTOR -> VARCONSTAUX .)


state 173

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 234


state 174

    (121) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 235


state 175

    (122) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 236


state 176

    (123) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 237

state 177

    (124) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 238

state 178

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 239

state 179

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 240


state 180

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 241


state 181

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 242


state 182

    (129) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 243


state 183

    (132) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 244


state 184

    (135) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 245


state 185

    (138) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 246


state 186

    (141) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 247


state 187

    (144) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 248


state 188

    (147) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 249


state 189

    (150) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 250


state 190

    (153) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 251


state 191

    (50) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    rSqrBracket     reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    times           reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 50 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 192

    (24) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY . LIST_A
    (25) LIST_A -> . comma LIST
    (26) LIST_A -> . empty
    (156) empty -> .

    comma           shift and go to state 253
    semicolon       reduce using rule 156 (empty -> .)

    LIST_A                         shift and go to state 252
    empty                          shift and go to state 254

state 193

    (161) SAVE_ARRAY -> empty .

    comma           reduce using rule 161 (SAVE_ARRAY -> empty .)
    semicolon       reduce using rule 161 (SAVE_ARRAY -> empty .)


state 194

    (73) ISLIST -> lSqrBracket EXP . rSqrBracket

    rSqrBracket     shift and go to state 255


state 195

    (18) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 18 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 18 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 196

    (19) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 19 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 19 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 197

    (20) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 20 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 20 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 198

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (164) SAVE_COUNTER_QUAD -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 256
    empty                          shift and go to state 257

state 199

    (91) PARAMS -> TYPE id SAVE_VAR . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (166) SAVE_PARAM_TYPE -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 258
    empty                          shift and go to state 259

state 200

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon

    assign          shift and go to state 260


state 201

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 261


state 202

    (168) ERA -> empty .

    lParenthesis    reduce using rule 168 (ERA -> empty .)


state 203

    (77) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 262


state 204

    (80) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (186) GENERATE_QUAD_PRINT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 263
    empty                          shift and go to state 264

state 205

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 265
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 206

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 266


state 207

    (70) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (71) READ_A -> . comma
    (72) READ_A -> . empty
    (156) empty -> .

    comma           shift and go to state 268
    rParenthesis    reduce using rule 156 (empty -> .)

    READ_A                         shift and go to state 267
    empty                          shift and go to state 269

state 208

    (83) VARCTE -> id . ISLIST
    (73) ISLIST -> . lSqrBracket EXP rSqrBracket
    (74) ISLIST -> . empty
    (156) empty -> .

    lSqrBracket     shift and go to state 141
    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    ISLIST                         shift and go to state 270
    empty                          shift and go to state 142

state 209

    (84) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 271
    empty                          shift and go to state 137

state 210

    (85) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 272
    empty                          shift and go to state 137

state 211

    (86) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 273
    empty                          shift and go to state 137

state 212

    (87) VARCTE -> BOOLEAN .

    comma           reduce using rule 87 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 87 (VARCTE -> BOOLEAN .)


state 213

    (100) BOOLEAN -> FALSE . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 274
    empty                          shift and go to state 137

state 214

    (101) BOOLEAN -> TRUE . PUSH_STACK_OPERANDS_CONSTANT
    (172) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 275
    empty                          shift and go to state 137

state 215

    (99) RETURN -> return EXPLOG semicolon .

    id              reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    if              reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    print           reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    while           reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    do              reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    scan            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    return          reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    ols             reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    las             reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    rid             reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    kmeans          reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    mbm             reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    tseries         reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    mean_abs_err    reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    mean_sqr_err    reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    median_abs_err  reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    mean            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    mode            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    median          reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    prob            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    freq            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    variance        reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    stddev          reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    skew            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    kurt            reduce using rule 99 (RETURN -> return EXPLOG semicolon .)
    rCurlyBracket   reduce using rule 99 (RETURN -> return EXPLOG semicolon .)


state 216

    (27) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (178) SOLVE_OPERATION_LOGIC -> . empty
    (156) empty -> .

    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 276
    empty                          shift and go to state 277

state 217

    (29) EXPLOG_A -> and . EXPLOG
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 278
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 218

    (30) EXPLOG_A -> or . EXPLOG
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 279
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 219

    (31) EXPLOG_A -> empty .

    semicolon       reduce using rule 31 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 31 (EXPLOG_A -> empty .)


state 220

    (28) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (29) EXPLOG_A -> . and EXPLOG
    (30) EXPLOG_A -> . or EXPLOG
    (31) EXPLOG_A -> . empty
    (156) empty -> .

    and             shift and go to state 217
    or              shift and go to state 218
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    EXPLOG_A                       shift and go to state 280
    empty                          shift and go to state 219

state 221

    (33) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 281
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 222

    (34) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 282
    empty                          shift and go to state 233

state 223

    (35) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 283
    empty                          shift and go to state 233

state 224

    (36) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 284
    empty                          shift and go to state 233

state 225

    (37) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 285
    empty                          shift and go to state 233

state 226

    (38) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 286
    empty                          shift and go to state 233

state 227

    (39) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 287
    empty                          shift and go to state 233

state 228

    (40) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (41) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (42) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (43) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    greater         reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rSqrBracket     reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 40 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 289
    minus           shift and go to state 290

    EXP_A                          shift and go to state 288

state 229

    (175) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 175 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 230

    (44) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (45) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (46) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (47) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 44 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 292
    divide          shift and go to state 293

    TERM_A                         shift and go to state 291

state 231

    (176) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 176 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 232

    (48) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 294
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 233

    (173) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 173 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 173 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 173 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 173 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 173 (PUSH_STACK_OPERATORS -> empty .)


state 234

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 295


state 235

    (121) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 296


state 236

    (122) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 297


state 237

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 298


state 238

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 299


state 239

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 300


state 240

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 301


state 241

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 302


state 242

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 303


state 243

    (129) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (130) MEAN_A -> . comma id MEAN_A
    (131) MEAN_A -> . empty
    (156) empty -> .

    comma           shift and go to state 305
    rParenthesis    reduce using rule 156 (empty -> .)

    MEAN_A                         shift and go to state 304
    empty                          shift and go to state 306

state 244

    (132) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (133) MODE_A -> . comma id MODE_A
    (134) MODE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 308
    rParenthesis    reduce using rule 156 (empty -> .)

    MODE_A                         shift and go to state 307
    empty                          shift and go to state 309

state 245

    (135) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (136) MEDIAN_A -> . comma id MEDIAN_A
    (137) MEDIAN_A -> . empty
    (156) empty -> .

    comma           shift and go to state 311
    rParenthesis    reduce using rule 156 (empty -> .)

    MEDIAN_A                       shift and go to state 310
    empty                          shift and go to state 312

state 246

    (138) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (139) PROBABILITY_A -> . comma id PROBABILITY_A
    (140) PROBABILITY_A -> . empty
    (156) empty -> .

    comma           shift and go to state 314
    rParenthesis    reduce using rule 156 (empty -> .)

    PROBABILITY_A                  shift and go to state 313
    empty                          shift and go to state 315

state 247

    (141) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (142) FREQUENCY_A -> . comma id FREQUENCY_A
    (143) FREQUENCY_A -> . empty
    (156) empty -> .

    comma           shift and go to state 317
    rParenthesis    reduce using rule 156 (empty -> .)

    FREQUENCY_A                    shift and go to state 316
    empty                          shift and go to state 318

state 248

    (144) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (145) VARIANCE_A -> . comma id VARIANCE_A
    (146) VARIANCE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 320
    rParenthesis    reduce using rule 156 (empty -> .)

    VARIANCE_A                     shift and go to state 319
    empty                          shift and go to state 321

state 249

    (147) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (148) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (149) STANDARD_DEVIATION_A -> . empty
    (156) empty -> .

    comma           shift and go to state 323
    rParenthesis    reduce using rule 156 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 322
    empty                          shift and go to state 324

state 250

    (150) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (151) SKEWNESS_A -> . comma id SKEWNESS_A
    (152) SKEWNESS_A -> . empty
    (156) empty -> .

    comma           shift and go to state 326
    rParenthesis    reduce using rule 156 (empty -> .)

    SKEWNESS_A                     shift and go to state 325
    empty                          shift and go to state 327

state 251

    (153) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (154) KURTOSI_A -> . comma id KURTOSI_A
    (155) KURTOSI_A -> . empty
    (156) empty -> .

    comma           shift and go to state 329
    rParenthesis    reduce using rule 156 (empty -> .)

    KURTOSI_A                      shift and go to state 328
    empty                          shift and go to state 330

state 252

    (24) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .

    semicolon       reduce using rule 24 (LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .)


state 253

    (25) LIST_A -> comma . LIST
    (24) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 332

    LIST                           shift and go to state 331

state 254

    (26) LIST_A -> empty .

    semicolon       reduce using rule 26 (LIST_A -> empty .)


state 255

    (73) ISLIST -> lSqrBracket EXP rSqrBracket .

    comma           reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    semicolon       reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rSqrBracket     reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    times           reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    divide          reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    plus            reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    minus           reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greater         reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThan        reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greaterEquals   reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThanEquals  reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    equals          reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    notEquals       reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    and             reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    or              reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rParenthesis    reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    assign          reduce using rule 73 (ISLIST -> lSqrBracket EXP rSqrBracket .)


state 256

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 333

state 257

    (164) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 164 (SAVE_COUNTER_QUAD -> empty .)


state 258

    (91) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (162) INCREMENT_PARAM_COUNTER -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 334
    empty                          shift and go to state 335

state 259

    (166) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 166 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 166 (SAVE_PARAM_TYPE -> empty .)


state 260

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    not             reduce using rule 156 (empty -> .)
    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 336
    empty                          shift and go to state 233

state 261

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 337
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 262

    (77) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (180) GENERATE_GOTOF_CONDITIONAL -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 338
    empty                          shift and go to state 339

state 263

    (80) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (81) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (82) WRITE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 156 (empty -> .)

    WRITE_A                        shift and go to state 340
    empty                          shift and go to state 342

state 264

    (186) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 186 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 186 (GENERATE_QUAD_PRINT -> empty .)


state 265

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 343


state 266

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 344


state 267

    (70) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 345


state 268

    (71) READ_A -> comma .

    rParenthesis    reduce using rule 71 (READ_A -> comma .)


state 269

    (72) READ_A -> empty .

    rParenthesis    reduce using rule 72 (READ_A -> empty .)


state 270

    (83) VARCTE -> id ISLIST .

    comma           reduce using rule 83 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 83 (VARCTE -> id ISLIST .)


state 271

    (84) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 84 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 84 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 272

    (85) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 85 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 85 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 273

    (86) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 86 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 86 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 274

    (100) BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 100 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 100 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)


state 275

    (101) BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 101 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 101 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)


state 276

    (27) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 27 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 27 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 277

    (178) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 178 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 178 (SOLVE_OPERATION_LOGIC -> empty .)


state 278

    (29) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 29 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 29 (EXPLOG_A -> and EXPLOG .)


state 279

    (30) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 30 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 30 (EXPLOG_A -> or EXPLOG .)


state 280

    (28) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (178) SOLVE_OPERATION_LOGIC -> . empty
    (156) empty -> .

    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 346
    empty                          shift and go to state 277

state 281

    (33) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (177) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (156) empty -> .

    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 347
    empty                          shift and go to state 348

state 282

    (34) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 34 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 34 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 34 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 34 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 283

    (35) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 35 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 35 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 35 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 35 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 284

    (36) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 36 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 36 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 36 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 36 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 285

    (37) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 37 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 37 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 37 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 37 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 286

    (38) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 38 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 38 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 38 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 38 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 287

    (39) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 288

    (41) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    greater         reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rSqrBracket     reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 41 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 289

    (42) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 349
    empty                          shift and go to state 233

state 290

    (43) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 350
    empty                          shift and go to state 233

state 291

    (45) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 45 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 292

    (46) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 351
    empty                          shift and go to state 233

state 293

    (47) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (173) PUSH_STACK_OPERATORS -> . empty
    (156) empty -> .

    lParenthesis    reduce using rule 156 (empty -> .)
    id              reduce using rule 156 (empty -> .)
    cte_i           reduce using rule 156 (empty -> .)
    cte_f           reduce using rule 156 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 352
    empty                          shift and go to state 233

state 294

    (48) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 353


state 295

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 354


state 296

    (121) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 355


state 297

    (122) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 356


state 298

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 357


state 299

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 358


state 300

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 359

state 301

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 360


state 302

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 361


state 303

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 362


state 304

    (129) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 363


state 305

    (130) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 364


state 306

    (131) MEAN_A -> empty .

    rParenthesis    reduce using rule 131 (MEAN_A -> empty .)


state 307

    (132) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 365


state 308

    (133) MODE_A -> comma . id MODE_A

    id              shift and go to state 366


state 309

    (134) MODE_A -> empty .

    rParenthesis    reduce using rule 134 (MODE_A -> empty .)


state 310

    (135) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 367


state 311

    (136) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 368


state 312

    (137) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 137 (MEDIAN_A -> empty .)


state 313

    (138) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 369


state 314

    (139) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 370


state 315

    (140) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 140 (PROBABILITY_A -> empty .)


state 316

    (141) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 371


state 317

    (142) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 372


state 318

    (143) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 143 (FREQUENCY_A -> empty .)


state 319

    (144) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 373


state 320

    (145) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 374


state 321

    (146) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 146 (VARIANCE_A -> empty .)


state 322

    (147) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 375


state 323

    (148) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 376


state 324

    (149) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 149 (STANDARD_DEVIATION_A -> empty .)


state 325

    (150) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 377


state 326

    (151) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 378


state 327

    (152) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 152 (SKEWNESS_A -> empty .)


state 328

    (153) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 379


state 329

    (154) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 380


state 330

    (155) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 155 (KURTOSI_A -> empty .)


state 331

    (25) LIST_A -> comma LIST .

    semicolon       reduce using rule 25 (LIST_A -> comma LIST .)


state 332

    (24) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    lSqrBracket     shift and go to state 47


state 333

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (165) END_PROCEDURE -> . empty
    (156) empty -> .

    func            reduce using rule 156 (empty -> .)
    void            reduce using rule 156 (empty -> .)

    END_PROCEDURE                  shift and go to state 381
    empty                          shift and go to state 382

state 334

    (91) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (92) PARAMS_A -> . comma PARAMS
    (93) PARAMS_A -> . empty
    (156) empty -> .

    comma           shift and go to state 384
    rParenthesis    reduce using rule 156 (empty -> .)

    PARAMS_A                       shift and go to state 383
    empty                          shift and go to state 385

state 335

    (162) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 162 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 162 (INCREMENT_PARAM_COUNTER -> empty .)


state 336

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 386
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 337

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP . VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (169) VALIDATE_PARAMETER -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 387
    empty                          shift and go to state 388

state 338

    (77) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 389

state 339

    (180) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 180 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 340

    (80) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 390


state 341

    (81) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPRESSION                     shift and go to state 391
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 342

    (82) WRITE_A -> empty .

    rParenthesis    reduce using rule 82 (WRITE_A -> empty .)


state 343

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (180) GENERATE_GOTOF_CONDITIONAL -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 392
    empty                          shift and go to state 339

state 344

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (27) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (28) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPRESSION -> . EXP
    (33) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 167
    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXPLOG                         shift and go to state 393
    EXPRESSION                     shift and go to state 166
    EXP                            shift and go to state 168
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 345

    (70) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 70 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 346

    (28) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 28 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 28 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 347

    (33) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 33 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 348

    (177) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 177 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 177 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 177 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 177 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 177 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 349

    (42) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 394
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 350

    (43) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 395
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 351

    (46) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    TERM                           shift and go to state 396
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 352

    (47) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    TERM                           shift and go to state 397
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 353

    (48) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (174) POP_STACK_OPERATORS -> . empty
    (156) empty -> .

    times           reduce using rule 156 (empty -> .)
    divide          reduce using rule 156 (empty -> .)
    plus            reduce using rule 156 (empty -> .)
    minus           reduce using rule 156 (empty -> .)
    greater         reduce using rule 156 (empty -> .)
    lessThan        reduce using rule 156 (empty -> .)
    greaterEquals   reduce using rule 156 (empty -> .)
    lessThanEquals  reduce using rule 156 (empty -> .)
    equals          reduce using rule 156 (empty -> .)
    notEquals       reduce using rule 156 (empty -> .)
    and             reduce using rule 156 (empty -> .)
    or              reduce using rule 156 (empty -> .)
    semicolon       reduce using rule 156 (empty -> .)
    rSqrBracket     reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)
    comma           reduce using rule 156 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 398
    empty                          shift and go to state 399

state 354

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 400


state 355

    (121) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 401


state 356

    (122) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 402


state 357

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 403


state 358

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 404


state 359

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 405


state 360

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 406


state 361

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 407


state 362

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 408


state 363

    (129) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 409


state 364

    (130) MEAN_A -> comma id . MEAN_A
    (130) MEAN_A -> . comma id MEAN_A
    (131) MEAN_A -> . empty
    (156) empty -> .

    comma           shift and go to state 305
    rParenthesis    reduce using rule 156 (empty -> .)

    MEAN_A                         shift and go to state 410
    empty                          shift and go to state 306

state 365

    (132) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 411


state 366

    (133) MODE_A -> comma id . MODE_A
    (133) MODE_A -> . comma id MODE_A
    (134) MODE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 308
    rParenthesis    reduce using rule 156 (empty -> .)

    MODE_A                         shift and go to state 412
    empty                          shift and go to state 309

state 367

    (135) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 413


state 368

    (136) MEDIAN_A -> comma id . MEDIAN_A
    (136) MEDIAN_A -> . comma id MEDIAN_A
    (137) MEDIAN_A -> . empty
    (156) empty -> .

    comma           shift and go to state 311
    rParenthesis    reduce using rule 156 (empty -> .)

    MEDIAN_A                       shift and go to state 414
    empty                          shift and go to state 312

state 369

    (138) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 415


state 370

    (139) PROBABILITY_A -> comma id . PROBABILITY_A
    (139) PROBABILITY_A -> . comma id PROBABILITY_A
    (140) PROBABILITY_A -> . empty
    (156) empty -> .

    comma           shift and go to state 314
    rParenthesis    reduce using rule 156 (empty -> .)

    PROBABILITY_A                  shift and go to state 416
    empty                          shift and go to state 315

state 371

    (141) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 417


state 372

    (142) FREQUENCY_A -> comma id . FREQUENCY_A
    (142) FREQUENCY_A -> . comma id FREQUENCY_A
    (143) FREQUENCY_A -> . empty
    (156) empty -> .

    comma           shift and go to state 317
    rParenthesis    reduce using rule 156 (empty -> .)

    FREQUENCY_A                    shift and go to state 418
    empty                          shift and go to state 318

state 373

    (144) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 419


state 374

    (145) VARIANCE_A -> comma id . VARIANCE_A
    (145) VARIANCE_A -> . comma id VARIANCE_A
    (146) VARIANCE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 320
    rParenthesis    reduce using rule 156 (empty -> .)

    VARIANCE_A                     shift and go to state 420
    empty                          shift and go to state 321

state 375

    (147) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 421


state 376

    (148) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (148) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (149) STANDARD_DEVIATION_A -> . empty
    (156) empty -> .

    comma           shift and go to state 323
    rParenthesis    reduce using rule 156 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 422
    empty                          shift and go to state 324

state 377

    (150) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 423


state 378

    (151) SKEWNESS_A -> comma id . SKEWNESS_A
    (151) SKEWNESS_A -> . comma id SKEWNESS_A
    (152) SKEWNESS_A -> . empty
    (156) empty -> .

    comma           shift and go to state 326
    rParenthesis    reduce using rule 156 (empty -> .)

    SKEWNESS_A                     shift and go to state 424
    empty                          shift and go to state 327

state 379

    (153) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 425


state 380

    (154) KURTOSI_A -> comma id . KURTOSI_A
    (154) KURTOSI_A -> . comma id KURTOSI_A
    (155) KURTOSI_A -> . empty
    (156) empty -> .

    comma           shift and go to state 329
    rParenthesis    reduce using rule 156 (empty -> .)

    KURTOSI_A                      shift and go to state 426
    empty                          shift and go to state 330

state 381

    (88) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 88 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 88 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 382

    (165) END_PROCEDURE -> empty .

    func            reduce using rule 165 (END_PROCEDURE -> empty .)
    void            reduce using rule 165 (END_PROCEDURE -> empty .)


state 383

    (91) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 91 (PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 384

    (92) PARAMS_A -> comma . PARAMS
    (91) PARAMS -> . TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (53) TYPE -> . int SAVE_TYPE
    (54) TYPE -> . float SAVE_TYPE
    (55) TYPE -> . string SAVE_TYPE
    (56) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    PARAMS                         shift and go to state 427
    TYPE                           shift and go to state 75

state 385

    (93) PARAMS_A -> empty .

    rParenthesis    reduce using rule 93 (PARAMS_A -> empty .)


state 386

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (179) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (156) empty -> .

    semicolon       reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 428
    empty                          shift and go to state 429

state 387

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER . METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (97) METHODCALL_A -> . comma EXP
    (98) METHODCALL_A -> . empty
    (156) empty -> .

    comma           shift and go to state 431
    rParenthesis    reduce using rule 156 (empty -> .)

    METHODCALL_A                   shift and go to state 430
    empty                          shift and go to state 432

state 388

    (169) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 169 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 169 (VALIDATE_PARAMETER -> empty .)


state 389

    (77) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (78) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (79) CONDITION_A -> . empty
    (156) empty -> .

    else            shift and go to state 434
    id              reduce using rule 156 (empty -> .)
    if              reduce using rule 156 (empty -> .)
    print           reduce using rule 156 (empty -> .)
    while           reduce using rule 156 (empty -> .)
    do              reduce using rule 156 (empty -> .)
    scan            reduce using rule 156 (empty -> .)
    return          reduce using rule 156 (empty -> .)
    ols             reduce using rule 156 (empty -> .)
    las             reduce using rule 156 (empty -> .)
    rid             reduce using rule 156 (empty -> .)
    kmeans          reduce using rule 156 (empty -> .)
    mbm             reduce using rule 156 (empty -> .)
    tseries         reduce using rule 156 (empty -> .)
    mean_abs_err    reduce using rule 156 (empty -> .)
    mean_sqr_err    reduce using rule 156 (empty -> .)
    median_abs_err  reduce using rule 156 (empty -> .)
    mean            reduce using rule 156 (empty -> .)
    mode            reduce using rule 156 (empty -> .)
    median          reduce using rule 156 (empty -> .)
    prob            reduce using rule 156 (empty -> .)
    freq            reduce using rule 156 (empty -> .)
    variance        reduce using rule 156 (empty -> .)
    stddev          reduce using rule 156 (empty -> .)
    skew            reduce using rule 156 (empty -> .)
    kurt            reduce using rule 156 (empty -> .)
    rCurlyBracket   reduce using rule 156 (empty -> .)

    CONDITION_A                    shift and go to state 433
    empty                          shift and go to state 435

state 390

    (80) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 436


state 391

    (81) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (186) GENERATE_QUAD_PRINT -> . empty
    (156) empty -> .

    comma           reduce using rule 156 (empty -> .)
    rParenthesis    reduce using rule 156 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 437
    empty                          shift and go to state 264

state 392

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 438

state 393

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 439


state 394

    (42) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 42 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 395

    (43) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 43 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 396

    (46) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 46 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 397

    (47) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 47 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 398

    (48) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 48 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 399

    (174) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 174 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 174 (POP_STACK_OPERATORS -> empty .)


state 400

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 440

state 401

    (121) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 441

state 402

    (122) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 442

state 403

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 443

state 404

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 444

state 405

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 445


state 406

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 446


state 407

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 447


state 408

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 448


state 409

    (129) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 129 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 410

    (130) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 130 (MEAN_A -> comma id MEAN_A .)


state 411

    (132) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 132 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 412

    (133) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 133 (MODE_A -> comma id MODE_A .)


state 413

    (135) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 135 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 414

    (136) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 136 (MEDIAN_A -> comma id MEDIAN_A .)


state 415

    (138) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 138 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 416

    (139) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 139 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 417

    (141) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 141 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 418

    (142) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 142 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 419

    (144) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 144 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 420

    (145) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 145 (VARIANCE_A -> comma id VARIANCE_A .)


state 421

    (147) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 147 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 422

    (148) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 148 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 423

    (150) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 150 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 424

    (151) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 151 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 425

    (153) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 153 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 426

    (154) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 154 (KURTOSI_A -> comma id KURTOSI_A .)


state 427

    (92) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 92 (PARAMS_A -> comma PARAMS .)


state 428

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 449


state 429

    (179) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 179 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 430

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 450


state 431

    (97) METHODCALL_A -> comma . EXP
    (40) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (41) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (44) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (45) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (48) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (49) FACTOR -> . VARCONSTAUX
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 171
    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    EXP                            shift and go to state 451
    TERM                           shift and go to state 169
    FACTOR                         shift and go to state 170
    VARCONSTAUX                    shift and go to state 172

state 432

    (98) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 98 (METHODCALL_A -> empty .)


state 433

    (77) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (181) SOLVE_OPERATION_CONDITIONAL -> . empty
    (156) empty -> .

    id              reduce using rule 156 (empty -> .)
    if              reduce using rule 156 (empty -> .)
    print           reduce using rule 156 (empty -> .)
    while           reduce using rule 156 (empty -> .)
    do              reduce using rule 156 (empty -> .)
    scan            reduce using rule 156 (empty -> .)
    return          reduce using rule 156 (empty -> .)
    ols             reduce using rule 156 (empty -> .)
    las             reduce using rule 156 (empty -> .)
    rid             reduce using rule 156 (empty -> .)
    kmeans          reduce using rule 156 (empty -> .)
    mbm             reduce using rule 156 (empty -> .)
    tseries         reduce using rule 156 (empty -> .)
    mean_abs_err    reduce using rule 156 (empty -> .)
    mean_sqr_err    reduce using rule 156 (empty -> .)
    median_abs_err  reduce using rule 156 (empty -> .)
    mean            reduce using rule 156 (empty -> .)
    mode            reduce using rule 156 (empty -> .)
    median          reduce using rule 156 (empty -> .)
    prob            reduce using rule 156 (empty -> .)
    freq            reduce using rule 156 (empty -> .)
    variance        reduce using rule 156 (empty -> .)
    stddev          reduce using rule 156 (empty -> .)
    skew            reduce using rule 156 (empty -> .)
    kurt            reduce using rule 156 (empty -> .)
    rCurlyBracket   reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 452
    empty                          shift and go to state 453

state 434

    (78) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (182) GENERATE_GOTO_CONDITIONAL -> . empty
    (156) empty -> .

    lCurlyBracket   reduce using rule 156 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 454
    empty                          shift and go to state 455

state 435

    (79) CONDITION_A -> empty .

    id              reduce using rule 79 (CONDITION_A -> empty .)
    if              reduce using rule 79 (CONDITION_A -> empty .)
    print           reduce using rule 79 (CONDITION_A -> empty .)
    while           reduce using rule 79 (CONDITION_A -> empty .)
    do              reduce using rule 79 (CONDITION_A -> empty .)
    scan            reduce using rule 79 (CONDITION_A -> empty .)
    return          reduce using rule 79 (CONDITION_A -> empty .)
    ols             reduce using rule 79 (CONDITION_A -> empty .)
    las             reduce using rule 79 (CONDITION_A -> empty .)
    rid             reduce using rule 79 (CONDITION_A -> empty .)
    kmeans          reduce using rule 79 (CONDITION_A -> empty .)
    mbm             reduce using rule 79 (CONDITION_A -> empty .)
    tseries         reduce using rule 79 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 79 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 79 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 79 (CONDITION_A -> empty .)
    mean            reduce using rule 79 (CONDITION_A -> empty .)
    mode            reduce using rule 79 (CONDITION_A -> empty .)
    median          reduce using rule 79 (CONDITION_A -> empty .)
    prob            reduce using rule 79 (CONDITION_A -> empty .)
    freq            reduce using rule 79 (CONDITION_A -> empty .)
    variance        reduce using rule 79 (CONDITION_A -> empty .)
    stddev          reduce using rule 79 (CONDITION_A -> empty .)
    skew            reduce using rule 79 (CONDITION_A -> empty .)
    kurt            reduce using rule 79 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 79 (CONDITION_A -> empty .)


state 436

    (80) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 80 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 437

    (81) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (81) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (82) WRITE_A -> . empty
    (156) empty -> .

    comma           shift and go to state 341
    rParenthesis    reduce using rule 156 (empty -> .)

    WRITE_A                        shift and go to state 456
    empty                          shift and go to state 342

state 438

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (184) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (156) empty -> .

    id              reduce using rule 156 (empty -> .)
    if              reduce using rule 156 (empty -> .)
    print           reduce using rule 156 (empty -> .)
    while           reduce using rule 156 (empty -> .)
    do              reduce using rule 156 (empty -> .)
    scan            reduce using rule 156 (empty -> .)
    return          reduce using rule 156 (empty -> .)
    ols             reduce using rule 156 (empty -> .)
    las             reduce using rule 156 (empty -> .)
    rid             reduce using rule 156 (empty -> .)
    kmeans          reduce using rule 156 (empty -> .)
    mbm             reduce using rule 156 (empty -> .)
    tseries         reduce using rule 156 (empty -> .)
    mean_abs_err    reduce using rule 156 (empty -> .)
    mean_sqr_err    reduce using rule 156 (empty -> .)
    median_abs_err  reduce using rule 156 (empty -> .)
    mean            reduce using rule 156 (empty -> .)
    mode            reduce using rule 156 (empty -> .)
    median          reduce using rule 156 (empty -> .)
    prob            reduce using rule 156 (empty -> .)
    freq            reduce using rule 156 (empty -> .)
    variance        reduce using rule 156 (empty -> .)
    stddev          reduce using rule 156 (empty -> .)
    skew            reduce using rule 156 (empty -> .)
    kurt            reduce using rule 156 (empty -> .)
    rCurlyBracket   reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 457
    empty                          shift and go to state 458

state 439

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (185) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (156) empty -> .

    id              reduce using rule 156 (empty -> .)
    if              reduce using rule 156 (empty -> .)
    print           reduce using rule 156 (empty -> .)
    while           reduce using rule 156 (empty -> .)
    do              reduce using rule 156 (empty -> .)
    scan            reduce using rule 156 (empty -> .)
    return          reduce using rule 156 (empty -> .)
    ols             reduce using rule 156 (empty -> .)
    las             reduce using rule 156 (empty -> .)
    rid             reduce using rule 156 (empty -> .)
    kmeans          reduce using rule 156 (empty -> .)
    mbm             reduce using rule 156 (empty -> .)
    tseries         reduce using rule 156 (empty -> .)
    mean_abs_err    reduce using rule 156 (empty -> .)
    mean_sqr_err    reduce using rule 156 (empty -> .)
    median_abs_err  reduce using rule 156 (empty -> .)
    mean            reduce using rule 156 (empty -> .)
    mode            reduce using rule 156 (empty -> .)
    median          reduce using rule 156 (empty -> .)
    prob            reduce using rule 156 (empty -> .)
    freq            reduce using rule 156 (empty -> .)
    variance        reduce using rule 156 (empty -> .)
    stddev          reduce using rule 156 (empty -> .)
    skew            reduce using rule 156 (empty -> .)
    kurt            reduce using rule 156 (empty -> .)
    rCurlyBracket   reduce using rule 156 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 459
    empty                          shift and go to state 460

state 440

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 461


state 441

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 462


state 442

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 463


state 443

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 464


state 444

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 465


state 445

    (125) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 125 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 446

    (126) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 126 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 447

    (127) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 127 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 448

    (128) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 128 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 449

    (69) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 69 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 450

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 466


state 451

    (97) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 97 (METHODCALL_A -> comma EXP .)


state 452

    (77) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 77 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 453

    (181) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 181 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 454

    (78) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (57) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 53

    BLOCK                          shift and go to state 467

state 455

    (182) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 182 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 456

    (81) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 81 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 457

    (94) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 94 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 458

    (184) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 184 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 459

    (95) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 95 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 460

    (185) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 185 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 461

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 468

state 462

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 469

state 463

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 470

state 464

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 471

state 465

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 472

state 466

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon . VALIDATE_METHOD_CALL
    (170) VALIDATE_METHOD_CALL -> . empty
    (156) empty -> .

    id              reduce using rule 156 (empty -> .)
    if              reduce using rule 156 (empty -> .)
    print           reduce using rule 156 (empty -> .)
    while           reduce using rule 156 (empty -> .)
    do              reduce using rule 156 (empty -> .)
    scan            reduce using rule 156 (empty -> .)
    return          reduce using rule 156 (empty -> .)
    ols             reduce using rule 156 (empty -> .)
    las             reduce using rule 156 (empty -> .)
    rid             reduce using rule 156 (empty -> .)
    kmeans          reduce using rule 156 (empty -> .)
    mbm             reduce using rule 156 (empty -> .)
    tseries         reduce using rule 156 (empty -> .)
    mean_abs_err    reduce using rule 156 (empty -> .)
    mean_sqr_err    reduce using rule 156 (empty -> .)
    median_abs_err  reduce using rule 156 (empty -> .)
    mean            reduce using rule 156 (empty -> .)
    mode            reduce using rule 156 (empty -> .)
    median          reduce using rule 156 (empty -> .)
    prob            reduce using rule 156 (empty -> .)
    freq            reduce using rule 156 (empty -> .)
    variance        reduce using rule 156 (empty -> .)
    stddev          reduce using rule 156 (empty -> .)
    skew            reduce using rule 156 (empty -> .)
    kurt            reduce using rule 156 (empty -> .)
    rCurlyBracket   reduce using rule 156 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 473
    empty                          shift and go to state 474

state 467

    (78) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 78 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 468

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 475


state 469

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 476


state 470

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 477


state 471

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 478


state 472

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 479


state 473

    (96) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 96 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 474

    (170) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 170 (VALIDATE_METHOD_CALL -> empty .)


state 475

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 480

state 476

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 481

state 477

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 482

state 478

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 483

state 479

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 484

state 480

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 485


state 481

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 486


state 482

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 487


state 483

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 488


state 484

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 489


state 485

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 490

state 486

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 491

state 487

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 492

state 488

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 493


state 489

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 494

state 490

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 495


state 491

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 496


state 492

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 497


state 493

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 498


state 494

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 499


state 495

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 500


state 496

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 501

state 497

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 502

state 498

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 503

state 499

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 504

state 500

    (120) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 120 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 501

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 505


state 502

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 506


state 503

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 507


state 504

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 508


state 505

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 509

state 506

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 510

state 507

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 511

state 508

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 512

state 509

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 513


state 510

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 514


state 511

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 515


state 512

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 516


state 513

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 517

state 514

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 518


state 515

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 519

state 516

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 520

state 517

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 521


state 518

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 522


state 519

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 523


state 520

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 524


state 521

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 525

state 522

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 526

state 523

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 527

state 524

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 528

state 525

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 529


state 526

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 530


state 527

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 531


state 528

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 532


state 529

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 533


state 530

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 534


state 531

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 535


state 532

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 536

state 533

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 537


state 534

    (122) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 122 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 535

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 538


state 536

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 539


state 537

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 540


state 538

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 541


state 539

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (50) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (51) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (52) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 57
    cte_i           shift and go to state 59
    cte_f           shift and go to state 60

    VARCONSTAUX                    shift and go to state 542

state 540

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 543


state 541

    (123) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 123 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 542

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 544


state 543

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (100) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (101) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 213
    TRUE            shift and go to state 214

    BOOLEAN                        shift and go to state 545

state 544

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 546


state 545

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 547


state 546

    (124) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 124 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 547

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 548


state 548

    (121) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 121 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 45 resolved as shift
