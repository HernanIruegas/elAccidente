Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
Rule 2     GENERATE_GOTO_MAIN -> empty
Rule 3     FILL_GOTO_MAIN -> empty
Rule 4     PROGRAM_A -> VARS PROGRAM_A
Rule 5     PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B
Rule 6     PROGRAM_B -> METHOD PROGRAM_B
Rule 7     PROGRAM_B -> empty
Rule 8     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 9     VARS_A -> id assign VARCTE_AUX_VARS SIMPLE
Rule 10    VARS_A -> id SAVE_VAR SIMPLE
Rule 11    VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
Rule 12    VARS_A -> empty
Rule 13    VARS_B -> VARS
Rule 14    VARS_B -> empty
Rule 15    SIMPLE -> comma VARS_A
Rule 16    SIMPLE -> empty
Rule 17    LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
Rule 18    LIST -> empty
Rule 19    LIST_A -> comma VARS_A
Rule 20    LIST_A -> empty
Rule 21    VARCTE_AUX_VARS -> id ISLIST
Rule 22    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 23    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 24    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 25    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 26    BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL
Rule 27    BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL
Rule 28    VALIDATE_NAME_ARRAY -> empty
Rule 29    ACUMULATE_R -> empty
Rule 30    CALCULATE_ARRAY -> empty
Rule 31    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 32    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 33    EXPLOG_A -> and EXPLOG
Rule 34    EXPLOG_A -> or EXPLOG
Rule 35    EXPLOG_A -> empty
Rule 36    EXPRESSION -> EXP
Rule 37    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 38    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 39    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 40    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 41    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 42    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 43    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 44    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 45    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 46    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 47    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 48    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 49    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 50    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 51    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 52    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 53    FACTOR -> VARCONSTAUX
Rule 54    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 55    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 56    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 57    VARCONSTAUX -> BOOLEAN
Rule 58    TYPE -> int SAVE_TYPE
Rule 59    TYPE -> float SAVE_TYPE
Rule 60    TYPE -> string SAVE_TYPE
Rule 61    TYPE -> bool SAVE_TYPE
Rule 62    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 63    BLOCK_A -> STATEMENT BLOCK_A
Rule 64    BLOCK_A -> empty
Rule 65    STATEMENT -> ASSIGNMENT
Rule 66    STATEMENT -> CONDITION
Rule 67    STATEMENT -> WRITE
Rule 68    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 69    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 70    STATEMENT -> METHODCALL
Rule 71    STATEMENT -> READ
Rule 72    STATEMENT -> STATMETHODS
Rule 73    STATEMENT -> RETURN
Rule 74    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
Rule 75    ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 76    ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT
Rule 77    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 78    READ_A -> comma
Rule 79    READ_A -> empty
Rule 80    ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
Rule 81    ISLIST -> empty SOLVE_OFFSETS
Rule 82    VALIDATE_INDEX -> empty
Rule 83    SOLVE_OFFSETS -> empty
Rule 84    TYPEMETHOD -> TYPE
Rule 85    TYPEMETHOD -> void SAVE_TYPE
Rule 86    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 87    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 88    CONDITION_A -> empty
Rule 89    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 90    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 91    WRITE_A -> empty
Rule 92    VARCTE -> id ISLIST
Rule 93    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 94    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 95    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 96    VARCTE -> BOOLEAN
Rule 97    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 98    METHOD_A -> PARAMS
Rule 99    METHOD_A -> empty
Rule 100   PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 101   PARAMS_A -> comma PARAMS
Rule 102   PARAMS_A -> empty
Rule 103   PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 104   POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 105   METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 106   METHODCALL_A -> EXP VALIDATE_PARAMETER
Rule 107   METHODCALL_A -> empty
Rule 108   METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B
Rule 109   METHODCALL_B -> empty
Rule 110   RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon
Rule 111   GENERATE_QUAD_RETURN -> empty
Rule 112   BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT
Rule 113   BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT
Rule 114   STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 115   STATMETHODS -> LASSO
Rule 116   STATMETHODS -> RIDGE
Rule 117   STATMETHODS -> K_MEANS
Rule 118   STATMETHODS -> MINI_BATCH_MEANS
Rule 119   STATMETHODS -> TIME_SERIES_SPLIT
Rule 120   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 121   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 122   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 123   STATMETHODS -> MEAN
Rule 124   STATMETHODS -> MODE
Rule 125   STATMETHODS -> MEDIAN
Rule 126   STATMETHODS -> PROBABILITY
Rule 127   STATMETHODS -> FREQUENCY
Rule 128   STATMETHODS -> VARIANCE
Rule 129   STATMETHODS -> STANDARD_DEVIATION
Rule 130   STATMETHODS -> SKEWNESS
Rule 131   STATMETHODS -> KURTOSI
Rule 132   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 133   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 134   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 135   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 136   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 137   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 138   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 139   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 140   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 141   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 142   MEAN_A -> comma id MEAN_A
Rule 143   MEAN_A -> empty
Rule 144   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 145   MODE_A -> comma id MODE_A
Rule 146   MODE_A -> empty
Rule 147   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 148   MEDIAN_A -> comma id MEDIAN_A
Rule 149   MEDIAN_A -> empty
Rule 150   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 151   PROBABILITY_A -> comma id PROBABILITY_A
Rule 152   PROBABILITY_A -> empty
Rule 153   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 154   FREQUENCY_A -> comma id FREQUENCY_A
Rule 155   FREQUENCY_A -> empty
Rule 156   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 157   VARIANCE_A -> comma id VARIANCE_A
Rule 158   VARIANCE_A -> empty
Rule 159   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 160   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 161   STANDARD_DEVIATION_A -> empty
Rule 162   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 163   SKEWNESS_A -> comma id SKEWNESS_A
Rule 164   SKEWNESS_A -> empty
Rule 165   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 166   KURTOSI_A -> comma id KURTOSI_A
Rule 167   KURTOSI_A -> empty
Rule 168   empty -> <empty>
Rule 169   START_FUNCTION -> empty
Rule 170   SAVE_TYPE -> empty
Rule 171   SAVE_VAR -> empty
Rule 172   SAVE_ASSIGNED_VAR -> empty
Rule 173   SAVE_ASSIGNED_VAR_BOOL -> empty
Rule 174   SAVE_PARAM -> empty
Rule 175   INCREMENT_PARAM_COUNTER -> empty
Rule 176   SAVE_COUNTER_PARAM -> empty
Rule 177   SAVE_COUNTER_QUAD -> empty
Rule 178   END_PROCEDURE -> empty
Rule 179   SAVE_PARAM_TYPE -> empty
Rule 180   VALIDATE_FUNCTION_NAME -> empty
Rule 181   ERA -> empty
Rule 182   VALIDATE_PARAMETER -> empty
Rule 183   VALIDATE_METHOD_CALL -> empty
Rule 184   PUSH_STACK_OPERANDS -> empty
Rule 185   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 186   PUSH_STACK_OPERATORS -> empty
Rule 187   POP_STACK_OPERATORS -> empty
Rule 188   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 189   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 190   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 191   SOLVE_OPERATION_LOGIC -> empty
Rule 192   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 193   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 194   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 195   GENERATE_GOTO_CONDITIONAL -> empty
Rule 196   PUSH_STACK_JUMPS -> empty
Rule 197   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 198   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 199   GENERATE_QUAD_PRINT -> empty
Rule 200   PRINTQUADS -> empty

Terminals, with rules where they appear

False                : 26 112
True                 : 27 113
and                  : 33
assign               : 9 74
bool                 : 61
colon                : 8
comma                : 15 19 78 90 101 108 132 132 132 132 132 133 133 133 133 133 133 133 133 133 133 133 133 134 134 134 134 134 134 134 134 134 135 135 135 135 135 135 135 135 135 135 136 136 136 136 136 136 136 136 136 136 136 137 138 139 140 142 145 148 151 154 157 160 163 166
cte_f                : 23 56 94
cte_i                : 11 17 22 55 93
cte_str              : 24 95
divide               : 51
do                   : 104
else                 : 87
equals               : 42
error                : 
float                : 59 133
freq                 : 153
func                 : 97
globalFunc           : 1
greater              : 38
greaterEquals        : 40
id                   : 9 10 11 21 54 74 92 97 100 105 132 132 133 133 134 134 138 138 139 139 140 140 141 142 144 145 147 148 150 151 153 154 156 157 159 160 162 163 165 166
if                   : 86
int                  : 58
kmeans               : 135
kurt                 : 165
lCurlyBracket        : 62
lParenthesis         : 52 77 86 89 97 103 104 105 132 133 134 135 136 137 138 139 140 141 144 147 150 153 156 159 162 165
lSqrBracket          : 11 17 80
las                  : 133
lessThan             : 39
lessThanEquals       : 41
mbm                  : 136
mean                 : 141
mean_abs_err         : 138
mean_sqr_err         : 139
median               : 147
median_abs_err       : 140
minus                : 47
mode                 : 144
not                  : 32
notEquals            : 43
ols                  : 132
or                   : 34
plus                 : 46
print                : 89
prob                 : 150
program              : 1
rCurlyBracket        : 62
rParenthesis         : 52 77 86 89 97 103 104 105 132 133 134 135 136 137 138 139 140 141 144 147 150 153 156 159 162 165
rSqrBracket          : 11 17 80
return               : 110
rid                  : 134
scan                 : 77
semicolon            : 1 8 75 89 105 110 132 133 134 135 136 137 138 139 140 141 144 147 150 153 156 159 162 165
skew                 : 162
start                : 1
stddev               : 159
string               : 60 133 134 135 135 135 136
times                : 50
tseries              : 137
var                  : 8
variance             : 156
void                 : 1 1 85
while                : 103 104

Nonterminals, with rules where they appear

ACUMULATE_R          : 11 17
ASSIGNMENT           : 65
ASSIGNMENT_A         : 74
BLOCK                : 1 86 87 97 103 104
BLOCK_A              : 62 63
BOOLEAN              : 57 96 132 132 132 133 133 133 133 133 133 134 134 134 135 136 136
BOOLEAN_AUX_VARS     : 25
CALCULATE_ARRAY      : 11
CONDITION            : 66
CONDITION_A          : 86
END_PROCEDURE        : 1 97
ERA                  : 105
EXP                  : 36 37 37 46 47 80 106 108
EXPLOG               : 33 34 52 75 86 103 104 110
EXPLOG_A             : 31 32
EXPRESSION           : 31 32 89 90
EXPRESSION_A         : 37
EXP_A                : 45
FACTOR               : 48 49
FILL_GOTO_MAIN       : 1
FREQUENCY            : 127
FREQUENCY_A          : 153 154
GENERATE_GOTOF_CONDITIONAL : 86 103
GENERATE_GOTO_CONDITIONAL : 87
GENERATE_GOTO_MAIN   : 5
GENERATE_QUAD_PRINT  : 89 90
GENERATE_QUAD_RETURN : 110
INCREMENT_PARAM_COUNTER : 100
ISLIST               : 21 54 74 80 92
KURTOSI              : 131
KURTOSI_A            : 165 166
K_MEANS              : 117
LASSO                : 115
LIST                 : 11 17
LIST_A               : 11
MEAN                 : 123
MEAN_A               : 141 142
MEAN_ABSOLUTE_ERROR  : 120
MEAN_SQUARED_ERROR   : 121
MEDIAN               : 125
MEDIAN_A             : 147 148
MEDIAN_ABSOLUTE_ERROR : 122
METHOD               : 6
METHODCALL           : 70 76
METHODCALL_A         : 105
METHODCALL_B         : 105 108
METHOD_A             : 97
MINI_BATCH_MEANS     : 118
MODE                 : 124
MODE_A               : 144 145
ORDINARY_LEAST_SQUARES : 114
PARAMS               : 98 101
PARAMS_A             : 100
POP_STACK_OPERATORS  : 52
POST_CONDITIONAL_LOOP : 69
PRE_CONDITIONAL_LOOP : 68
PRINTQUADS           : 1
PROBABILITY          : 126
PROBABILITY_A        : 150 151
PROGRAM              : 0
PROGRAM_A            : 1 4
PROGRAM_B            : 5 6
PUSH_STACK_JUMPS     : 103 104
PUSH_STACK_OPERANDS  : 54 74
PUSH_STACK_OPERANDS_CONSTANT : 22 23 24 55 56 93 94 95 112 113
PUSH_STACK_OPERATORS : 38 39 40 41 42 43 46 47 50 51 52 74
READ                 : 71
READ_A               : 77
RETURN               : 73
RIDGE                : 116
SAVE_ASSIGNED_VAR    : 22 23 24
SAVE_ASSIGNED_VAR_BOOL : 26 27
SAVE_COUNTER_PARAM   : 97
SAVE_COUNTER_QUAD    : 97
SAVE_PARAM           : 100
SAVE_PARAM_TYPE      : 100
SAVE_TYPE            : 1 1 58 59 60 61 85
SAVE_VAR             : 10
SIMPLE               : 9 10
SKEWNESS             : 130
SKEWNESS_A           : 162 163
SOLVE_OFFSETS        : 81
SOLVE_OPERATION_ASSIGNMENT : 75 76
SOLVE_OPERATION_CONDITIONAL : 86
SOLVE_OPERATION_LOGIC : 31 32
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 104
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 103
SOLVE_OPERATION_RELATIONSHIP : 37
SOLVE_OPERATION_SUM_MINUS : 44 45
SOLVE_OPERATION_TIMES_DIVIDE : 48 49
STANDARD_DEVIATION   : 129
STANDARD_DEVIATION_A : 159 160
START_FUNCTION       : 1 1 97
STATEMENT            : 63
STATMETHODS          : 72
TERM                 : 44 45 50 51
TERM_A               : 49
TIME_SERIES_SPLIT    : 119
TYPE                 : 8 84 100
TYPEMETHOD           : 97
VALIDATE_FUNCTION_NAME : 105
VALIDATE_INDEX       : 80
VALIDATE_METHOD_CALL : 105
VALIDATE_NAME_ARRAY  : 11
VALIDATE_PARAMETER   : 106 108
VARCONSTAUX          : 53 132 133 133 133 134 134 134 134 135 135 135 135 135 135 135 136 136 136 136 136 136 136 136 136 137 137
VARCTE               : 77
VARCTE_AUX_VARS      : 9
VARIANCE             : 128
VARIANCE_A           : 156 157
VARS                 : 4 13
VARS_A               : 8 15 19
VARS_B               : 8
WRITE                : 67
WRITE_A              : 89 90
empty                : 2 3 7 12 14 16 18 20 28 29 30 35 64 79 81 82 83 88 91 99 102 107 109 111 143 146 149 152 155 158 161 164 167 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    globalFunc      reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (170) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 170 (SAVE_TYPE -> empty .)
    start           reduce using rule 170 (SAVE_TYPE -> empty .)
    colon           reduce using rule 170 (SAVE_TYPE -> empty .)
    id              reduce using rule 170 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (169) START_FUNCTION -> . empty
    (168) empty -> .

    semicolon       reduce using rule 168 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (169) START_FUNCTION -> empty .

    semicolon       reduce using rule 169 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 169 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 169 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . GENERATE_GOTO_MAIN PROGRAM_B
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (2) GENERATE_GOTO_MAIN -> . empty
    (168) empty -> .

    var             shift and go to state 13
    func            reduce using rule 168 (empty -> .)
    void            reduce using rule 168 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    GENERATE_GOTO_MAIN             shift and go to state 12
    empty                          shift and go to state 14

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 15


state 11

    (4) PROGRAM_A -> VARS . PROGRAM_A
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . GENERATE_GOTO_MAIN PROGRAM_B
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (2) GENERATE_GOTO_MAIN -> . empty
    (168) empty -> .

    var             shift and go to state 13
    func            reduce using rule 168 (empty -> .)
    void            reduce using rule 168 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 16
    GENERATE_GOTO_MAIN             shift and go to state 12
    empty                          shift and go to state 14

state 12

    (5) PROGRAM_A -> GENERATE_GOTO_MAIN . PROGRAM_B
    (6) PROGRAM_B -> . METHOD PROGRAM_B
    (7) PROGRAM_B -> . empty
    (97) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (168) empty -> .

    func            shift and go to state 20
    void            reduce using rule 168 (empty -> .)

    PROGRAM_B                      shift and go to state 17
    METHOD                         shift and go to state 18
    empty                          shift and go to state 19

state 13

    (8) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPE                           shift and go to state 21

state 14

    (2) GENERATE_GOTO_MAIN -> empty .

    func            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)
    void            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)


state 15

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void . SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    start           reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 26
    empty                          shift and go to state 5

state 16

    (4) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 4 (PROGRAM_A -> VARS PROGRAM_A .)


state 17

    (5) PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B .)


state 18

    (6) PROGRAM_B -> METHOD . PROGRAM_B
    (6) PROGRAM_B -> . METHOD PROGRAM_B
    (7) PROGRAM_B -> . empty
    (97) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (168) empty -> .

    func            shift and go to state 20
    void            reduce using rule 168 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 27
    empty                          shift and go to state 19

state 19

    (7) PROGRAM_B -> empty .

    void            reduce using rule 7 (PROGRAM_B -> empty .)


state 20

    (97) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (84) TYPEMETHOD -> . TYPE
    (85) TYPEMETHOD -> . void SAVE_TYPE
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 30
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPEMETHOD                     shift and go to state 28
    TYPE                           shift and go to state 29

state 21

    (8) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 31


state 22

    (58) TYPE -> int . SAVE_TYPE
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    colon           reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 5

state 23

    (59) TYPE -> float . SAVE_TYPE
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    colon           reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (60) TYPE -> string . SAVE_TYPE
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    colon           reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (61) TYPE -> bool . SAVE_TYPE
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    colon           reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE . start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    start           shift and go to state 36


state 27

    (6) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 6 (PROGRAM_B -> METHOD PROGRAM_B .)


state 28

    (97) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 37


state 29

    (84) TYPEMETHOD -> TYPE .

    id              reduce using rule 84 (TYPEMETHOD -> TYPE .)


state 30

    (85) TYPEMETHOD -> void . SAVE_TYPE
    (170) SAVE_TYPE -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)

    SAVE_TYPE                      shift and go to state 38
    empty                          shift and go to state 5

state 31

    (8) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (168) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 168 (empty -> .)

    VARS_A                         shift and go to state 39
    empty                          shift and go to state 41

state 32

    (58) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 58 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 58 (TYPE -> int SAVE_TYPE .)


state 33

    (59) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 59 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 59 (TYPE -> float SAVE_TYPE .)


state 34

    (60) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 60 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 60 (TYPE -> string SAVE_TYPE .)


state 35

    (61) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 61 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 61 (TYPE -> bool SAVE_TYPE .)


state 36

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start . START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (169) START_FUNCTION -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    START_FUNCTION                 shift and go to state 42
    empty                          shift and go to state 8

state 37

    (97) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) START_FUNCTION -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)

    START_FUNCTION                 shift and go to state 43
    empty                          shift and go to state 8

state 38

    (85) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 85 (TYPEMETHOD -> void SAVE_TYPE .)


state 39

    (8) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 44


state 40

    (9) VARS_A -> id . assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> id . SAVE_VAR SIMPLE
    (11) VARS_A -> id . VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (171) SAVE_VAR -> . empty
    (28) VALIDATE_NAME_ARRAY -> . empty
    (168) empty -> .

    assign          shift and go to state 45
    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    lSqrBracket     reduce using rule 168 (empty -> .)

    SAVE_VAR                       shift and go to state 46
    VALIDATE_NAME_ARRAY            shift and go to state 47
    empty                          shift and go to state 48

state 41

    (12) VARS_A -> empty .

    semicolon       reduce using rule 12 (VARS_A -> empty .)


state 42

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION . FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (3) FILL_GOTO_MAIN -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    FILL_GOTO_MAIN                 shift and go to state 49
    empty                          shift and go to state 50

state 43

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 51


state 44

    (8) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (13) VARS_B -> . VARS
    (14) VARS_B -> . empty
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (168) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    func            reduce using rule 168 (empty -> .)
    void            reduce using rule 168 (empty -> .)

  ! var             [ reduce using rule 168 (empty -> .) ]

    VARS_B                         shift and go to state 52
    VARS                           shift and go to state 53
    empty                          shift and go to state 54

state 45

    (9) VARS_A -> id assign . VARCTE_AUX_VARS SIMPLE
    (21) VARCTE_AUX_VARS -> . id ISLIST
    (22) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (23) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (24) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (25) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (26) BOOLEAN_AUX_VARS -> . False SAVE_ASSIGNED_VAR_BOOL
    (27) BOOLEAN_AUX_VARS -> . True SAVE_ASSIGNED_VAR_BOOL

    id              shift and go to state 55
    cte_i           shift and go to state 57
    cte_f           shift and go to state 58
    cte_str         shift and go to state 59
    False           shift and go to state 61
    True            shift and go to state 62

    VARCTE_AUX_VARS                shift and go to state 56
    BOOLEAN_AUX_VARS               shift and go to state 60

state 46

    (10) VARS_A -> id SAVE_VAR . SIMPLE
    (15) SIMPLE -> . comma VARS_A
    (16) SIMPLE -> . empty
    (168) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 168 (empty -> .)

    SIMPLE                         shift and go to state 63
    empty                          shift and go to state 65

state 47

    (11) VARS_A -> id VALIDATE_NAME_ARRAY . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    lSqrBracket     shift and go to state 66


state 48

    (171) SAVE_VAR -> empty .
    (28) VALIDATE_NAME_ARRAY -> empty .

    comma           reduce using rule 171 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 171 (SAVE_VAR -> empty .)
    lSqrBracket     reduce using rule 28 (VALIDATE_NAME_ARRAY -> empty .)


state 49

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN . BLOCK END_PROCEDURE PRINTQUADS
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 67

state 50

    (3) FILL_GOTO_MAIN -> empty .

    lCurlyBracket   reduce using rule 3 (FILL_GOTO_MAIN -> empty .)


state 51

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (98) METHOD_A -> . PARAMS
    (99) METHOD_A -> . empty
    (100) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (168) empty -> .
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 168 (empty -> .)
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    METHOD_A                       shift and go to state 69
    PARAMS                         shift and go to state 70
    empty                          shift and go to state 71
    TYPE                           shift and go to state 72

state 52

    (8) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 53

    (13) VARS_B -> VARS .

    var             reduce using rule 13 (VARS_B -> VARS .)
    func            reduce using rule 13 (VARS_B -> VARS .)
    void            reduce using rule 13 (VARS_B -> VARS .)


state 54

    (14) VARS_B -> empty .

    var             reduce using rule 14 (VARS_B -> empty .)
    func            reduce using rule 14 (VARS_B -> empty .)
    void            reduce using rule 14 (VARS_B -> empty .)


state 55

    (21) VARCTE_AUX_VARS -> id . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (168) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    ISLIST                         shift and go to state 73
    empty                          shift and go to state 75

state 56

    (9) VARS_A -> id assign VARCTE_AUX_VARS . SIMPLE
    (15) SIMPLE -> . comma VARS_A
    (16) SIMPLE -> . empty
    (168) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 168 (empty -> .)

    SIMPLE                         shift and go to state 76
    empty                          shift and go to state 65

state 57

    (22) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 77
    empty                          shift and go to state 78

state 58

    (23) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 79
    empty                          shift and go to state 78

state 59

    (24) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 80
    empty                          shift and go to state 78

state 60

    (25) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 25 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 25 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 61

    (26) BOOLEAN_AUX_VARS -> False . SAVE_ASSIGNED_VAR_BOOL
    (173) SAVE_ASSIGNED_VAR_BOOL -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    SAVE_ASSIGNED_VAR_BOOL         shift and go to state 81
    empty                          shift and go to state 82

state 62

    (27) BOOLEAN_AUX_VARS -> True . SAVE_ASSIGNED_VAR_BOOL
    (173) SAVE_ASSIGNED_VAR_BOOL -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    SAVE_ASSIGNED_VAR_BOOL         shift and go to state 83
    empty                          shift and go to state 82

state 63

    (10) VARS_A -> id SAVE_VAR SIMPLE .

    semicolon       reduce using rule 10 (VARS_A -> id SAVE_VAR SIMPLE .)


state 64

    (15) SIMPLE -> comma . VARS_A
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (168) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 168 (empty -> .)

    VARS_A                         shift and go to state 84
    empty                          shift and go to state 41

state 65

    (16) SIMPLE -> empty .

    semicolon       reduce using rule 16 (SIMPLE -> empty .)


state 66

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    cte_i           shift and go to state 85


state 67

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK . END_PROCEDURE PRINTQUADS
    (178) END_PROCEDURE -> . empty
    (168) empty -> .

    $end            reduce using rule 168 (empty -> .)

    END_PROCEDURE                  shift and go to state 86
    empty                          shift and go to state 87

state 68

    (62) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (168) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (86) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (89) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (103) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (104) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (114) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (115) STATMETHODS -> . LASSO
    (116) STATMETHODS -> . RIDGE
    (117) STATMETHODS -> . K_MEANS
    (118) STATMETHODS -> . MINI_BATCH_MEANS
    (119) STATMETHODS -> . TIME_SERIES_SPLIT
    (120) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (121) STATMETHODS -> . MEAN_SQUARED_ERROR
    (122) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (123) STATMETHODS -> . MEAN
    (124) STATMETHODS -> . MODE
    (125) STATMETHODS -> . MEDIAN
    (126) STATMETHODS -> . PROBABILITY
    (127) STATMETHODS -> . FREQUENCY
    (128) STATMETHODS -> . VARIANCE
    (129) STATMETHODS -> . STANDARD_DEVIATION
    (130) STATMETHODS -> . SKEWNESS
    (131) STATMETHODS -> . KURTOSI
    (110) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (132) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (133) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (134) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (135) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (136) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (137) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (138) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (139) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (140) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (141) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (144) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (147) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (150) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (153) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (156) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (159) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (162) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (165) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 168 (empty -> .)
    id              shift and go to state 100
    if              shift and go to state 101
    print           shift and go to state 102
    while           shift and go to state 103
    do              shift and go to state 104
    scan            shift and go to state 105
    return          shift and go to state 124
    ols             shift and go to state 125
    las             shift and go to state 126
    rid             shift and go to state 127
    kmeans          shift and go to state 128
    mbm             shift and go to state 129
    tseries         shift and go to state 130
    mean_abs_err    shift and go to state 131
    mean_sqr_err    shift and go to state 132
    median_abs_err  shift and go to state 133
    mean            shift and go to state 134
    mode            shift and go to state 135
    median          shift and go to state 136
    prob            shift and go to state 137
    freq            shift and go to state 138
    variance        shift and go to state 139
    stddev          shift and go to state 140
    skew            shift and go to state 141
    kurt            shift and go to state 142

    BLOCK_A                        shift and go to state 88
    STATEMENT                      shift and go to state 89
    empty                          shift and go to state 90
    ASSIGNMENT                     shift and go to state 91
    CONDITION                      shift and go to state 92
    WRITE                          shift and go to state 93
    PRE_CONDITIONAL_LOOP           shift and go to state 94
    POST_CONDITIONAL_LOOP          shift and go to state 95
    METHODCALL                     shift and go to state 96
    READ                           shift and go to state 97
    STATMETHODS                    shift and go to state 98
    RETURN                         shift and go to state 99
    ORDINARY_LEAST_SQUARES         shift and go to state 106
    LASSO                          shift and go to state 107
    RIDGE                          shift and go to state 108
    K_MEANS                        shift and go to state 109
    MINI_BATCH_MEANS               shift and go to state 110
    TIME_SERIES_SPLIT              shift and go to state 111
    MEAN_ABSOLUTE_ERROR            shift and go to state 112
    MEAN_SQUARED_ERROR             shift and go to state 113
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 114
    MEAN                           shift and go to state 115
    MODE                           shift and go to state 116
    MEDIAN                         shift and go to state 117
    PROBABILITY                    shift and go to state 118
    FREQUENCY                      shift and go to state 119
    VARIANCE                       shift and go to state 120
    STANDARD_DEVIATION             shift and go to state 121
    SKEWNESS                       shift and go to state 122
    KURTOSI                        shift and go to state 123

state 69

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (176) SAVE_COUNTER_PARAM -> . empty
    (168) empty -> .

    rParenthesis    reduce using rule 168 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 143
    empty                          shift and go to state 144

state 70

    (98) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 98 (METHOD_A -> PARAMS .)


state 71

    (99) METHOD_A -> empty .

    rParenthesis    reduce using rule 99 (METHOD_A -> empty .)


state 72

    (100) PARAMS -> TYPE . id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 145


state 73

    (21) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 21 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 21 (VARCTE_AUX_VARS -> id ISLIST .)


state 74

    (80) ISLIST -> lSqrBracket . EXP VALIDATE_INDEX rSqrBracket ISLIST
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXP                            shift and go to state 146
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 75

    (81) ISLIST -> empty . SOLVE_OFFSETS
    (83) SOLVE_OFFSETS -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    assign          reduce using rule 168 (empty -> .)
    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    empty                          shift and go to state 157
    SOLVE_OFFSETS                  shift and go to state 158

state 76

    (9) VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .

    semicolon       reduce using rule 9 (VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .)


state 77

    (22) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (172) SAVE_ASSIGNED_VAR -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 159
    empty                          shift and go to state 160

state 78

    (185) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    comma           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rSqrBracket     reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 185 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 79

    (23) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (172) SAVE_ASSIGNED_VAR -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 161
    empty                          shift and go to state 160

state 80

    (24) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (172) SAVE_ASSIGNED_VAR -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 162
    empty                          shift and go to state 160

state 81

    (26) BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .

    comma           reduce using rule 26 (BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .)
    semicolon       reduce using rule 26 (BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .)


state 82

    (173) SAVE_ASSIGNED_VAR_BOOL -> empty .

    comma           reduce using rule 173 (SAVE_ASSIGNED_VAR_BOOL -> empty .)
    semicolon       reduce using rule 173 (SAVE_ASSIGNED_VAR_BOOL -> empty .)


state 83

    (27) BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .

    comma           reduce using rule 27 (BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .)
    semicolon       reduce using rule 27 (BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .)


state 84

    (15) SIMPLE -> comma VARS_A .

    semicolon       reduce using rule 15 (SIMPLE -> comma VARS_A .)


state 85

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (29) ACUMULATE_R -> . empty
    (168) empty -> .

    rSqrBracket     reduce using rule 168 (empty -> .)

    ACUMULATE_R                    shift and go to state 163
    empty                          shift and go to state 164

state 86

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE . PRINTQUADS
    (200) PRINTQUADS -> . empty
    (168) empty -> .

    $end            reduce using rule 168 (empty -> .)

    PRINTQUADS                     shift and go to state 165
    empty                          shift and go to state 166

state 87

    (178) END_PROCEDURE -> empty .

    $end            reduce using rule 178 (END_PROCEDURE -> empty .)
    func            reduce using rule 178 (END_PROCEDURE -> empty .)
    void            reduce using rule 178 (END_PROCEDURE -> empty .)


state 88

    (62) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 167


state 89

    (63) BLOCK_A -> STATEMENT . BLOCK_A
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (168) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (86) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (89) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (103) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (104) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (114) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (115) STATMETHODS -> . LASSO
    (116) STATMETHODS -> . RIDGE
    (117) STATMETHODS -> . K_MEANS
    (118) STATMETHODS -> . MINI_BATCH_MEANS
    (119) STATMETHODS -> . TIME_SERIES_SPLIT
    (120) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (121) STATMETHODS -> . MEAN_SQUARED_ERROR
    (122) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (123) STATMETHODS -> . MEAN
    (124) STATMETHODS -> . MODE
    (125) STATMETHODS -> . MEDIAN
    (126) STATMETHODS -> . PROBABILITY
    (127) STATMETHODS -> . FREQUENCY
    (128) STATMETHODS -> . VARIANCE
    (129) STATMETHODS -> . STANDARD_DEVIATION
    (130) STATMETHODS -> . SKEWNESS
    (131) STATMETHODS -> . KURTOSI
    (110) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (132) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (133) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (134) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (135) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (136) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (137) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (138) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (139) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (140) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (141) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (144) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (147) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (150) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (153) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (156) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (159) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (162) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (165) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 168 (empty -> .)
    id              shift and go to state 100
    if              shift and go to state 101
    print           shift and go to state 102
    while           shift and go to state 103
    do              shift and go to state 104
    scan            shift and go to state 105
    return          shift and go to state 124
    ols             shift and go to state 125
    las             shift and go to state 126
    rid             shift and go to state 127
    kmeans          shift and go to state 128
    mbm             shift and go to state 129
    tseries         shift and go to state 130
    mean_abs_err    shift and go to state 131
    mean_sqr_err    shift and go to state 132
    median_abs_err  shift and go to state 133
    mean            shift and go to state 134
    mode            shift and go to state 135
    median          shift and go to state 136
    prob            shift and go to state 137
    freq            shift and go to state 138
    variance        shift and go to state 139
    stddev          shift and go to state 140
    skew            shift and go to state 141
    kurt            shift and go to state 142

    STATEMENT                      shift and go to state 89
    BLOCK_A                        shift and go to state 168
    empty                          shift and go to state 90
    ASSIGNMENT                     shift and go to state 91
    CONDITION                      shift and go to state 92
    WRITE                          shift and go to state 93
    PRE_CONDITIONAL_LOOP           shift and go to state 94
    POST_CONDITIONAL_LOOP          shift and go to state 95
    METHODCALL                     shift and go to state 96
    READ                           shift and go to state 97
    STATMETHODS                    shift and go to state 98
    RETURN                         shift and go to state 99
    ORDINARY_LEAST_SQUARES         shift and go to state 106
    LASSO                          shift and go to state 107
    RIDGE                          shift and go to state 108
    K_MEANS                        shift and go to state 109
    MINI_BATCH_MEANS               shift and go to state 110
    TIME_SERIES_SPLIT              shift and go to state 111
    MEAN_ABSOLUTE_ERROR            shift and go to state 112
    MEAN_SQUARED_ERROR             shift and go to state 113
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 114
    MEAN                           shift and go to state 115
    MODE                           shift and go to state 116
    MEDIAN                         shift and go to state 117
    PROBABILITY                    shift and go to state 118
    FREQUENCY                      shift and go to state 119
    VARIANCE                       shift and go to state 120
    STANDARD_DEVIATION             shift and go to state 121
    SKEWNESS                       shift and go to state 122
    KURTOSI                        shift and go to state 123

state 90

    (64) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 64 (BLOCK_A -> empty .)


state 91

    (65) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> ASSIGNMENT .)


state 92

    (66) STATEMENT -> CONDITION .

    id              reduce using rule 66 (STATEMENT -> CONDITION .)
    if              reduce using rule 66 (STATEMENT -> CONDITION .)
    print           reduce using rule 66 (STATEMENT -> CONDITION .)
    while           reduce using rule 66 (STATEMENT -> CONDITION .)
    do              reduce using rule 66 (STATEMENT -> CONDITION .)
    scan            reduce using rule 66 (STATEMENT -> CONDITION .)
    return          reduce using rule 66 (STATEMENT -> CONDITION .)
    ols             reduce using rule 66 (STATEMENT -> CONDITION .)
    las             reduce using rule 66 (STATEMENT -> CONDITION .)
    rid             reduce using rule 66 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 66 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 66 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 66 (STATEMENT -> CONDITION .)
    mean            reduce using rule 66 (STATEMENT -> CONDITION .)
    mode            reduce using rule 66 (STATEMENT -> CONDITION .)
    median          reduce using rule 66 (STATEMENT -> CONDITION .)
    prob            reduce using rule 66 (STATEMENT -> CONDITION .)
    freq            reduce using rule 66 (STATEMENT -> CONDITION .)
    variance        reduce using rule 66 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 66 (STATEMENT -> CONDITION .)
    skew            reduce using rule 66 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 66 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> CONDITION .)


state 93

    (67) STATEMENT -> WRITE .

    id              reduce using rule 67 (STATEMENT -> WRITE .)
    if              reduce using rule 67 (STATEMENT -> WRITE .)
    print           reduce using rule 67 (STATEMENT -> WRITE .)
    while           reduce using rule 67 (STATEMENT -> WRITE .)
    do              reduce using rule 67 (STATEMENT -> WRITE .)
    scan            reduce using rule 67 (STATEMENT -> WRITE .)
    return          reduce using rule 67 (STATEMENT -> WRITE .)
    ols             reduce using rule 67 (STATEMENT -> WRITE .)
    las             reduce using rule 67 (STATEMENT -> WRITE .)
    rid             reduce using rule 67 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 67 (STATEMENT -> WRITE .)
    mbm             reduce using rule 67 (STATEMENT -> WRITE .)
    tseries         reduce using rule 67 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 67 (STATEMENT -> WRITE .)
    mean            reduce using rule 67 (STATEMENT -> WRITE .)
    mode            reduce using rule 67 (STATEMENT -> WRITE .)
    median          reduce using rule 67 (STATEMENT -> WRITE .)
    prob            reduce using rule 67 (STATEMENT -> WRITE .)
    freq            reduce using rule 67 (STATEMENT -> WRITE .)
    variance        reduce using rule 67 (STATEMENT -> WRITE .)
    stddev          reduce using rule 67 (STATEMENT -> WRITE .)
    skew            reduce using rule 67 (STATEMENT -> WRITE .)
    kurt            reduce using rule 67 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> WRITE .)


state 94

    (68) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 95

    (69) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 96

    (70) STATEMENT -> METHODCALL .

    id              reduce using rule 70 (STATEMENT -> METHODCALL .)
    if              reduce using rule 70 (STATEMENT -> METHODCALL .)
    print           reduce using rule 70 (STATEMENT -> METHODCALL .)
    while           reduce using rule 70 (STATEMENT -> METHODCALL .)
    do              reduce using rule 70 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 70 (STATEMENT -> METHODCALL .)
    return          reduce using rule 70 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 70 (STATEMENT -> METHODCALL .)
    las             reduce using rule 70 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 70 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 70 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 70 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 70 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 70 (STATEMENT -> METHODCALL .)
    median          reduce using rule 70 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 70 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 70 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 70 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 70 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 70 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 70 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 70 (STATEMENT -> METHODCALL .)


state 97

    (71) STATEMENT -> READ .

    id              reduce using rule 71 (STATEMENT -> READ .)
    if              reduce using rule 71 (STATEMENT -> READ .)
    print           reduce using rule 71 (STATEMENT -> READ .)
    while           reduce using rule 71 (STATEMENT -> READ .)
    do              reduce using rule 71 (STATEMENT -> READ .)
    scan            reduce using rule 71 (STATEMENT -> READ .)
    return          reduce using rule 71 (STATEMENT -> READ .)
    ols             reduce using rule 71 (STATEMENT -> READ .)
    las             reduce using rule 71 (STATEMENT -> READ .)
    rid             reduce using rule 71 (STATEMENT -> READ .)
    kmeans          reduce using rule 71 (STATEMENT -> READ .)
    mbm             reduce using rule 71 (STATEMENT -> READ .)
    tseries         reduce using rule 71 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 71 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 71 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 71 (STATEMENT -> READ .)
    mean            reduce using rule 71 (STATEMENT -> READ .)
    mode            reduce using rule 71 (STATEMENT -> READ .)
    median          reduce using rule 71 (STATEMENT -> READ .)
    prob            reduce using rule 71 (STATEMENT -> READ .)
    freq            reduce using rule 71 (STATEMENT -> READ .)
    variance        reduce using rule 71 (STATEMENT -> READ .)
    stddev          reduce using rule 71 (STATEMENT -> READ .)
    skew            reduce using rule 71 (STATEMENT -> READ .)
    kurt            reduce using rule 71 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 71 (STATEMENT -> READ .)


state 98

    (72) STATEMENT -> STATMETHODS .

    id              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 72 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 72 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 72 (STATEMENT -> STATMETHODS .)


state 99

    (73) STATEMENT -> RETURN .

    id              reduce using rule 73 (STATEMENT -> RETURN .)
    if              reduce using rule 73 (STATEMENT -> RETURN .)
    print           reduce using rule 73 (STATEMENT -> RETURN .)
    while           reduce using rule 73 (STATEMENT -> RETURN .)
    do              reduce using rule 73 (STATEMENT -> RETURN .)
    scan            reduce using rule 73 (STATEMENT -> RETURN .)
    return          reduce using rule 73 (STATEMENT -> RETURN .)
    ols             reduce using rule 73 (STATEMENT -> RETURN .)
    las             reduce using rule 73 (STATEMENT -> RETURN .)
    rid             reduce using rule 73 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 73 (STATEMENT -> RETURN .)
    mbm             reduce using rule 73 (STATEMENT -> RETURN .)
    tseries         reduce using rule 73 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 73 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 73 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 73 (STATEMENT -> RETURN .)
    mean            reduce using rule 73 (STATEMENT -> RETURN .)
    mode            reduce using rule 73 (STATEMENT -> RETURN .)
    median          reduce using rule 73 (STATEMENT -> RETURN .)
    prob            reduce using rule 73 (STATEMENT -> RETURN .)
    freq            reduce using rule 73 (STATEMENT -> RETURN .)
    variance        reduce using rule 73 (STATEMENT -> RETURN .)
    stddev          reduce using rule 73 (STATEMENT -> RETURN .)
    skew            reduce using rule 73 (STATEMENT -> RETURN .)
    kurt            reduce using rule 73 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 73 (STATEMENT -> RETURN .)


state 100

    (74) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (105) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (184) PUSH_STACK_OPERANDS -> . empty
    (180) VALIDATE_FUNCTION_NAME -> . empty
    (168) empty -> .

    lSqrBracket     reduce using rule 168 (empty -> .)
    assign          reduce using rule 168 (empty -> .)
    lParenthesis    reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 169
    VALIDATE_FUNCTION_NAME         shift and go to state 170
    empty                          shift and go to state 171

state 101

    (86) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 172


state 102

    (89) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 173


state 103

    (103) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (196) PUSH_STACK_JUMPS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 174
    empty                          shift and go to state 175

state 104

    (104) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (196) PUSH_STACK_JUMPS -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 176
    empty                          shift and go to state 175

state 105

    (77) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 177


state 106

    (114) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 114 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 107

    (115) STATMETHODS -> LASSO .

    id              reduce using rule 115 (STATMETHODS -> LASSO .)
    if              reduce using rule 115 (STATMETHODS -> LASSO .)
    print           reduce using rule 115 (STATMETHODS -> LASSO .)
    while           reduce using rule 115 (STATMETHODS -> LASSO .)
    do              reduce using rule 115 (STATMETHODS -> LASSO .)
    scan            reduce using rule 115 (STATMETHODS -> LASSO .)
    return          reduce using rule 115 (STATMETHODS -> LASSO .)
    ols             reduce using rule 115 (STATMETHODS -> LASSO .)
    las             reduce using rule 115 (STATMETHODS -> LASSO .)
    rid             reduce using rule 115 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 115 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 115 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 115 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> LASSO .)
    mean            reduce using rule 115 (STATMETHODS -> LASSO .)
    mode            reduce using rule 115 (STATMETHODS -> LASSO .)
    median          reduce using rule 115 (STATMETHODS -> LASSO .)
    prob            reduce using rule 115 (STATMETHODS -> LASSO .)
    freq            reduce using rule 115 (STATMETHODS -> LASSO .)
    variance        reduce using rule 115 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 115 (STATMETHODS -> LASSO .)
    skew            reduce using rule 115 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 115 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> LASSO .)


state 108

    (116) STATMETHODS -> RIDGE .

    id              reduce using rule 116 (STATMETHODS -> RIDGE .)
    if              reduce using rule 116 (STATMETHODS -> RIDGE .)
    print           reduce using rule 116 (STATMETHODS -> RIDGE .)
    while           reduce using rule 116 (STATMETHODS -> RIDGE .)
    do              reduce using rule 116 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 116 (STATMETHODS -> RIDGE .)
    return          reduce using rule 116 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 116 (STATMETHODS -> RIDGE .)
    las             reduce using rule 116 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 116 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 116 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 116 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 116 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 116 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 116 (STATMETHODS -> RIDGE .)
    median          reduce using rule 116 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 116 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 116 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 116 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 116 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 116 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 116 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> RIDGE .)


state 109

    (117) STATMETHODS -> K_MEANS .

    id              reduce using rule 117 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 117 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 117 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 117 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 117 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 117 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 117 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 117 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 117 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 117 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 117 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 117 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 117 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 117 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 117 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 117 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> K_MEANS .)


state 110

    (118) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> MINI_BATCH_MEANS .)


state 111

    (119) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 112

    (120) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 113

    (121) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 114

    (122) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 115

    (123) STATMETHODS -> MEAN .

    id              reduce using rule 123 (STATMETHODS -> MEAN .)
    if              reduce using rule 123 (STATMETHODS -> MEAN .)
    print           reduce using rule 123 (STATMETHODS -> MEAN .)
    while           reduce using rule 123 (STATMETHODS -> MEAN .)
    do              reduce using rule 123 (STATMETHODS -> MEAN .)
    scan            reduce using rule 123 (STATMETHODS -> MEAN .)
    return          reduce using rule 123 (STATMETHODS -> MEAN .)
    ols             reduce using rule 123 (STATMETHODS -> MEAN .)
    las             reduce using rule 123 (STATMETHODS -> MEAN .)
    rid             reduce using rule 123 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 123 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 123 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 123 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 123 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 123 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 123 (STATMETHODS -> MEAN .)
    mean            reduce using rule 123 (STATMETHODS -> MEAN .)
    mode            reduce using rule 123 (STATMETHODS -> MEAN .)
    median          reduce using rule 123 (STATMETHODS -> MEAN .)
    prob            reduce using rule 123 (STATMETHODS -> MEAN .)
    freq            reduce using rule 123 (STATMETHODS -> MEAN .)
    variance        reduce using rule 123 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 123 (STATMETHODS -> MEAN .)
    skew            reduce using rule 123 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 123 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 123 (STATMETHODS -> MEAN .)


state 116

    (124) STATMETHODS -> MODE .

    id              reduce using rule 124 (STATMETHODS -> MODE .)
    if              reduce using rule 124 (STATMETHODS -> MODE .)
    print           reduce using rule 124 (STATMETHODS -> MODE .)
    while           reduce using rule 124 (STATMETHODS -> MODE .)
    do              reduce using rule 124 (STATMETHODS -> MODE .)
    scan            reduce using rule 124 (STATMETHODS -> MODE .)
    return          reduce using rule 124 (STATMETHODS -> MODE .)
    ols             reduce using rule 124 (STATMETHODS -> MODE .)
    las             reduce using rule 124 (STATMETHODS -> MODE .)
    rid             reduce using rule 124 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 124 (STATMETHODS -> MODE .)
    mbm             reduce using rule 124 (STATMETHODS -> MODE .)
    tseries         reduce using rule 124 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 124 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 124 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 124 (STATMETHODS -> MODE .)
    mean            reduce using rule 124 (STATMETHODS -> MODE .)
    mode            reduce using rule 124 (STATMETHODS -> MODE .)
    median          reduce using rule 124 (STATMETHODS -> MODE .)
    prob            reduce using rule 124 (STATMETHODS -> MODE .)
    freq            reduce using rule 124 (STATMETHODS -> MODE .)
    variance        reduce using rule 124 (STATMETHODS -> MODE .)
    stddev          reduce using rule 124 (STATMETHODS -> MODE .)
    skew            reduce using rule 124 (STATMETHODS -> MODE .)
    kurt            reduce using rule 124 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 124 (STATMETHODS -> MODE .)


state 117

    (125) STATMETHODS -> MEDIAN .

    id              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 125 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 125 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 125 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 125 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 125 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 125 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 125 (STATMETHODS -> MEDIAN .)


state 118

    (126) STATMETHODS -> PROBABILITY .

    id              reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 126 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 126 (STATMETHODS -> PROBABILITY .)


state 119

    (127) STATMETHODS -> FREQUENCY .

    id              reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 127 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 127 (STATMETHODS -> FREQUENCY .)


state 120

    (128) STATMETHODS -> VARIANCE .

    id              reduce using rule 128 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 128 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 128 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 128 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 128 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 128 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 128 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 128 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 128 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 128 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 128 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 128 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 128 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 128 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 128 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 128 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 128 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 128 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 128 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 128 (STATMETHODS -> VARIANCE .)


state 121

    (129) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 129 (STATMETHODS -> STANDARD_DEVIATION .)


state 122

    (130) STATMETHODS -> SKEWNESS .

    id              reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 130 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 130 (STATMETHODS -> SKEWNESS .)


state 123

    (131) STATMETHODS -> KURTOSI .

    id              reduce using rule 131 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 131 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 131 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 131 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 131 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 131 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 131 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 131 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 131 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 131 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 131 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 131 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 131 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 131 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 131 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 131 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 131 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 131 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 131 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 131 (STATMETHODS -> KURTOSI .)


state 124

    (110) RETURN -> return . EXPLOG GENERATE_QUAD_RETURN semicolon
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 178
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 125

    (132) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 182


state 126

    (133) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 183


state 127

    (134) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 184


state 128

    (135) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 185


state 129

    (136) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 186


state 130

    (137) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 187


state 131

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 188


state 132

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 189


state 133

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 190


state 134

    (141) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 191


state 135

    (144) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 192


state 136

    (147) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 193


state 137

    (150) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 194


state 138

    (153) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 195


state 139

    (156) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 196


state 140

    (159) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 197


state 141

    (162) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 198


state 142

    (165) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 199


state 143

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 200


state 144

    (176) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 176 (SAVE_COUNTER_PARAM -> empty .)


state 145

    (100) PARAMS -> TYPE id . SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (174) SAVE_PARAM -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    SAVE_PARAM                     shift and go to state 201
    empty                          shift and go to state 202

state 146

    (80) ISLIST -> lSqrBracket EXP . VALIDATE_INDEX rSqrBracket ISLIST
    (82) VALIDATE_INDEX -> . empty
    (168) empty -> .

    rSqrBracket     reduce using rule 168 (empty -> .)

    VALIDATE_INDEX                 shift and go to state 203
    empty                          shift and go to state 204

state 147

    (44) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (188) SOLVE_OPERATION_SUM_MINUS -> . empty
    (168) empty -> .

    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 205
    empty                          shift and go to state 206

state 148

    (48) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (189) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 207
    empty                          shift and go to state 208

state 149

    (52) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    not             reduce using rule 168 (empty -> .)
    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 209
    empty                          shift and go to state 210

state 150

    (53) FACTOR -> VARCONSTAUX .

    times           reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 53 (FACTOR -> VARCONSTAUX .)


state 151

    (54) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (184) PUSH_STACK_OPERANDS -> . empty
    (168) empty -> .

    lSqrBracket     reduce using rule 168 (empty -> .)
    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 211
    empty                          shift and go to state 212

state 152

    (55) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 213
    empty                          shift and go to state 78

state 153

    (56) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 214
    empty                          shift and go to state 78

state 154

    (57) VARCONSTAUX -> BOOLEAN .

    times           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    divide          reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    plus            reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    minus           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    rSqrBracket     reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    greater         reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    lessThan        reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    greaterEquals   reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    lessThanEquals  reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    equals          reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    notEquals       reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    and             reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    or              reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    semicolon       reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    rParenthesis    reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    comma           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)


state 155

    (112) BOOLEAN -> False . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 215
    empty                          shift and go to state 78

state 156

    (113) BOOLEAN -> True . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 216
    empty                          shift and go to state 78

state 157

    (83) SOLVE_OFFSETS -> empty .

    comma           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    semicolon       reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    assign          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    times           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    divide          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    plus            reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    minus           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    rSqrBracket     reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    greater         reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    lessThan        reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    greaterEquals   reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    lessThanEquals  reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    equals          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    notEquals       reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    and             reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    or              reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    rParenthesis    reduce using rule 83 (SOLVE_OFFSETS -> empty .)


state 158

    (81) ISLIST -> empty SOLVE_OFFSETS .

    comma           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    semicolon       reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    assign          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    times           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    divide          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    plus            reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    minus           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    rSqrBracket     reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    greater         reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThan        reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    greaterEquals   reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThanEquals  reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    equals          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    notEquals       reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    and             reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    or              reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    rParenthesis    reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)


state 159

    (22) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 22 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 22 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 160

    (172) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 172 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 172 (SAVE_ASSIGNED_VAR -> empty .)


state 161

    (23) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 162

    (24) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 24 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 24 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 163

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST CALCULATE_ARRAY LIST_A

    rSqrBracket     shift and go to state 217


state 164

    (29) ACUMULATE_R -> empty .

    rSqrBracket     reduce using rule 29 (ACUMULATE_R -> empty .)


state 165

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS .)


state 166

    (200) PRINTQUADS -> empty .

    $end            reduce using rule 200 (PRINTQUADS -> empty .)


state 167

    (62) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 168

    (63) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 63 (BLOCK_A -> STATEMENT BLOCK_A .)


state 169

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (168) empty -> .

    lSqrBracket     shift and go to state 74
    assign          reduce using rule 168 (empty -> .)

    ISLIST                         shift and go to state 218
    empty                          shift and go to state 75

state 170

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (181) ERA -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)

    ERA                            shift and go to state 219
    empty                          shift and go to state 220

state 171

    (184) PUSH_STACK_OPERANDS -> empty .
    (180) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 180 (VALIDATE_FUNCTION_NAME -> empty .)


state 172

    (86) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 221
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 173

    (89) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPRESSION                     shift and go to state 222
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 174

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 223


state 175

    (196) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 196 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 196 (PUSH_STACK_JUMPS -> empty .)


state 176

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 224

state 177

    (77) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (92) VARCTE -> . id ISLIST
    (93) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (94) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (95) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (96) VARCTE -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 226
    cte_i           shift and go to state 227
    cte_f           shift and go to state 228
    cte_str         shift and go to state 229
    False           shift and go to state 155
    True            shift and go to state 156

    VARCTE                         shift and go to state 225
    BOOLEAN                        shift and go to state 230

state 178

    (110) RETURN -> return EXPLOG . GENERATE_QUAD_RETURN semicolon
    (111) GENERATE_QUAD_RETURN -> . empty
    (168) empty -> .

    semicolon       reduce using rule 168 (empty -> .)

    GENERATE_QUAD_RETURN           shift and go to state 231
    empty                          shift and go to state 232

state 179

    (31) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG_A -> . and EXPLOG
    (34) EXPLOG_A -> . or EXPLOG
    (35) EXPLOG_A -> . empty
    (168) empty -> .

    and             shift and go to state 234
    or              shift and go to state 235
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    EXPLOG_A                       shift and go to state 233
    empty                          shift and go to state 236

state 180

    (32) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPRESSION                     shift and go to state 237
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 181

    (36) EXPRESSION -> EXP .
    (37) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (38) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (39) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (40) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (41) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (42) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (43) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 36 (EXPRESSION -> EXP .)
    or              reduce using rule 36 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 36 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 36 (EXPRESSION -> EXP .)
    comma           reduce using rule 36 (EXPRESSION -> EXP .)
    greater         shift and go to state 239
    lessThan        shift and go to state 240
    greaterEquals   shift and go to state 241
    lessThanEquals  shift and go to state 242
    equals          shift and go to state 243
    notEquals       shift and go to state 244

    EXPRESSION_A                   shift and go to state 238

state 182

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 245


state 183

    (133) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 246


state 184

    (134) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 247


state 185

    (135) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 248
    BOOLEAN                        shift and go to state 154

state 186

    (136) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 249
    BOOLEAN                        shift and go to state 154

state 187

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 250
    BOOLEAN                        shift and go to state 154

state 188

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 251


state 189

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 252


state 190

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 253


state 191

    (141) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 254


state 192

    (144) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 255


state 193

    (147) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 256


state 194

    (150) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 257


state 195

    (153) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 258


state 196

    (156) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 259


state 197

    (159) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 260


state 198

    (162) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 261


state 199

    (165) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 262


state 200

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (177) SAVE_COUNTER_QUAD -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 263
    empty                          shift and go to state 264

state 201

    (100) PARAMS -> TYPE id SAVE_PARAM . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (179) SAVE_PARAM_TYPE -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 265
    empty                          shift and go to state 266

state 202

    (174) SAVE_PARAM -> empty .

    comma           reduce using rule 174 (SAVE_PARAM -> empty .)
    rParenthesis    reduce using rule 174 (SAVE_PARAM -> empty .)


state 203

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX . rSqrBracket ISLIST

    rSqrBracket     shift and go to state 267


state 204

    (82) VALIDATE_INDEX -> empty .

    rSqrBracket     reduce using rule 82 (VALIDATE_INDEX -> empty .)


state 205

    (44) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (46) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (47) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    rSqrBracket     reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greater         reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 269
    minus           shift and go to state 270

    EXP_A                          shift and go to state 268

state 206

    (188) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 188 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 207

    (48) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (50) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (51) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 272
    divide          shift and go to state 273

    TERM_A                         shift and go to state 271

state 208

    (189) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 189 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 209

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 274
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 210

    (186) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    False           reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)
    True            reduce using rule 186 (PUSH_STACK_OPERATORS -> empty .)


state 211

    (54) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (168) empty -> .

    lSqrBracket     shift and go to state 74
    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    ISLIST                         shift and go to state 275
    empty                          shift and go to state 75

state 212

    (184) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)


state 213

    (55) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 214

    (56) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 215

    (112) BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)


state 216

    (113) BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)


state 217

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST CALCULATE_ARRAY LIST_A
    (17) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (18) LIST -> . empty
    (168) empty -> .

    lSqrBracket     shift and go to state 276
    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    LIST                           shift and go to state 277
    empty                          shift and go to state 278

state 218

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS ASSIGNMENT_A

    assign          shift and go to state 279


state 219

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 280


state 220

    (181) ERA -> empty .

    lParenthesis    reduce using rule 181 (ERA -> empty .)


state 221

    (86) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 281


state 222

    (89) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (199) GENERATE_QUAD_PRINT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 282
    empty                          shift and go to state 283

state 223

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 284
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 224

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 285


state 225

    (77) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (78) READ_A -> . comma
    (79) READ_A -> . empty
    (168) empty -> .

    comma           shift and go to state 287
    rParenthesis    reduce using rule 168 (empty -> .)

    READ_A                         shift and go to state 286
    empty                          shift and go to state 288

state 226

    (92) VARCTE -> id . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (168) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    ISLIST                         shift and go to state 289
    empty                          shift and go to state 75

state 227

    (93) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 290
    empty                          shift and go to state 78

state 228

    (94) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 291
    empty                          shift and go to state 78

state 229

    (95) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (185) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 292
    empty                          shift and go to state 78

state 230

    (96) VARCTE -> BOOLEAN .

    comma           reduce using rule 96 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 96 (VARCTE -> BOOLEAN .)


state 231

    (110) RETURN -> return EXPLOG GENERATE_QUAD_RETURN . semicolon

    semicolon       shift and go to state 293


state 232

    (111) GENERATE_QUAD_RETURN -> empty .

    semicolon       reduce using rule 111 (GENERATE_QUAD_RETURN -> empty .)


state 233

    (31) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (191) SOLVE_OPERATION_LOGIC -> . empty
    (168) empty -> .

    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 294
    empty                          shift and go to state 295

state 234

    (33) EXPLOG_A -> and . EXPLOG
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 296
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 235

    (34) EXPLOG_A -> or . EXPLOG
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 297
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 236

    (35) EXPLOG_A -> empty .

    semicolon       reduce using rule 35 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 35 (EXPLOG_A -> empty .)


state 237

    (32) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG_A -> . and EXPLOG
    (34) EXPLOG_A -> . or EXPLOG
    (35) EXPLOG_A -> . empty
    (168) empty -> .

    and             shift and go to state 234
    or              shift and go to state 235
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    EXPLOG_A                       shift and go to state 298
    empty                          shift and go to state 236

state 238

    (37) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXP                            shift and go to state 299
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 239

    (38) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 300
    empty                          shift and go to state 210

state 240

    (39) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 301
    empty                          shift and go to state 210

state 241

    (40) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 302
    empty                          shift and go to state 210

state 242

    (41) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 303
    empty                          shift and go to state 210

state 243

    (42) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 304
    empty                          shift and go to state 210

state 244

    (43) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 305
    empty                          shift and go to state 210

state 245

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 306


state 246

    (133) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 307


state 247

    (134) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 308


state 248

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 309


state 249

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 310


state 250

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 311


state 251

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 312


state 252

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 313


state 253

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 314


state 254

    (141) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (142) MEAN_A -> . comma id MEAN_A
    (143) MEAN_A -> . empty
    (168) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 168 (empty -> .)

    MEAN_A                         shift and go to state 315
    empty                          shift and go to state 317

state 255

    (144) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (145) MODE_A -> . comma id MODE_A
    (146) MODE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 319
    rParenthesis    reduce using rule 168 (empty -> .)

    MODE_A                         shift and go to state 318
    empty                          shift and go to state 320

state 256

    (147) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (148) MEDIAN_A -> . comma id MEDIAN_A
    (149) MEDIAN_A -> . empty
    (168) empty -> .

    comma           shift and go to state 322
    rParenthesis    reduce using rule 168 (empty -> .)

    MEDIAN_A                       shift and go to state 321
    empty                          shift and go to state 323

state 257

    (150) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (151) PROBABILITY_A -> . comma id PROBABILITY_A
    (152) PROBABILITY_A -> . empty
    (168) empty -> .

    comma           shift and go to state 325
    rParenthesis    reduce using rule 168 (empty -> .)

    PROBABILITY_A                  shift and go to state 324
    empty                          shift and go to state 326

state 258

    (153) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (154) FREQUENCY_A -> . comma id FREQUENCY_A
    (155) FREQUENCY_A -> . empty
    (168) empty -> .

    comma           shift and go to state 328
    rParenthesis    reduce using rule 168 (empty -> .)

    FREQUENCY_A                    shift and go to state 327
    empty                          shift and go to state 329

state 259

    (156) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (157) VARIANCE_A -> . comma id VARIANCE_A
    (158) VARIANCE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 331
    rParenthesis    reduce using rule 168 (empty -> .)

    VARIANCE_A                     shift and go to state 330
    empty                          shift and go to state 332

state 260

    (159) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (160) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (161) STANDARD_DEVIATION_A -> . empty
    (168) empty -> .

    comma           shift and go to state 334
    rParenthesis    reduce using rule 168 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 333
    empty                          shift and go to state 335

state 261

    (162) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (163) SKEWNESS_A -> . comma id SKEWNESS_A
    (164) SKEWNESS_A -> . empty
    (168) empty -> .

    comma           shift and go to state 337
    rParenthesis    reduce using rule 168 (empty -> .)

    SKEWNESS_A                     shift and go to state 336
    empty                          shift and go to state 338

state 262

    (165) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (166) KURTOSI_A -> . comma id KURTOSI_A
    (167) KURTOSI_A -> . empty
    (168) empty -> .

    comma           shift and go to state 340
    rParenthesis    reduce using rule 168 (empty -> .)

    KURTOSI_A                      shift and go to state 339
    empty                          shift and go to state 341

state 263

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 342

state 264

    (177) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 177 (SAVE_COUNTER_QUAD -> empty .)


state 265

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (175) INCREMENT_PARAM_COUNTER -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 343
    empty                          shift and go to state 344

state 266

    (179) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 179 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 179 (SAVE_PARAM_TYPE -> empty .)


state 267

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (168) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    assign          reduce using rule 168 (empty -> .)
    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    ISLIST                         shift and go to state 345
    empty                          shift and go to state 75

state 268

    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    rSqrBracket     reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greater         reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 269

    (46) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 346
    empty                          shift and go to state 210

state 270

    (47) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 347
    empty                          shift and go to state 210

state 271

    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 272

    (50) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 348
    empty                          shift and go to state 210

state 273

    (51) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 349
    empty                          shift and go to state 210

state 274

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 350


state 275

    (54) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 276

    (17) LIST -> lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST

    cte_i           shift and go to state 351


state 277

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST . CALCULATE_ARRAY LIST_A
    (30) CALCULATE_ARRAY -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    CALCULATE_ARRAY                shift and go to state 352
    empty                          shift and go to state 353

state 278

    (18) LIST -> empty .

    comma           reduce using rule 18 (LIST -> empty .)
    semicolon       reduce using rule 18 (LIST -> empty .)


state 279

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS ASSIGNMENT_A
    (186) PUSH_STACK_OPERATORS -> . empty
    (168) empty -> .

    not             reduce using rule 168 (empty -> .)
    id              reduce using rule 168 (empty -> .)
    lParenthesis    reduce using rule 168 (empty -> .)
    cte_i           reduce using rule 168 (empty -> .)
    cte_f           reduce using rule 168 (empty -> .)
    False           reduce using rule 168 (empty -> .)
    True            reduce using rule 168 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 354
    empty                          shift and go to state 210

state 280

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (106) METHODCALL_A -> . EXP VALIDATE_PARAMETER
    (107) METHODCALL_A -> . empty
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (168) empty -> .
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    METHODCALL_A                   shift and go to state 355
    EXP                            shift and go to state 356
    empty                          shift and go to state 357
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 281

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (193) GENERATE_GOTOF_CONDITIONAL -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 358
    empty                          shift and go to state 359

state 282

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (90) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (91) WRITE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 361
    rParenthesis    reduce using rule 168 (empty -> .)

    WRITE_A                        shift and go to state 360
    empty                          shift and go to state 362

state 283

    (199) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 199 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 199 (GENERATE_QUAD_PRINT -> empty .)


state 284

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 363


state 285

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 364


state 286

    (77) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 365


state 287

    (78) READ_A -> comma .

    rParenthesis    reduce using rule 78 (READ_A -> comma .)


state 288

    (79) READ_A -> empty .

    rParenthesis    reduce using rule 79 (READ_A -> empty .)


state 289

    (92) VARCTE -> id ISLIST .

    comma           reduce using rule 92 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 92 (VARCTE -> id ISLIST .)


state 290

    (93) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 93 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 93 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 291

    (94) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 94 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 94 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 292

    (95) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 95 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 95 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 293

    (110) RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .

    id              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    if              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    print           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    while           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    do              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    scan            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    return          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    ols             reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    las             reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rid             reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kmeans          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mbm             reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    tseries         reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_abs_err    reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_sqr_err    reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median_abs_err  reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mode            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    prob            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    freq            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    variance        reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    stddev          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    skew            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kurt            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rCurlyBracket   reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)


state 294

    (31) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 31 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 31 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 295

    (191) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 191 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 191 (SOLVE_OPERATION_LOGIC -> empty .)


state 296

    (33) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 33 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 33 (EXPLOG_A -> and EXPLOG .)


state 297

    (34) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 34 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 34 (EXPLOG_A -> or EXPLOG .)


state 298

    (32) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (191) SOLVE_OPERATION_LOGIC -> . empty
    (168) empty -> .

    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 366
    empty                          shift and go to state 295

state 299

    (37) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (190) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (168) empty -> .

    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 367
    empty                          shift and go to state 368

state 300

    (38) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    False           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    True            reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 301

    (39) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    False           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    True            reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 302

    (40) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 303

    (41) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 304

    (42) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    False           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    True            reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 305

    (43) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 306

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 369


state 307

    (133) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 370


state 308

    (134) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 371


state 309

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 372


state 310

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 373


state 311

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 374
    BOOLEAN                        shift and go to state 154

state 312

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 375


state 313

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 376


state 314

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 377


state 315

    (141) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 378


state 316

    (142) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 379


state 317

    (143) MEAN_A -> empty .

    rParenthesis    reduce using rule 143 (MEAN_A -> empty .)


state 318

    (144) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 380


state 319

    (145) MODE_A -> comma . id MODE_A

    id              shift and go to state 381


state 320

    (146) MODE_A -> empty .

    rParenthesis    reduce using rule 146 (MODE_A -> empty .)


state 321

    (147) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 382


state 322

    (148) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 383


state 323

    (149) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 149 (MEDIAN_A -> empty .)


state 324

    (150) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 384


state 325

    (151) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 385


state 326

    (152) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 152 (PROBABILITY_A -> empty .)


state 327

    (153) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 386


state 328

    (154) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 387


state 329

    (155) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 155 (FREQUENCY_A -> empty .)


state 330

    (156) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 388


state 331

    (157) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 389


state 332

    (158) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 158 (VARIANCE_A -> empty .)


state 333

    (159) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 390


state 334

    (160) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 391


state 335

    (161) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 161 (STANDARD_DEVIATION_A -> empty .)


state 336

    (162) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 392


state 337

    (163) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 393


state 338

    (164) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 164 (SKEWNESS_A -> empty .)


state 339

    (165) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 394


state 340

    (166) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 395


state 341

    (167) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 167 (KURTOSI_A -> empty .)


state 342

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (178) END_PROCEDURE -> . empty
    (168) empty -> .

    func            reduce using rule 168 (empty -> .)
    void            reduce using rule 168 (empty -> .)

    END_PROCEDURE                  shift and go to state 396
    empty                          shift and go to state 87

state 343

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (101) PARAMS_A -> . comma PARAMS
    (102) PARAMS_A -> . empty
    (168) empty -> .

    comma           shift and go to state 398
    rParenthesis    reduce using rule 168 (empty -> .)

    PARAMS_A                       shift and go to state 397
    empty                          shift and go to state 399

state 344

    (175) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 175 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 175 (INCREMENT_PARAM_COUNTER -> empty .)


state 345

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .

    comma           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    semicolon       reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    assign          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    times           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    divide          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    plus            reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    minus           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rSqrBracket     reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greater         reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThan        reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greaterEquals   reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThanEquals  reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    equals          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    notEquals       reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    and             reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    or              reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rParenthesis    reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)


state 346

    (46) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXP                            shift and go to state 400
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 347

    (47) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXP                            shift and go to state 401
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 348

    (50) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    TERM                           shift and go to state 402
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 349

    (51) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    TERM                           shift and go to state 403
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 350

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (187) POP_STACK_OPERATORS -> . empty
    (168) empty -> .

    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    rSqrBracket     reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)
    comma           reduce using rule 168 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 404
    empty                          shift and go to state 405

state 351

    (17) LIST -> lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST
    (29) ACUMULATE_R -> . empty
    (168) empty -> .

    rSqrBracket     reduce using rule 168 (empty -> .)

    ACUMULATE_R                    shift and go to state 406
    empty                          shift and go to state 164

state 352

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY . LIST_A
    (19) LIST_A -> . comma VARS_A
    (20) LIST_A -> . empty
    (168) empty -> .

    comma           shift and go to state 408
    semicolon       reduce using rule 168 (empty -> .)

    LIST_A                         shift and go to state 407
    empty                          shift and go to state 409

state 353

    (30) CALCULATE_ARRAY -> empty .

    comma           reduce using rule 30 (CALCULATE_ARRAY -> empty .)
    semicolon       reduce using rule 30 (CALCULATE_ARRAY -> empty .)


state 354

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . ASSIGNMENT_A
    (75) ASSIGNMENT_A -> . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (76) ASSIGNMENT_A -> . METHODCALL SOLVE_OPERATION_ASSIGNMENT
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    id              shift and go to state 410
    lParenthesis    shift and go to state 149
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    ASSIGNMENT_A                   shift and go to state 411
    EXPLOG                         shift and go to state 412
    METHODCALL                     shift and go to state 413
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 355

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A . METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (108) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (109) METHODCALL_B -> . empty
    (168) empty -> .

    comma           shift and go to state 415
    rParenthesis    reduce using rule 168 (empty -> .)

    METHODCALL_B                   shift and go to state 414
    empty                          shift and go to state 416

state 356

    (106) METHODCALL_A -> EXP . VALIDATE_PARAMETER
    (182) VALIDATE_PARAMETER -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 417
    empty                          shift and go to state 418

state 357

    (107) METHODCALL_A -> empty .

    comma           reduce using rule 107 (METHODCALL_A -> empty .)
    rParenthesis    reduce using rule 107 (METHODCALL_A -> empty .)


state 358

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 419

state 359

    (193) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 193 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 360

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 420


state 361

    (90) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPRESSION                     shift and go to state 421
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 362

    (91) WRITE_A -> empty .

    rParenthesis    reduce using rule 91 (WRITE_A -> empty .)


state 363

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (193) GENERATE_GOTOF_CONDITIONAL -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 422
    empty                          shift and go to state 359

state 364

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 180
    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXPLOG                         shift and go to state 423
    EXPRESSION                     shift and go to state 179
    EXP                            shift and go to state 181
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 365

    (77) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 366

    (32) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 32 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 32 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 367

    (37) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 368

    (190) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 190 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 369

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 424


state 370

    (133) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 425


state 371

    (134) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 426


state 372

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 427


state 373

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 428


state 374

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 429


state 375

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 430


state 376

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 431


state 377

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 432


state 378

    (141) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 433


state 379

    (142) MEAN_A -> comma id . MEAN_A
    (142) MEAN_A -> . comma id MEAN_A
    (143) MEAN_A -> . empty
    (168) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 168 (empty -> .)

    MEAN_A                         shift and go to state 434
    empty                          shift and go to state 317

state 380

    (144) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 435


state 381

    (145) MODE_A -> comma id . MODE_A
    (145) MODE_A -> . comma id MODE_A
    (146) MODE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 319
    rParenthesis    reduce using rule 168 (empty -> .)

    MODE_A                         shift and go to state 436
    empty                          shift and go to state 320

state 382

    (147) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 437


state 383

    (148) MEDIAN_A -> comma id . MEDIAN_A
    (148) MEDIAN_A -> . comma id MEDIAN_A
    (149) MEDIAN_A -> . empty
    (168) empty -> .

    comma           shift and go to state 322
    rParenthesis    reduce using rule 168 (empty -> .)

    MEDIAN_A                       shift and go to state 438
    empty                          shift and go to state 323

state 384

    (150) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 439


state 385

    (151) PROBABILITY_A -> comma id . PROBABILITY_A
    (151) PROBABILITY_A -> . comma id PROBABILITY_A
    (152) PROBABILITY_A -> . empty
    (168) empty -> .

    comma           shift and go to state 325
    rParenthesis    reduce using rule 168 (empty -> .)

    PROBABILITY_A                  shift and go to state 440
    empty                          shift and go to state 326

state 386

    (153) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 441


state 387

    (154) FREQUENCY_A -> comma id . FREQUENCY_A
    (154) FREQUENCY_A -> . comma id FREQUENCY_A
    (155) FREQUENCY_A -> . empty
    (168) empty -> .

    comma           shift and go to state 328
    rParenthesis    reduce using rule 168 (empty -> .)

    FREQUENCY_A                    shift and go to state 442
    empty                          shift and go to state 329

state 388

    (156) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 443


state 389

    (157) VARIANCE_A -> comma id . VARIANCE_A
    (157) VARIANCE_A -> . comma id VARIANCE_A
    (158) VARIANCE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 331
    rParenthesis    reduce using rule 168 (empty -> .)

    VARIANCE_A                     shift and go to state 444
    empty                          shift and go to state 332

state 390

    (159) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 445


state 391

    (160) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (160) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (161) STANDARD_DEVIATION_A -> . empty
    (168) empty -> .

    comma           shift and go to state 334
    rParenthesis    reduce using rule 168 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 446
    empty                          shift and go to state 335

state 392

    (162) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 447


state 393

    (163) SKEWNESS_A -> comma id . SKEWNESS_A
    (163) SKEWNESS_A -> . comma id SKEWNESS_A
    (164) SKEWNESS_A -> . empty
    (168) empty -> .

    comma           shift and go to state 337
    rParenthesis    reduce using rule 168 (empty -> .)

    SKEWNESS_A                     shift and go to state 448
    empty                          shift and go to state 338

state 394

    (165) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 449


state 395

    (166) KURTOSI_A -> comma id . KURTOSI_A
    (166) KURTOSI_A -> . comma id KURTOSI_A
    (167) KURTOSI_A -> . empty
    (168) empty -> .

    comma           shift and go to state 340
    rParenthesis    reduce using rule 168 (empty -> .)

    KURTOSI_A                      shift and go to state 450
    empty                          shift and go to state 341

state 396

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 97 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 97 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 397

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 100 (PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 398

    (101) PARAMS_A -> comma . PARAMS
    (100) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    PARAMS                         shift and go to state 451
    TYPE                           shift and go to state 72

state 399

    (102) PARAMS_A -> empty .

    rParenthesis    reduce using rule 102 (PARAMS_A -> empty .)


state 400

    (46) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 401

    (47) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 402

    (50) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 403

    (51) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 404

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 405

    (187) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 187 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 187 (POP_STACK_OPERATORS -> empty .)


state 406

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST

    rSqrBracket     shift and go to state 452


state 407

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .

    semicolon       reduce using rule 11 (VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .)


state 408

    (19) LIST_A -> comma . VARS_A
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (168) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 168 (empty -> .)

    VARS_A                         shift and go to state 453
    empty                          shift and go to state 41

state 409

    (20) LIST_A -> empty .

    semicolon       reduce using rule 20 (LIST_A -> empty .)


state 410

    (105) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (54) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (180) VALIDATE_FUNCTION_NAME -> . empty
    (184) PUSH_STACK_OPERANDS -> . empty
    (168) empty -> .

    lParenthesis    reduce using rule 168 (empty -> .)
    lSqrBracket     reduce using rule 168 (empty -> .)
    times           reduce using rule 168 (empty -> .)
    divide          reduce using rule 168 (empty -> .)
    plus            reduce using rule 168 (empty -> .)
    minus           reduce using rule 168 (empty -> .)
    greater         reduce using rule 168 (empty -> .)
    lessThan        reduce using rule 168 (empty -> .)
    greaterEquals   reduce using rule 168 (empty -> .)
    lessThanEquals  reduce using rule 168 (empty -> .)
    equals          reduce using rule 168 (empty -> .)
    notEquals       reduce using rule 168 (empty -> .)
    and             reduce using rule 168 (empty -> .)
    or              reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    VALIDATE_FUNCTION_NAME         shift and go to state 170
    PUSH_STACK_OPERANDS            shift and go to state 211
    empty                          shift and go to state 454

state 411

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .

    id              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    if              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    print           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    while           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    do              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    scan            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    return          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    ols             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    las             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    rid             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    kmeans          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mbm             reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    tseries         reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_abs_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_sqr_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median_abs_err  reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mode            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    prob            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    freq            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    variance        reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    stddev          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    skew            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    kurt            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    rCurlyBracket   reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)


state 412

    (75) ASSIGNMENT_A -> EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (192) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (168) empty -> .

    semicolon       reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 455
    empty                          shift and go to state 456

state 413

    (76) ASSIGNMENT_A -> METHODCALL . SOLVE_OPERATION_ASSIGNMENT
    (192) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 457
    empty                          shift and go to state 456

state 414

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 458


state 415

    (108) METHODCALL_B -> comma . EXP VALIDATE_PARAMETER METHODCALL_B
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 149
    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    EXP                            shift and go to state 459
    TERM                           shift and go to state 147
    FACTOR                         shift and go to state 148
    VARCONSTAUX                    shift and go to state 150
    BOOLEAN                        shift and go to state 154

state 416

    (109) METHODCALL_B -> empty .

    rParenthesis    reduce using rule 109 (METHODCALL_B -> empty .)


state 417

    (106) METHODCALL_A -> EXP VALIDATE_PARAMETER .

    comma           reduce using rule 106 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)
    rParenthesis    reduce using rule 106 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)


state 418

    (182) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 182 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 182 (VALIDATE_PARAMETER -> empty .)


state 419

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (87) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (88) CONDITION_A -> . empty
    (168) empty -> .

    else            shift and go to state 461
    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    CONDITION_A                    shift and go to state 460
    empty                          shift and go to state 462

state 420

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 463


state 421

    (90) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (199) GENERATE_QUAD_PRINT -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 464
    empty                          shift and go to state 283

state 422

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 465

state 423

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 466


state 424

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 467

state 425

    (133) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 468
    BOOLEAN                        shift and go to state 154

state 426

    (134) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 469
    BOOLEAN                        shift and go to state 154

state 427

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 470
    BOOLEAN                        shift and go to state 154

state 428

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 471
    BOOLEAN                        shift and go to state 154

state 429

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 472


state 430

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 473


state 431

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 474


state 432

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 475


state 433

    (141) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 141 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 434

    (142) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 142 (MEAN_A -> comma id MEAN_A .)


state 435

    (144) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 144 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 436

    (145) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 145 (MODE_A -> comma id MODE_A .)


state 437

    (147) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 147 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 438

    (148) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 148 (MEDIAN_A -> comma id MEDIAN_A .)


state 439

    (150) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 150 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 440

    (151) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 151 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 441

    (153) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 153 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 442

    (154) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 154 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 443

    (156) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 156 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 444

    (157) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 157 (VARIANCE_A -> comma id VARIANCE_A .)


state 445

    (159) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 159 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 446

    (160) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 160 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 447

    (162) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 162 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 448

    (163) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 163 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 449

    (165) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 165 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 450

    (166) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 166 (KURTOSI_A -> comma id KURTOSI_A .)


state 451

    (101) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 101 (PARAMS_A -> comma PARAMS .)


state 452

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST
    (17) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (18) LIST -> . empty
    (168) empty -> .

    lSqrBracket     shift and go to state 276
    comma           reduce using rule 168 (empty -> .)
    semicolon       reduce using rule 168 (empty -> .)

    LIST                           shift and go to state 476
    empty                          shift and go to state 278

state 453

    (19) LIST_A -> comma VARS_A .

    semicolon       reduce using rule 19 (LIST_A -> comma VARS_A .)


state 454

    (180) VALIDATE_FUNCTION_NAME -> empty .
    (184) PUSH_STACK_OPERANDS -> empty .

    lParenthesis    reduce using rule 180 (VALIDATE_FUNCTION_NAME -> empty .)
    lSqrBracket     reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 184 (PUSH_STACK_OPERANDS -> empty .)


state 455

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 477


state 456

    (192) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    id              reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    if              reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    print           reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    while           reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    do              reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    scan            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    return          reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    ols             reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    las             reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    rid             reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    kmeans          reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mbm             reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    tseries         reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean_abs_err    reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean_sqr_err    reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    median_abs_err  reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mode            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    median          reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    prob            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    freq            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    variance        reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    stddev          reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    skew            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    kurt            reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    rCurlyBracket   reduce using rule 192 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 457

    (76) ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .

    id              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    if              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    print           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    while           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    do              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    scan            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    return          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    ols             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    las             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    rid             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    kmeans          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mbm             reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    tseries         reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean_abs_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean_sqr_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    median_abs_err  reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mode            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    median          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    prob            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    freq            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    variance        reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    stddev          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    skew            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    kurt            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    rCurlyBracket   reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)


state 458

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 478


state 459

    (108) METHODCALL_B -> comma EXP . VALIDATE_PARAMETER METHODCALL_B
    (182) VALIDATE_PARAMETER -> . empty
    (168) empty -> .

    comma           reduce using rule 168 (empty -> .)
    rParenthesis    reduce using rule 168 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 479
    empty                          shift and go to state 418

state 460

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (194) SOLVE_OPERATION_CONDITIONAL -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 480
    empty                          shift and go to state 481

state 461

    (87) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (195) GENERATE_GOTO_CONDITIONAL -> . empty
    (168) empty -> .

    lCurlyBracket   reduce using rule 168 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 482
    empty                          shift and go to state 483

state 462

    (88) CONDITION_A -> empty .

    id              reduce using rule 88 (CONDITION_A -> empty .)
    if              reduce using rule 88 (CONDITION_A -> empty .)
    print           reduce using rule 88 (CONDITION_A -> empty .)
    while           reduce using rule 88 (CONDITION_A -> empty .)
    do              reduce using rule 88 (CONDITION_A -> empty .)
    scan            reduce using rule 88 (CONDITION_A -> empty .)
    return          reduce using rule 88 (CONDITION_A -> empty .)
    ols             reduce using rule 88 (CONDITION_A -> empty .)
    las             reduce using rule 88 (CONDITION_A -> empty .)
    rid             reduce using rule 88 (CONDITION_A -> empty .)
    kmeans          reduce using rule 88 (CONDITION_A -> empty .)
    mbm             reduce using rule 88 (CONDITION_A -> empty .)
    tseries         reduce using rule 88 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 88 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 88 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 88 (CONDITION_A -> empty .)
    mean            reduce using rule 88 (CONDITION_A -> empty .)
    mode            reduce using rule 88 (CONDITION_A -> empty .)
    median          reduce using rule 88 (CONDITION_A -> empty .)
    prob            reduce using rule 88 (CONDITION_A -> empty .)
    freq            reduce using rule 88 (CONDITION_A -> empty .)
    variance        reduce using rule 88 (CONDITION_A -> empty .)
    stddev          reduce using rule 88 (CONDITION_A -> empty .)
    skew            reduce using rule 88 (CONDITION_A -> empty .)
    kurt            reduce using rule 88 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 88 (CONDITION_A -> empty .)


state 463

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 464

    (90) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (90) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (91) WRITE_A -> . empty
    (168) empty -> .

    comma           shift and go to state 361
    rParenthesis    reduce using rule 168 (empty -> .)

    WRITE_A                        shift and go to state 484
    empty                          shift and go to state 362

state 465

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (197) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 485
    empty                          shift and go to state 486

state 466

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (198) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 487
    empty                          shift and go to state 488

state 467

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 489


state 468

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 490


state 469

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 491


state 470

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 492


state 471

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 493


state 472

    (137) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 137 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 473

    (138) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 138 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 474

    (139) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 139 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 475

    (140) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 140 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 476

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .

    comma           reduce using rule 17 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)
    semicolon       reduce using rule 17 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)


state 477

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 478

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon . VALIDATE_METHOD_CALL
    (183) VALIDATE_METHOD_CALL -> . empty
    (168) empty -> .

    id              reduce using rule 168 (empty -> .)
    if              reduce using rule 168 (empty -> .)
    print           reduce using rule 168 (empty -> .)
    while           reduce using rule 168 (empty -> .)
    do              reduce using rule 168 (empty -> .)
    scan            reduce using rule 168 (empty -> .)
    return          reduce using rule 168 (empty -> .)
    ols             reduce using rule 168 (empty -> .)
    las             reduce using rule 168 (empty -> .)
    rid             reduce using rule 168 (empty -> .)
    kmeans          reduce using rule 168 (empty -> .)
    mbm             reduce using rule 168 (empty -> .)
    tseries         reduce using rule 168 (empty -> .)
    mean_abs_err    reduce using rule 168 (empty -> .)
    mean_sqr_err    reduce using rule 168 (empty -> .)
    median_abs_err  reduce using rule 168 (empty -> .)
    mean            reduce using rule 168 (empty -> .)
    mode            reduce using rule 168 (empty -> .)
    median          reduce using rule 168 (empty -> .)
    prob            reduce using rule 168 (empty -> .)
    freq            reduce using rule 168 (empty -> .)
    variance        reduce using rule 168 (empty -> .)
    stddev          reduce using rule 168 (empty -> .)
    skew            reduce using rule 168 (empty -> .)
    kurt            reduce using rule 168 (empty -> .)
    rCurlyBracket   reduce using rule 168 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 494
    empty                          shift and go to state 495

state 479

    (108) METHODCALL_B -> comma EXP VALIDATE_PARAMETER . METHODCALL_B
    (108) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (109) METHODCALL_B -> . empty
    (168) empty -> .

    comma           shift and go to state 415
    rParenthesis    reduce using rule 168 (empty -> .)

    METHODCALL_B                   shift and go to state 496
    empty                          shift and go to state 416

state 480

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 481

    (194) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 194 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 482

    (87) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 497

state 483

    (195) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 195 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 484

    (90) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 90 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 485

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 486

    (197) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 197 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 487

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 488

    (198) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 198 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 489

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 498

state 490

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 499

state 491

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 500

state 492

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 501
    BOOLEAN                        shift and go to state 154

state 493

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 502
    BOOLEAN                        shift and go to state 154

state 494

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 495

    (183) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 183 (VALIDATE_METHOD_CALL -> empty .)


state 496

    (108) METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .

    rParenthesis    reduce using rule 108 (METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .)


state 497

    (87) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 498

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 503


state 499

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 504


state 500

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 505


state 501

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 506


state 502

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 507


state 503

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 154
    VARCONSTAUX                    shift and go to state 508

state 504

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 509

state 505

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 510

state 506

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 511
    BOOLEAN                        shift and go to state 154

state 507

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 512

state 508

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 513


state 509

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 514


state 510

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 515


state 511

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 516


state 512

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 517


state 513

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 518

state 514

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 519
    BOOLEAN                        shift and go to state 154

state 515

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 520

state 516

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 521


state 517

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 522

state 518

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 523


state 519

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 524


state 520

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 525


state 521

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 526


state 522

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 527


state 523

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 528


state 524

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 529

state 525

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 530
    BOOLEAN                        shift and go to state 154

state 526

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 531
    BOOLEAN                        shift and go to state 154

state 527

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 532
    BOOLEAN                        shift and go to state 154

state 528

    (132) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 132 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 529

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 533


state 530

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 534


state 531

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 535


state 532

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 536


state 533

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 537

state 534

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 538
    BOOLEAN                        shift and go to state 154

state 535

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 539
    BOOLEAN                        shift and go to state 154

state 536

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 540
    BOOLEAN                        shift and go to state 154

state 537

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 541


state 538

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 542


state 539

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 543


state 540

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 544


state 541

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 545

state 542

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 546


state 543

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 547

state 544

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 548
    BOOLEAN                        shift and go to state 154

state 545

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 549


state 546

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 550


state 547

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 551


state 548

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 552


state 549

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 553
    BOOLEAN                        shift and go to state 154

state 550

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 554
    BOOLEAN                        shift and go to state 154

state 551

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 555
    BOOLEAN                        shift and go to state 154

state 552

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 556
    BOOLEAN                        shift and go to state 154

state 553

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 557


state 554

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 558


state 555

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 559


state 556

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 560


state 557

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 561


state 558

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 562


state 559

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 563


state 560

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 564
    BOOLEAN                        shift and go to state 154

state 561

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 565


state 562

    (134) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 134 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 563

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 566


state 564

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 567


state 565

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 568


state 566

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 569


state 567

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 151
    cte_i           shift and go to state 152
    cte_f           shift and go to state 153
    False           shift and go to state 155
    True            shift and go to state 156

    VARCONSTAUX                    shift and go to state 570
    BOOLEAN                        shift and go to state 154

state 568

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 571


state 569

    (135) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 135 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 570

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 572


state 571

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    False           shift and go to state 155
    True            shift and go to state 156

    BOOLEAN                        shift and go to state 573

state 572

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 574


state 573

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 575


state 574

    (136) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 136 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 575

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 576


state 576

    (133) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 44 resolved as shift
