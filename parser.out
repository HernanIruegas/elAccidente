Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
Rule 2     GENERATE_GOTO_MAIN -> empty
Rule 3     FILL_GOTO_MAIN -> empty
Rule 4     PROGRAM_A -> VARS PROGRAM_A
Rule 5     PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B
Rule 6     PROGRAM_B -> METHOD PROGRAM_B
Rule 7     PROGRAM_B -> empty
Rule 8     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 9     VARS_A -> id assign VARCTE_AUX_VARS SIMPLE
Rule 10    VARS_A -> id SAVE_VAR SIMPLE
Rule 11    VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
Rule 12    VARS_A -> empty
Rule 13    VARS_B -> VARS
Rule 14    VARS_B -> empty
Rule 15    SIMPLE -> comma VARS_A
Rule 16    SIMPLE -> empty
Rule 17    LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
Rule 18    LIST -> empty
Rule 19    LIST_A -> comma VARS_A
Rule 20    LIST_A -> empty
Rule 21    VARCTE_AUX_VARS -> id ISLIST
Rule 22    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 23    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 24    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 25    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 26    BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL
Rule 27    BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL
Rule 28    VALIDATE_NAME_ARRAY -> empty
Rule 29    ACUMULATE_R -> empty
Rule 30    CALCULATE_ARRAY -> empty
Rule 31    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 32    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 33    EXPLOG_A -> and EXPLOG
Rule 34    EXPLOG_A -> or EXPLOG
Rule 35    EXPLOG_A -> empty
Rule 36    EXPRESSION -> EXP
Rule 37    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 38    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 39    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 40    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 41    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 42    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 43    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 44    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 45    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 46    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 47    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 48    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 49    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 50    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 51    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 52    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 53    FACTOR -> VARCONSTAUX
Rule 54    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 55    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 56    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 57    VARCONSTAUX -> BOOLEAN
Rule 58    TYPE -> int SAVE_TYPE
Rule 59    TYPE -> float SAVE_TYPE
Rule 60    TYPE -> string SAVE_TYPE
Rule 61    TYPE -> bool SAVE_TYPE
Rule 62    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 63    BLOCK_A -> STATEMENT BLOCK_A
Rule 64    BLOCK_A -> empty
Rule 65    STATEMENT -> ASSIGNMENT
Rule 66    STATEMENT -> CONDITION
Rule 67    STATEMENT -> WRITE
Rule 68    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 69    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 70    STATEMENT -> METHODCALL
Rule 71    STATEMENT -> READ
Rule 72    STATEMENT -> STATMETHODS
Rule 73    STATEMENT -> RETURN
Rule 74    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
Rule 75    ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 76    ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT
Rule 77    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 78    READ_A -> comma
Rule 79    READ_A -> empty
Rule 80    ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
Rule 81    ISLIST -> empty SOLVE_OFFSETS
Rule 82    VALIDATE_INDEX -> empty
Rule 83    SOLVE_OFFSETS -> empty
Rule 84    TYPEMETHOD -> TYPE
Rule 85    TYPEMETHOD -> void SAVE_TYPE
Rule 86    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 87    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 88    CONDITION_A -> empty
Rule 89    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 90    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 91    WRITE_A -> empty
Rule 92    VARCTE -> id ISLIST
Rule 93    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 94    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 95    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 96    VARCTE -> BOOLEAN
Rule 97    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 98    METHOD_A -> PARAMS
Rule 99    METHOD_A -> empty
Rule 100   PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 101   PARAMS_A -> comma PARAMS
Rule 102   PARAMS_A -> empty
Rule 103   PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 104   POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 105   METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 106   METHODCALL_A -> EXP VALIDATE_PARAMETER
Rule 107   METHODCALL_A -> empty
Rule 108   METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B
Rule 109   METHODCALL_B -> empty
Rule 110   RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon
Rule 111   GENERATE_QUAD_RETURN -> empty
Rule 112   BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT
Rule 113   BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT
Rule 114   STATMETHODS -> LASSO
Rule 115   STATMETHODS -> RIDGE
Rule 116   STATMETHODS -> K_MEANS
Rule 117   STATMETHODS -> MINI_BATCH_MEANS
Rule 118   STATMETHODS -> LINEAR_REGRESSION
Rule 119   STATMETHODS -> TIME_SERIES_SPLIT
Rule 120   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 121   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 122   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 123   STATMETHODS -> MEAN
Rule 124   STATMETHODS -> MODE
Rule 125   STATMETHODS -> MEDIAN
Rule 126   STATMETHODS -> FREQUENCY
Rule 127   STATMETHODS -> VARIANCE
Rule 128   STATMETHODS -> STANDARD_DEVIATION
Rule 129   STATMETHODS -> SKEWNESS
Rule 130   STATMETHODS -> KURTOSI
Rule 131   LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon
Rule 132   GENERATE_QUAD_LASSO -> empty
Rule 133   RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
Rule 134   GENERATE_QUAD_RIDGE -> empty
Rule 135   K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
Rule 136   MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
Rule 137   LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
Rule 138   TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon
Rule 139   GENERATE_QUAD_TIME_SERIES -> empty
Rule 140   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
Rule 141   GENERATE_QUAD_ABSOLUTE_ERROR -> empty
Rule 142   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
Rule 143   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon
Rule 144   GENERATE_QUAD_MEDIAN_ERROR -> empty
Rule 145   MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 146   GENERATE_QUAD_MEAN -> empty
Rule 147   MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 148   MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 149   FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 150   VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 151   STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 152   SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 153   KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
Rule 154   empty -> <empty>
Rule 155   START_FUNCTION -> empty
Rule 156   SAVE_TYPE -> empty
Rule 157   SAVE_VAR -> empty
Rule 158   SAVE_ASSIGNED_VAR -> empty
Rule 159   SAVE_ASSIGNED_VAR_BOOL -> empty
Rule 160   SAVE_PARAM -> empty
Rule 161   INCREMENT_PARAM_COUNTER -> empty
Rule 162   SAVE_COUNTER_PARAM -> empty
Rule 163   SAVE_COUNTER_QUAD -> empty
Rule 164   END_PROCEDURE -> empty
Rule 165   SAVE_PARAM_TYPE -> empty
Rule 166   VALIDATE_FUNCTION_NAME -> empty
Rule 167   ERA -> empty
Rule 168   VALIDATE_PARAMETER -> empty
Rule 169   VALIDATE_METHOD_CALL -> empty
Rule 170   PUSH_STACK_OPERANDS -> empty
Rule 171   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 172   PUSH_STACK_OPERATORS -> empty
Rule 173   POP_STACK_OPERATORS -> empty
Rule 174   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 175   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 176   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 177   SOLVE_OPERATION_LOGIC -> empty
Rule 178   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 179   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 180   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 181   GENERATE_GOTO_CONDITIONAL -> empty
Rule 182   PUSH_STACK_JUMPS -> empty
Rule 183   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 184   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 185   GENERATE_QUAD_PRINT -> empty
Rule 186   PRINTQUADS -> empty

Terminals, with rules where they appear

False                : 26 112
True                 : 27 113
and                  : 33
assign               : 9 74
bool                 : 61
colon                : 8
comma                : 15 19 78 90 101 108 133 135 136 137 138 138 140 142 143
cte_f                : 23 56 94
cte_i                : 11 17 22 55 93 133 135 136 137 138
cte_str              : 24 95
divide               : 51
do                   : 104
else                 : 87
equals               : 42
error                : 
float                : 59
freq                 : 149
func                 : 97
globalFunc           : 1
greater              : 38
greaterEquals        : 40
id                   : 9 10 11 21 54 74 92 97 100 105 131 133 135 136 137 138 138 140 140 142 142 143 143 145 147 148 149 150 151 152 153
if                   : 86
int                  : 58
k_means              : 135
kurt                 : 153
lCurlyBracket        : 62
lParenthesis         : 52 77 86 89 97 103 104 105 131 133 135 136 137 138 140 142 143 145 147 148 149 150 151 152 153
lSqrBracket          : 11 17 80
lasso                : 131
lessThan             : 39
lessThanEquals       : 41
linear_regression    : 137
mean                 : 145
mean_abs_err         : 140
mean_sqr_err         : 142
median               : 148
median_abs_err       : 143
mini_batch           : 136
minus                : 47
mode                 : 147
not                  : 32
notEquals            : 43
or                   : 34
plus                 : 46
print                : 89
program              : 1
rCurlyBracket        : 62
rParenthesis         : 52 77 86 89 97 103 104 105 131 133 135 136 137 138 140 142 143 145 147 148 149 150 151 152 153
rSqrBracket          : 11 17 80
return               : 110
ridge                : 133
scan                 : 77
semicolon            : 1 8 75 89 105 110 131 133 135 136 137 138 140 142 143 145 147 148 149 150 151 152 153
skew                 : 152
start                : 1
stddev               : 151
string               : 60
t_series             : 138
times                : 50
var                  : 8
variance             : 150
void                 : 1 1 85
while                : 103 104

Nonterminals, with rules where they appear

ACUMULATE_R          : 11 17
ASSIGNMENT           : 65
ASSIGNMENT_A         : 74
BLOCK                : 1 86 87 97 103 104
BLOCK_A              : 62 63
BOOLEAN              : 57 96
BOOLEAN_AUX_VARS     : 25
CALCULATE_ARRAY      : 11
CONDITION            : 66
CONDITION_A          : 86
END_PROCEDURE        : 1 97
ERA                  : 105
EXP                  : 36 37 37 46 47 80 106 108
EXPLOG               : 33 34 52 75 86 103 104 110
EXPLOG_A             : 31 32
EXPRESSION           : 31 32 89 90
EXPRESSION_A         : 37
EXP_A                : 45
FACTOR               : 48 49
FILL_GOTO_MAIN       : 1
FREQUENCY            : 126
GENERATE_GOTOF_CONDITIONAL : 86 103
GENERATE_GOTO_CONDITIONAL : 87
GENERATE_GOTO_MAIN   : 5
GENERATE_QUAD_ABSOLUTE_ERROR : 140 142
GENERATE_QUAD_LASSO  : 131
GENERATE_QUAD_MEAN   : 145 147 148 149 150 151 152 153
GENERATE_QUAD_MEDIAN_ERROR : 143
GENERATE_QUAD_PRINT  : 89 90
GENERATE_QUAD_RETURN : 110
GENERATE_QUAD_RIDGE  : 133 135 136 137
GENERATE_QUAD_TIME_SERIES : 138
INCREMENT_PARAM_COUNTER : 100
ISLIST               : 21 54 74 80 92
KURTOSI              : 130
K_MEANS              : 116
LASSO                : 114
LINEAR_REGRESSION    : 118
LIST                 : 11 17
LIST_A               : 11
MEAN                 : 123
MEAN_ABSOLUTE_ERROR  : 120
MEAN_SQUARED_ERROR   : 121
MEDIAN               : 125
MEDIAN_ABSOLUTE_ERROR : 122
METHOD               : 6
METHODCALL           : 70 76
METHODCALL_A         : 105
METHODCALL_B         : 105 108
METHOD_A             : 97
MINI_BATCH_MEANS     : 117
MODE                 : 124
PARAMS               : 98 101
PARAMS_A             : 100
POP_STACK_OPERATORS  : 52
POST_CONDITIONAL_LOOP : 69
PRE_CONDITIONAL_LOOP : 68
PRINTQUADS           : 1
PROGRAM              : 0
PROGRAM_A            : 1 4
PROGRAM_B            : 5 6
PUSH_STACK_JUMPS     : 103 104
PUSH_STACK_OPERANDS  : 54 74
PUSH_STACK_OPERANDS_CONSTANT : 22 23 24 55 56 93 94 95 112 113
PUSH_STACK_OPERATORS : 38 39 40 41 42 43 46 47 50 51 52 74
READ                 : 71
READ_A               : 77
RETURN               : 73
RIDGE                : 115
SAVE_ASSIGNED_VAR    : 22 23 24
SAVE_ASSIGNED_VAR_BOOL : 26 27
SAVE_COUNTER_PARAM   : 97
SAVE_COUNTER_QUAD    : 97
SAVE_PARAM           : 100
SAVE_PARAM_TYPE      : 100
SAVE_TYPE            : 1 1 58 59 60 61 85
SAVE_VAR             : 10
SIMPLE               : 9 10
SKEWNESS             : 129
SOLVE_OFFSETS        : 81
SOLVE_OPERATION_ASSIGNMENT : 75 76
SOLVE_OPERATION_CONDITIONAL : 86
SOLVE_OPERATION_LOGIC : 31 32
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 104
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 103
SOLVE_OPERATION_RELATIONSHIP : 37
SOLVE_OPERATION_SUM_MINUS : 44 45
SOLVE_OPERATION_TIMES_DIVIDE : 48 49
STANDARD_DEVIATION   : 128
START_FUNCTION       : 1 1 97
STATEMENT            : 63
STATMETHODS          : 72
TERM                 : 44 45 50 51
TERM_A               : 49
TIME_SERIES_SPLIT    : 119
TYPE                 : 8 84 100
TYPEMETHOD           : 97
VALIDATE_FUNCTION_NAME : 105
VALIDATE_INDEX       : 80
VALIDATE_METHOD_CALL : 105
VALIDATE_NAME_ARRAY  : 11
VALIDATE_PARAMETER   : 106 108
VARCONSTAUX          : 53
VARCTE               : 77
VARCTE_AUX_VARS      : 9
VARIANCE             : 127
VARS                 : 4 13
VARS_A               : 8 15 19
VARS_B               : 8
WRITE                : 67
WRITE_A              : 89 90
empty                : 2 3 7 12 14 16 18 20 28 29 30 35 64 79 81 82 83 88 91 99 102 107 109 111 132 134 139 141 144 146 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    globalFunc      reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (156) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 156 (SAVE_TYPE -> empty .)
    start           reduce using rule 156 (SAVE_TYPE -> empty .)
    colon           reduce using rule 156 (SAVE_TYPE -> empty .)
    id              reduce using rule 156 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (155) START_FUNCTION -> . empty
    (154) empty -> .

    semicolon       reduce using rule 154 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (155) START_FUNCTION -> empty .

    semicolon       reduce using rule 155 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 155 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 155 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . GENERATE_GOTO_MAIN PROGRAM_B
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (2) GENERATE_GOTO_MAIN -> . empty
    (154) empty -> .

    var             shift and go to state 13
    func            reduce using rule 154 (empty -> .)
    void            reduce using rule 154 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    GENERATE_GOTO_MAIN             shift and go to state 12
    empty                          shift and go to state 14

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    void            shift and go to state 15


state 11

    (4) PROGRAM_A -> VARS . PROGRAM_A
    (4) PROGRAM_A -> . VARS PROGRAM_A
    (5) PROGRAM_A -> . GENERATE_GOTO_MAIN PROGRAM_B
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (2) GENERATE_GOTO_MAIN -> . empty
    (154) empty -> .

    var             shift and go to state 13
    func            reduce using rule 154 (empty -> .)
    void            reduce using rule 154 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 16
    GENERATE_GOTO_MAIN             shift and go to state 12
    empty                          shift and go to state 14

state 12

    (5) PROGRAM_A -> GENERATE_GOTO_MAIN . PROGRAM_B
    (6) PROGRAM_B -> . METHOD PROGRAM_B
    (7) PROGRAM_B -> . empty
    (97) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (154) empty -> .

    func            shift and go to state 20
    void            reduce using rule 154 (empty -> .)

    PROGRAM_B                      shift and go to state 17
    METHOD                         shift and go to state 18
    empty                          shift and go to state 19

state 13

    (8) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPE                           shift and go to state 21

state 14

    (2) GENERATE_GOTO_MAIN -> empty .

    func            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)
    void            reduce using rule 2 (GENERATE_GOTO_MAIN -> empty .)


state 15

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void . SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    start           reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 26
    empty                          shift and go to state 5

state 16

    (4) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 4 (PROGRAM_A -> VARS PROGRAM_A .)


state 17

    (5) PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B .)


state 18

    (6) PROGRAM_B -> METHOD . PROGRAM_B
    (6) PROGRAM_B -> . METHOD PROGRAM_B
    (7) PROGRAM_B -> . empty
    (97) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (154) empty -> .

    func            shift and go to state 20
    void            reduce using rule 154 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 27
    empty                          shift and go to state 19

state 19

    (7) PROGRAM_B -> empty .

    void            reduce using rule 7 (PROGRAM_B -> empty .)


state 20

    (97) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (84) TYPEMETHOD -> . TYPE
    (85) TYPEMETHOD -> . void SAVE_TYPE
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 30
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPEMETHOD                     shift and go to state 28
    TYPE                           shift and go to state 29

state 21

    (8) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 31


state 22

    (58) TYPE -> int . SAVE_TYPE
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    colon           reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 5

state 23

    (59) TYPE -> float . SAVE_TYPE
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    colon           reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (60) TYPE -> string . SAVE_TYPE
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    colon           reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (61) TYPE -> bool . SAVE_TYPE
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    colon           reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE . start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS

    start           shift and go to state 36


state 27

    (6) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 6 (PROGRAM_B -> METHOD PROGRAM_B .)


state 28

    (97) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 37


state 29

    (84) TYPEMETHOD -> TYPE .

    id              reduce using rule 84 (TYPEMETHOD -> TYPE .)


state 30

    (85) TYPEMETHOD -> void . SAVE_TYPE
    (156) SAVE_TYPE -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)

    SAVE_TYPE                      shift and go to state 38
    empty                          shift and go to state 5

state 31

    (8) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (154) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 154 (empty -> .)

    VARS_A                         shift and go to state 39
    empty                          shift and go to state 41

state 32

    (58) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 58 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 58 (TYPE -> int SAVE_TYPE .)


state 33

    (59) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 59 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 59 (TYPE -> float SAVE_TYPE .)


state 34

    (60) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 60 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 60 (TYPE -> string SAVE_TYPE .)


state 35

    (61) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 61 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 61 (TYPE -> bool SAVE_TYPE .)


state 36

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start . START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (155) START_FUNCTION -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    START_FUNCTION                 shift and go to state 42
    empty                          shift and go to state 8

state 37

    (97) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (155) START_FUNCTION -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)

    START_FUNCTION                 shift and go to state 43
    empty                          shift and go to state 8

state 38

    (85) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 85 (TYPEMETHOD -> void SAVE_TYPE .)


state 39

    (8) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 44


state 40

    (9) VARS_A -> id . assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> id . SAVE_VAR SIMPLE
    (11) VARS_A -> id . VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (157) SAVE_VAR -> . empty
    (28) VALIDATE_NAME_ARRAY -> . empty
    (154) empty -> .

    assign          shift and go to state 45
    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    lSqrBracket     reduce using rule 154 (empty -> .)

    SAVE_VAR                       shift and go to state 46
    VALIDATE_NAME_ARRAY            shift and go to state 47
    empty                          shift and go to state 48

state 41

    (12) VARS_A -> empty .

    semicolon       reduce using rule 12 (VARS_A -> empty .)


state 42

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION . FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS
    (3) FILL_GOTO_MAIN -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    FILL_GOTO_MAIN                 shift and go to state 49
    empty                          shift and go to state 50

state 43

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 51


state 44

    (8) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (13) VARS_B -> . VARS
    (14) VARS_B -> . empty
    (8) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (154) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 13
    func            reduce using rule 154 (empty -> .)
    void            reduce using rule 154 (empty -> .)

  ! var             [ reduce using rule 154 (empty -> .) ]

    VARS_B                         shift and go to state 52
    VARS                           shift and go to state 53
    empty                          shift and go to state 54

state 45

    (9) VARS_A -> id assign . VARCTE_AUX_VARS SIMPLE
    (21) VARCTE_AUX_VARS -> . id ISLIST
    (22) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (23) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (24) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (25) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (26) BOOLEAN_AUX_VARS -> . False SAVE_ASSIGNED_VAR_BOOL
    (27) BOOLEAN_AUX_VARS -> . True SAVE_ASSIGNED_VAR_BOOL

    id              shift and go to state 55
    cte_i           shift and go to state 57
    cte_f           shift and go to state 58
    cte_str         shift and go to state 59
    False           shift and go to state 61
    True            shift and go to state 62

    VARCTE_AUX_VARS                shift and go to state 56
    BOOLEAN_AUX_VARS               shift and go to state 60

state 46

    (10) VARS_A -> id SAVE_VAR . SIMPLE
    (15) SIMPLE -> . comma VARS_A
    (16) SIMPLE -> . empty
    (154) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 154 (empty -> .)

    SIMPLE                         shift and go to state 63
    empty                          shift and go to state 65

state 47

    (11) VARS_A -> id VALIDATE_NAME_ARRAY . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    lSqrBracket     shift and go to state 66


state 48

    (157) SAVE_VAR -> empty .
    (28) VALIDATE_NAME_ARRAY -> empty .

    comma           reduce using rule 157 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 157 (SAVE_VAR -> empty .)
    lSqrBracket     reduce using rule 28 (VALIDATE_NAME_ARRAY -> empty .)


state 49

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN . BLOCK END_PROCEDURE PRINTQUADS
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 67

state 50

    (3) FILL_GOTO_MAIN -> empty .

    lCurlyBracket   reduce using rule 3 (FILL_GOTO_MAIN -> empty .)


state 51

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (98) METHOD_A -> . PARAMS
    (99) METHOD_A -> . empty
    (100) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (154) empty -> .
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 154 (empty -> .)
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    METHOD_A                       shift and go to state 69
    PARAMS                         shift and go to state 70
    empty                          shift and go to state 71
    TYPE                           shift and go to state 72

state 52

    (8) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 8 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 53

    (13) VARS_B -> VARS .

    var             reduce using rule 13 (VARS_B -> VARS .)
    func            reduce using rule 13 (VARS_B -> VARS .)
    void            reduce using rule 13 (VARS_B -> VARS .)


state 54

    (14) VARS_B -> empty .

    var             reduce using rule 14 (VARS_B -> empty .)
    func            reduce using rule 14 (VARS_B -> empty .)
    void            reduce using rule 14 (VARS_B -> empty .)


state 55

    (21) VARCTE_AUX_VARS -> id . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (154) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    ISLIST                         shift and go to state 73
    empty                          shift and go to state 75

state 56

    (9) VARS_A -> id assign VARCTE_AUX_VARS . SIMPLE
    (15) SIMPLE -> . comma VARS_A
    (16) SIMPLE -> . empty
    (154) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 154 (empty -> .)

    SIMPLE                         shift and go to state 76
    empty                          shift and go to state 65

state 57

    (22) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 77
    empty                          shift and go to state 78

state 58

    (23) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 79
    empty                          shift and go to state 78

state 59

    (24) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 80
    empty                          shift and go to state 78

state 60

    (25) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 25 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 25 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 61

    (26) BOOLEAN_AUX_VARS -> False . SAVE_ASSIGNED_VAR_BOOL
    (159) SAVE_ASSIGNED_VAR_BOOL -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    SAVE_ASSIGNED_VAR_BOOL         shift and go to state 81
    empty                          shift and go to state 82

state 62

    (27) BOOLEAN_AUX_VARS -> True . SAVE_ASSIGNED_VAR_BOOL
    (159) SAVE_ASSIGNED_VAR_BOOL -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    SAVE_ASSIGNED_VAR_BOOL         shift and go to state 83
    empty                          shift and go to state 82

state 63

    (10) VARS_A -> id SAVE_VAR SIMPLE .

    semicolon       reduce using rule 10 (VARS_A -> id SAVE_VAR SIMPLE .)


state 64

    (15) SIMPLE -> comma . VARS_A
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (154) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 154 (empty -> .)

    VARS_A                         shift and go to state 84
    empty                          shift and go to state 41

state 65

    (16) SIMPLE -> empty .

    semicolon       reduce using rule 16 (SIMPLE -> empty .)


state 66

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    cte_i           shift and go to state 85


state 67

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK . END_PROCEDURE PRINTQUADS
    (164) END_PROCEDURE -> . empty
    (154) empty -> .

    $end            reduce using rule 154 (empty -> .)

    END_PROCEDURE                  shift and go to state 86
    empty                          shift and go to state 87

state 68

    (62) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (154) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (86) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (89) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (103) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (104) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (114) STATMETHODS -> . LASSO
    (115) STATMETHODS -> . RIDGE
    (116) STATMETHODS -> . K_MEANS
    (117) STATMETHODS -> . MINI_BATCH_MEANS
    (118) STATMETHODS -> . LINEAR_REGRESSION
    (119) STATMETHODS -> . TIME_SERIES_SPLIT
    (120) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (121) STATMETHODS -> . MEAN_SQUARED_ERROR
    (122) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (123) STATMETHODS -> . MEAN
    (124) STATMETHODS -> . MODE
    (125) STATMETHODS -> . MEDIAN
    (126) STATMETHODS -> . FREQUENCY
    (127) STATMETHODS -> . VARIANCE
    (128) STATMETHODS -> . STANDARD_DEVIATION
    (129) STATMETHODS -> . SKEWNESS
    (130) STATMETHODS -> . KURTOSI
    (110) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (131) LASSO -> . lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon
    (133) RIDGE -> . ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (135) K_MEANS -> . k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (136) MINI_BATCH_MEANS -> . mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (137) LINEAR_REGRESSION -> . linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (138) TIME_SERIES_SPLIT -> . t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon
    (140) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (142) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (143) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon
    (145) MEAN -> . mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (147) MODE -> . mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (148) MEDIAN -> . median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (149) FREQUENCY -> . freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (150) VARIANCE -> . variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (151) STANDARD_DEVIATION -> . stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (152) SKEWNESS -> . skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (153) KURTOSI -> . kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    rCurlyBracket   reduce using rule 154 (empty -> .)
    id              shift and go to state 100
    if              shift and go to state 101
    print           shift and go to state 102
    while           shift and go to state 103
    do              shift and go to state 104
    scan            shift and go to state 105
    return          shift and go to state 123
    lasso           shift and go to state 124
    ridge           shift and go to state 125
    k_means         shift and go to state 126
    mini_batch      shift and go to state 127
    linear_regression shift and go to state 128
    t_series        shift and go to state 129
    mean_abs_err    shift and go to state 130
    mean_sqr_err    shift and go to state 131
    median_abs_err  shift and go to state 132
    mean            shift and go to state 133
    mode            shift and go to state 134
    median          shift and go to state 135
    freq            shift and go to state 136
    variance        shift and go to state 137
    stddev          shift and go to state 138
    skew            shift and go to state 139
    kurt            shift and go to state 140

    BLOCK_A                        shift and go to state 88
    STATEMENT                      shift and go to state 89
    empty                          shift and go to state 90
    ASSIGNMENT                     shift and go to state 91
    CONDITION                      shift and go to state 92
    WRITE                          shift and go to state 93
    PRE_CONDITIONAL_LOOP           shift and go to state 94
    POST_CONDITIONAL_LOOP          shift and go to state 95
    METHODCALL                     shift and go to state 96
    READ                           shift and go to state 97
    STATMETHODS                    shift and go to state 98
    RETURN                         shift and go to state 99
    LASSO                          shift and go to state 106
    RIDGE                          shift and go to state 107
    K_MEANS                        shift and go to state 108
    MINI_BATCH_MEANS               shift and go to state 109
    LINEAR_REGRESSION              shift and go to state 110
    TIME_SERIES_SPLIT              shift and go to state 111
    MEAN_ABSOLUTE_ERROR            shift and go to state 112
    MEAN_SQUARED_ERROR             shift and go to state 113
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 114
    MEAN                           shift and go to state 115
    MODE                           shift and go to state 116
    MEDIAN                         shift and go to state 117
    FREQUENCY                      shift and go to state 118
    VARIANCE                       shift and go to state 119
    STANDARD_DEVIATION             shift and go to state 120
    SKEWNESS                       shift and go to state 121
    KURTOSI                        shift and go to state 122

state 69

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (162) SAVE_COUNTER_PARAM -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 141
    empty                          shift and go to state 142

state 70

    (98) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 98 (METHOD_A -> PARAMS .)


state 71

    (99) METHOD_A -> empty .

    rParenthesis    reduce using rule 99 (METHOD_A -> empty .)


state 72

    (100) PARAMS -> TYPE . id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 143


state 73

    (21) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 21 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 21 (VARCTE_AUX_VARS -> id ISLIST .)


state 74

    (80) ISLIST -> lSqrBracket . EXP VALIDATE_INDEX rSqrBracket ISLIST
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXP                            shift and go to state 144
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 75

    (81) ISLIST -> empty . SOLVE_OFFSETS
    (83) SOLVE_OFFSETS -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    assign          reduce using rule 154 (empty -> .)
    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    empty                          shift and go to state 155
    SOLVE_OFFSETS                  shift and go to state 156

state 76

    (9) VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .

    semicolon       reduce using rule 9 (VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .)


state 77

    (22) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (158) SAVE_ASSIGNED_VAR -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 157
    empty                          shift and go to state 158

state 78

    (171) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    comma           reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rSqrBracket     reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 171 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 79

    (23) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (158) SAVE_ASSIGNED_VAR -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 159
    empty                          shift and go to state 158

state 80

    (24) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (158) SAVE_ASSIGNED_VAR -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 160
    empty                          shift and go to state 158

state 81

    (26) BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .

    comma           reduce using rule 26 (BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .)
    semicolon       reduce using rule 26 (BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL .)


state 82

    (159) SAVE_ASSIGNED_VAR_BOOL -> empty .

    comma           reduce using rule 159 (SAVE_ASSIGNED_VAR_BOOL -> empty .)
    semicolon       reduce using rule 159 (SAVE_ASSIGNED_VAR_BOOL -> empty .)


state 83

    (27) BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .

    comma           reduce using rule 27 (BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .)
    semicolon       reduce using rule 27 (BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL .)


state 84

    (15) SIMPLE -> comma VARS_A .

    semicolon       reduce using rule 15 (SIMPLE -> comma VARS_A .)


state 85

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (29) ACUMULATE_R -> . empty
    (154) empty -> .

    rSqrBracket     reduce using rule 154 (empty -> .)

    ACUMULATE_R                    shift and go to state 161
    empty                          shift and go to state 162

state 86

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE . PRINTQUADS
    (186) PRINTQUADS -> . empty
    (154) empty -> .

    $end            reduce using rule 154 (empty -> .)

    PRINTQUADS                     shift and go to state 163
    empty                          shift and go to state 164

state 87

    (164) END_PROCEDURE -> empty .

    $end            reduce using rule 164 (END_PROCEDURE -> empty .)
    func            reduce using rule 164 (END_PROCEDURE -> empty .)
    void            reduce using rule 164 (END_PROCEDURE -> empty .)


state 88

    (62) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 165


state 89

    (63) BLOCK_A -> STATEMENT . BLOCK_A
    (63) BLOCK_A -> . STATEMENT BLOCK_A
    (64) BLOCK_A -> . empty
    (65) STATEMENT -> . ASSIGNMENT
    (66) STATEMENT -> . CONDITION
    (67) STATEMENT -> . WRITE
    (68) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (69) STATEMENT -> . POST_CONDITIONAL_LOOP
    (70) STATEMENT -> . METHODCALL
    (71) STATEMENT -> . READ
    (72) STATEMENT -> . STATMETHODS
    (73) STATEMENT -> . RETURN
    (154) empty -> .
    (74) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (86) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (89) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (103) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (104) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (77) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (114) STATMETHODS -> . LASSO
    (115) STATMETHODS -> . RIDGE
    (116) STATMETHODS -> . K_MEANS
    (117) STATMETHODS -> . MINI_BATCH_MEANS
    (118) STATMETHODS -> . LINEAR_REGRESSION
    (119) STATMETHODS -> . TIME_SERIES_SPLIT
    (120) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (121) STATMETHODS -> . MEAN_SQUARED_ERROR
    (122) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (123) STATMETHODS -> . MEAN
    (124) STATMETHODS -> . MODE
    (125) STATMETHODS -> . MEDIAN
    (126) STATMETHODS -> . FREQUENCY
    (127) STATMETHODS -> . VARIANCE
    (128) STATMETHODS -> . STANDARD_DEVIATION
    (129) STATMETHODS -> . SKEWNESS
    (130) STATMETHODS -> . KURTOSI
    (110) RETURN -> . return EXPLOG GENERATE_QUAD_RETURN semicolon
    (131) LASSO -> . lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon
    (133) RIDGE -> . ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (135) K_MEANS -> . k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (136) MINI_BATCH_MEANS -> . mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (137) LINEAR_REGRESSION -> . linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon
    (138) TIME_SERIES_SPLIT -> . t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon
    (140) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (142) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (143) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon
    (145) MEAN -> . mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (147) MODE -> . mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (148) MEDIAN -> . median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (149) FREQUENCY -> . freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (150) VARIANCE -> . variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (151) STANDARD_DEVIATION -> . stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (152) SKEWNESS -> . skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon
    (153) KURTOSI -> . kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    rCurlyBracket   reduce using rule 154 (empty -> .)
    id              shift and go to state 100
    if              shift and go to state 101
    print           shift and go to state 102
    while           shift and go to state 103
    do              shift and go to state 104
    scan            shift and go to state 105
    return          shift and go to state 123
    lasso           shift and go to state 124
    ridge           shift and go to state 125
    k_means         shift and go to state 126
    mini_batch      shift and go to state 127
    linear_regression shift and go to state 128
    t_series        shift and go to state 129
    mean_abs_err    shift and go to state 130
    mean_sqr_err    shift and go to state 131
    median_abs_err  shift and go to state 132
    mean            shift and go to state 133
    mode            shift and go to state 134
    median          shift and go to state 135
    freq            shift and go to state 136
    variance        shift and go to state 137
    stddev          shift and go to state 138
    skew            shift and go to state 139
    kurt            shift and go to state 140

    STATEMENT                      shift and go to state 89
    BLOCK_A                        shift and go to state 166
    empty                          shift and go to state 90
    ASSIGNMENT                     shift and go to state 91
    CONDITION                      shift and go to state 92
    WRITE                          shift and go to state 93
    PRE_CONDITIONAL_LOOP           shift and go to state 94
    POST_CONDITIONAL_LOOP          shift and go to state 95
    METHODCALL                     shift and go to state 96
    READ                           shift and go to state 97
    STATMETHODS                    shift and go to state 98
    RETURN                         shift and go to state 99
    LASSO                          shift and go to state 106
    RIDGE                          shift and go to state 107
    K_MEANS                        shift and go to state 108
    MINI_BATCH_MEANS               shift and go to state 109
    LINEAR_REGRESSION              shift and go to state 110
    TIME_SERIES_SPLIT              shift and go to state 111
    MEAN_ABSOLUTE_ERROR            shift and go to state 112
    MEAN_SQUARED_ERROR             shift and go to state 113
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 114
    MEAN                           shift and go to state 115
    MODE                           shift and go to state 116
    MEDIAN                         shift and go to state 117
    FREQUENCY                      shift and go to state 118
    VARIANCE                       shift and go to state 119
    STANDARD_DEVIATION             shift and go to state 120
    SKEWNESS                       shift and go to state 121
    KURTOSI                        shift and go to state 122

state 90

    (64) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 64 (BLOCK_A -> empty .)


state 91

    (65) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    lasso           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    ridge           reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    k_means         reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mini_batch      reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    linear_regression reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    t_series        reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 65 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> ASSIGNMENT .)


state 92

    (66) STATEMENT -> CONDITION .

    id              reduce using rule 66 (STATEMENT -> CONDITION .)
    if              reduce using rule 66 (STATEMENT -> CONDITION .)
    print           reduce using rule 66 (STATEMENT -> CONDITION .)
    while           reduce using rule 66 (STATEMENT -> CONDITION .)
    do              reduce using rule 66 (STATEMENT -> CONDITION .)
    scan            reduce using rule 66 (STATEMENT -> CONDITION .)
    return          reduce using rule 66 (STATEMENT -> CONDITION .)
    lasso           reduce using rule 66 (STATEMENT -> CONDITION .)
    ridge           reduce using rule 66 (STATEMENT -> CONDITION .)
    k_means         reduce using rule 66 (STATEMENT -> CONDITION .)
    mini_batch      reduce using rule 66 (STATEMENT -> CONDITION .)
    linear_regression reduce using rule 66 (STATEMENT -> CONDITION .)
    t_series        reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 66 (STATEMENT -> CONDITION .)
    mean            reduce using rule 66 (STATEMENT -> CONDITION .)
    mode            reduce using rule 66 (STATEMENT -> CONDITION .)
    median          reduce using rule 66 (STATEMENT -> CONDITION .)
    freq            reduce using rule 66 (STATEMENT -> CONDITION .)
    variance        reduce using rule 66 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 66 (STATEMENT -> CONDITION .)
    skew            reduce using rule 66 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 66 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> CONDITION .)


state 93

    (67) STATEMENT -> WRITE .

    id              reduce using rule 67 (STATEMENT -> WRITE .)
    if              reduce using rule 67 (STATEMENT -> WRITE .)
    print           reduce using rule 67 (STATEMENT -> WRITE .)
    while           reduce using rule 67 (STATEMENT -> WRITE .)
    do              reduce using rule 67 (STATEMENT -> WRITE .)
    scan            reduce using rule 67 (STATEMENT -> WRITE .)
    return          reduce using rule 67 (STATEMENT -> WRITE .)
    lasso           reduce using rule 67 (STATEMENT -> WRITE .)
    ridge           reduce using rule 67 (STATEMENT -> WRITE .)
    k_means         reduce using rule 67 (STATEMENT -> WRITE .)
    mini_batch      reduce using rule 67 (STATEMENT -> WRITE .)
    linear_regression reduce using rule 67 (STATEMENT -> WRITE .)
    t_series        reduce using rule 67 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 67 (STATEMENT -> WRITE .)
    mean            reduce using rule 67 (STATEMENT -> WRITE .)
    mode            reduce using rule 67 (STATEMENT -> WRITE .)
    median          reduce using rule 67 (STATEMENT -> WRITE .)
    freq            reduce using rule 67 (STATEMENT -> WRITE .)
    variance        reduce using rule 67 (STATEMENT -> WRITE .)
    stddev          reduce using rule 67 (STATEMENT -> WRITE .)
    skew            reduce using rule 67 (STATEMENT -> WRITE .)
    kurt            reduce using rule 67 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> WRITE .)


state 94

    (68) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    lasso           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ridge           reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    k_means         reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mini_batch      reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    linear_regression reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    t_series        reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 95

    (69) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    lasso           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ridge           reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    k_means         reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mini_batch      reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    linear_regression reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    t_series        reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 69 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 96

    (70) STATEMENT -> METHODCALL .

    id              reduce using rule 70 (STATEMENT -> METHODCALL .)
    if              reduce using rule 70 (STATEMENT -> METHODCALL .)
    print           reduce using rule 70 (STATEMENT -> METHODCALL .)
    while           reduce using rule 70 (STATEMENT -> METHODCALL .)
    do              reduce using rule 70 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 70 (STATEMENT -> METHODCALL .)
    return          reduce using rule 70 (STATEMENT -> METHODCALL .)
    lasso           reduce using rule 70 (STATEMENT -> METHODCALL .)
    ridge           reduce using rule 70 (STATEMENT -> METHODCALL .)
    k_means         reduce using rule 70 (STATEMENT -> METHODCALL .)
    mini_batch      reduce using rule 70 (STATEMENT -> METHODCALL .)
    linear_regression reduce using rule 70 (STATEMENT -> METHODCALL .)
    t_series        reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 70 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 70 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 70 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 70 (STATEMENT -> METHODCALL .)
    median          reduce using rule 70 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 70 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 70 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 70 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 70 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 70 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 70 (STATEMENT -> METHODCALL .)


state 97

    (71) STATEMENT -> READ .

    id              reduce using rule 71 (STATEMENT -> READ .)
    if              reduce using rule 71 (STATEMENT -> READ .)
    print           reduce using rule 71 (STATEMENT -> READ .)
    while           reduce using rule 71 (STATEMENT -> READ .)
    do              reduce using rule 71 (STATEMENT -> READ .)
    scan            reduce using rule 71 (STATEMENT -> READ .)
    return          reduce using rule 71 (STATEMENT -> READ .)
    lasso           reduce using rule 71 (STATEMENT -> READ .)
    ridge           reduce using rule 71 (STATEMENT -> READ .)
    k_means         reduce using rule 71 (STATEMENT -> READ .)
    mini_batch      reduce using rule 71 (STATEMENT -> READ .)
    linear_regression reduce using rule 71 (STATEMENT -> READ .)
    t_series        reduce using rule 71 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 71 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 71 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 71 (STATEMENT -> READ .)
    mean            reduce using rule 71 (STATEMENT -> READ .)
    mode            reduce using rule 71 (STATEMENT -> READ .)
    median          reduce using rule 71 (STATEMENT -> READ .)
    freq            reduce using rule 71 (STATEMENT -> READ .)
    variance        reduce using rule 71 (STATEMENT -> READ .)
    stddev          reduce using rule 71 (STATEMENT -> READ .)
    skew            reduce using rule 71 (STATEMENT -> READ .)
    kurt            reduce using rule 71 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 71 (STATEMENT -> READ .)


state 98

    (72) STATEMENT -> STATMETHODS .

    id              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 72 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    lasso           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    ridge           reduce using rule 72 (STATEMENT -> STATMETHODS .)
    k_means         reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mini_batch      reduce using rule 72 (STATEMENT -> STATMETHODS .)
    linear_regression reduce using rule 72 (STATEMENT -> STATMETHODS .)
    t_series        reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 72 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 72 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 72 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 72 (STATEMENT -> STATMETHODS .)


state 99

    (73) STATEMENT -> RETURN .

    id              reduce using rule 73 (STATEMENT -> RETURN .)
    if              reduce using rule 73 (STATEMENT -> RETURN .)
    print           reduce using rule 73 (STATEMENT -> RETURN .)
    while           reduce using rule 73 (STATEMENT -> RETURN .)
    do              reduce using rule 73 (STATEMENT -> RETURN .)
    scan            reduce using rule 73 (STATEMENT -> RETURN .)
    return          reduce using rule 73 (STATEMENT -> RETURN .)
    lasso           reduce using rule 73 (STATEMENT -> RETURN .)
    ridge           reduce using rule 73 (STATEMENT -> RETURN .)
    k_means         reduce using rule 73 (STATEMENT -> RETURN .)
    mini_batch      reduce using rule 73 (STATEMENT -> RETURN .)
    linear_regression reduce using rule 73 (STATEMENT -> RETURN .)
    t_series        reduce using rule 73 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 73 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 73 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 73 (STATEMENT -> RETURN .)
    mean            reduce using rule 73 (STATEMENT -> RETURN .)
    mode            reduce using rule 73 (STATEMENT -> RETURN .)
    median          reduce using rule 73 (STATEMENT -> RETURN .)
    freq            reduce using rule 73 (STATEMENT -> RETURN .)
    variance        reduce using rule 73 (STATEMENT -> RETURN .)
    stddev          reduce using rule 73 (STATEMENT -> RETURN .)
    skew            reduce using rule 73 (STATEMENT -> RETURN .)
    kurt            reduce using rule 73 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 73 (STATEMENT -> RETURN .)


state 100

    (74) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (105) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (170) PUSH_STACK_OPERANDS -> . empty
    (166) VALIDATE_FUNCTION_NAME -> . empty
    (154) empty -> .

    lSqrBracket     reduce using rule 154 (empty -> .)
    assign          reduce using rule 154 (empty -> .)
    lParenthesis    reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 167
    VALIDATE_FUNCTION_NAME         shift and go to state 168
    empty                          shift and go to state 169

state 101

    (86) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 170


state 102

    (89) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 171


state 103

    (103) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (182) PUSH_STACK_JUMPS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 172
    empty                          shift and go to state 173

state 104

    (104) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (182) PUSH_STACK_JUMPS -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 174
    empty                          shift and go to state 173

state 105

    (77) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 175


state 106

    (114) STATMETHODS -> LASSO .

    id              reduce using rule 114 (STATMETHODS -> LASSO .)
    if              reduce using rule 114 (STATMETHODS -> LASSO .)
    print           reduce using rule 114 (STATMETHODS -> LASSO .)
    while           reduce using rule 114 (STATMETHODS -> LASSO .)
    do              reduce using rule 114 (STATMETHODS -> LASSO .)
    scan            reduce using rule 114 (STATMETHODS -> LASSO .)
    return          reduce using rule 114 (STATMETHODS -> LASSO .)
    lasso           reduce using rule 114 (STATMETHODS -> LASSO .)
    ridge           reduce using rule 114 (STATMETHODS -> LASSO .)
    k_means         reduce using rule 114 (STATMETHODS -> LASSO .)
    mini_batch      reduce using rule 114 (STATMETHODS -> LASSO .)
    linear_regression reduce using rule 114 (STATMETHODS -> LASSO .)
    t_series        reduce using rule 114 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 114 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 114 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 114 (STATMETHODS -> LASSO .)
    mean            reduce using rule 114 (STATMETHODS -> LASSO .)
    mode            reduce using rule 114 (STATMETHODS -> LASSO .)
    median          reduce using rule 114 (STATMETHODS -> LASSO .)
    freq            reduce using rule 114 (STATMETHODS -> LASSO .)
    variance        reduce using rule 114 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 114 (STATMETHODS -> LASSO .)
    skew            reduce using rule 114 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 114 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 114 (STATMETHODS -> LASSO .)


state 107

    (115) STATMETHODS -> RIDGE .

    id              reduce using rule 115 (STATMETHODS -> RIDGE .)
    if              reduce using rule 115 (STATMETHODS -> RIDGE .)
    print           reduce using rule 115 (STATMETHODS -> RIDGE .)
    while           reduce using rule 115 (STATMETHODS -> RIDGE .)
    do              reduce using rule 115 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 115 (STATMETHODS -> RIDGE .)
    return          reduce using rule 115 (STATMETHODS -> RIDGE .)
    lasso           reduce using rule 115 (STATMETHODS -> RIDGE .)
    ridge           reduce using rule 115 (STATMETHODS -> RIDGE .)
    k_means         reduce using rule 115 (STATMETHODS -> RIDGE .)
    mini_batch      reduce using rule 115 (STATMETHODS -> RIDGE .)
    linear_regression reduce using rule 115 (STATMETHODS -> RIDGE .)
    t_series        reduce using rule 115 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 115 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 115 (STATMETHODS -> RIDGE .)
    median          reduce using rule 115 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 115 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 115 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 115 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 115 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 115 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> RIDGE .)


state 108

    (116) STATMETHODS -> K_MEANS .

    id              reduce using rule 116 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 116 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 116 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 116 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 116 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 116 (STATMETHODS -> K_MEANS .)
    lasso           reduce using rule 116 (STATMETHODS -> K_MEANS .)
    ridge           reduce using rule 116 (STATMETHODS -> K_MEANS .)
    k_means         reduce using rule 116 (STATMETHODS -> K_MEANS .)
    mini_batch      reduce using rule 116 (STATMETHODS -> K_MEANS .)
    linear_regression reduce using rule 116 (STATMETHODS -> K_MEANS .)
    t_series        reduce using rule 116 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 116 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 116 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 116 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 116 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> K_MEANS .)


state 109

    (117) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    lasso           reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    ridge           reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    k_means         reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    mini_batch      reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    linear_regression reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    t_series        reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> MINI_BATCH_MEANS .)


state 110

    (118) STATMETHODS -> LINEAR_REGRESSION .

    id              reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    if              reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    print           reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    while           reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    do              reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    scan            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    return          reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    lasso           reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    ridge           reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    k_means         reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    mini_batch      reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    linear_regression reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    t_series        reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    mean            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    mode            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    median          reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    freq            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    variance        reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    stddev          reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    skew            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    kurt            reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> LINEAR_REGRESSION .)


state 111

    (119) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    lasso           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ridge           reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    k_means         reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mini_batch      reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    linear_regression reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    t_series        reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 112

    (120) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    lasso           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ridge           reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    k_means         reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mini_batch      reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    linear_regression reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    t_series        reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 120 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 113

    (121) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    lasso           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ridge           reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    k_means         reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mini_batch      reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    linear_regression reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    t_series        reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 121 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 114

    (122) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    lasso           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ridge           reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    k_means         reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mini_batch      reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    linear_regression reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    t_series        reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 122 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 115

    (123) STATMETHODS -> MEAN .

    id              reduce using rule 123 (STATMETHODS -> MEAN .)
    if              reduce using rule 123 (STATMETHODS -> MEAN .)
    print           reduce using rule 123 (STATMETHODS -> MEAN .)
    while           reduce using rule 123 (STATMETHODS -> MEAN .)
    do              reduce using rule 123 (STATMETHODS -> MEAN .)
    scan            reduce using rule 123 (STATMETHODS -> MEAN .)
    return          reduce using rule 123 (STATMETHODS -> MEAN .)
    lasso           reduce using rule 123 (STATMETHODS -> MEAN .)
    ridge           reduce using rule 123 (STATMETHODS -> MEAN .)
    k_means         reduce using rule 123 (STATMETHODS -> MEAN .)
    mini_batch      reduce using rule 123 (STATMETHODS -> MEAN .)
    linear_regression reduce using rule 123 (STATMETHODS -> MEAN .)
    t_series        reduce using rule 123 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 123 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 123 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 123 (STATMETHODS -> MEAN .)
    mean            reduce using rule 123 (STATMETHODS -> MEAN .)
    mode            reduce using rule 123 (STATMETHODS -> MEAN .)
    median          reduce using rule 123 (STATMETHODS -> MEAN .)
    freq            reduce using rule 123 (STATMETHODS -> MEAN .)
    variance        reduce using rule 123 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 123 (STATMETHODS -> MEAN .)
    skew            reduce using rule 123 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 123 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 123 (STATMETHODS -> MEAN .)


state 116

    (124) STATMETHODS -> MODE .

    id              reduce using rule 124 (STATMETHODS -> MODE .)
    if              reduce using rule 124 (STATMETHODS -> MODE .)
    print           reduce using rule 124 (STATMETHODS -> MODE .)
    while           reduce using rule 124 (STATMETHODS -> MODE .)
    do              reduce using rule 124 (STATMETHODS -> MODE .)
    scan            reduce using rule 124 (STATMETHODS -> MODE .)
    return          reduce using rule 124 (STATMETHODS -> MODE .)
    lasso           reduce using rule 124 (STATMETHODS -> MODE .)
    ridge           reduce using rule 124 (STATMETHODS -> MODE .)
    k_means         reduce using rule 124 (STATMETHODS -> MODE .)
    mini_batch      reduce using rule 124 (STATMETHODS -> MODE .)
    linear_regression reduce using rule 124 (STATMETHODS -> MODE .)
    t_series        reduce using rule 124 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 124 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 124 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 124 (STATMETHODS -> MODE .)
    mean            reduce using rule 124 (STATMETHODS -> MODE .)
    mode            reduce using rule 124 (STATMETHODS -> MODE .)
    median          reduce using rule 124 (STATMETHODS -> MODE .)
    freq            reduce using rule 124 (STATMETHODS -> MODE .)
    variance        reduce using rule 124 (STATMETHODS -> MODE .)
    stddev          reduce using rule 124 (STATMETHODS -> MODE .)
    skew            reduce using rule 124 (STATMETHODS -> MODE .)
    kurt            reduce using rule 124 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 124 (STATMETHODS -> MODE .)


state 117

    (125) STATMETHODS -> MEDIAN .

    id              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 125 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    lasso           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    ridge           reduce using rule 125 (STATMETHODS -> MEDIAN .)
    k_means         reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mini_batch      reduce using rule 125 (STATMETHODS -> MEDIAN .)
    linear_regression reduce using rule 125 (STATMETHODS -> MEDIAN .)
    t_series        reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 125 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 125 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 125 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 125 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 125 (STATMETHODS -> MEDIAN .)


state 118

    (126) STATMETHODS -> FREQUENCY .

    id              reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    lasso           reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    ridge           reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    k_means         reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    mini_batch      reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    linear_regression reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    t_series        reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 126 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 126 (STATMETHODS -> FREQUENCY .)


state 119

    (127) STATMETHODS -> VARIANCE .

    id              reduce using rule 127 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 127 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 127 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 127 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 127 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 127 (STATMETHODS -> VARIANCE .)
    lasso           reduce using rule 127 (STATMETHODS -> VARIANCE .)
    ridge           reduce using rule 127 (STATMETHODS -> VARIANCE .)
    k_means         reduce using rule 127 (STATMETHODS -> VARIANCE .)
    mini_batch      reduce using rule 127 (STATMETHODS -> VARIANCE .)
    linear_regression reduce using rule 127 (STATMETHODS -> VARIANCE .)
    t_series        reduce using rule 127 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 127 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 127 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 127 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 127 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 127 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 127 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 127 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 127 (STATMETHODS -> VARIANCE .)


state 120

    (128) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    lasso           reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    ridge           reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    k_means         reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    mini_batch      reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    linear_regression reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    t_series        reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 128 (STATMETHODS -> STANDARD_DEVIATION .)


state 121

    (129) STATMETHODS -> SKEWNESS .

    id              reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    lasso           reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    ridge           reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    k_means         reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    mini_batch      reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    linear_regression reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    t_series        reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 129 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 129 (STATMETHODS -> SKEWNESS .)


state 122

    (130) STATMETHODS -> KURTOSI .

    id              reduce using rule 130 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 130 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 130 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 130 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 130 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 130 (STATMETHODS -> KURTOSI .)
    lasso           reduce using rule 130 (STATMETHODS -> KURTOSI .)
    ridge           reduce using rule 130 (STATMETHODS -> KURTOSI .)
    k_means         reduce using rule 130 (STATMETHODS -> KURTOSI .)
    mini_batch      reduce using rule 130 (STATMETHODS -> KURTOSI .)
    linear_regression reduce using rule 130 (STATMETHODS -> KURTOSI .)
    t_series        reduce using rule 130 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 130 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 130 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 130 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 130 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 130 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 130 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 130 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 130 (STATMETHODS -> KURTOSI .)


state 123

    (110) RETURN -> return . EXPLOG GENERATE_QUAD_RETURN semicolon
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 176
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 124

    (131) LASSO -> lasso . lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon

    lParenthesis    shift and go to state 180


state 125

    (133) RIDGE -> ridge . lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    lParenthesis    shift and go to state 181


state 126

    (135) K_MEANS -> k_means . lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    lParenthesis    shift and go to state 182


state 127

    (136) MINI_BATCH_MEANS -> mini_batch . lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    lParenthesis    shift and go to state 183


state 128

    (137) LINEAR_REGRESSION -> linear_regression . lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    lParenthesis    shift and go to state 184


state 129

    (138) TIME_SERIES_SPLIT -> t_series . lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    lParenthesis    shift and go to state 185


state 130

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    lParenthesis    shift and go to state 186


state 131

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    lParenthesis    shift and go to state 187


state 132

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon

    lParenthesis    shift and go to state 188


state 133

    (145) MEAN -> mean . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 189


state 134

    (147) MODE -> mode . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 190


state 135

    (148) MEDIAN -> median . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 191


state 136

    (149) FREQUENCY -> freq . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 192


state 137

    (150) VARIANCE -> variance . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 193


state 138

    (151) STANDARD_DEVIATION -> stddev . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 194


state 139

    (152) SKEWNESS -> skew . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 195


state 140

    (153) KURTOSI -> kurt . lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon

    lParenthesis    shift and go to state 196


state 141

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 197


state 142

    (162) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 162 (SAVE_COUNTER_PARAM -> empty .)


state 143

    (100) PARAMS -> TYPE id . SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (160) SAVE_PARAM -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    SAVE_PARAM                     shift and go to state 198
    empty                          shift and go to state 199

state 144

    (80) ISLIST -> lSqrBracket EXP . VALIDATE_INDEX rSqrBracket ISLIST
    (82) VALIDATE_INDEX -> . empty
    (154) empty -> .

    rSqrBracket     reduce using rule 154 (empty -> .)

    VALIDATE_INDEX                 shift and go to state 200
    empty                          shift and go to state 201

state 145

    (44) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (174) SOLVE_OPERATION_SUM_MINUS -> . empty
    (154) empty -> .

    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 202
    empty                          shift and go to state 203

state 146

    (48) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (175) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 204
    empty                          shift and go to state 205

state 147

    (52) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    not             reduce using rule 154 (empty -> .)
    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 206
    empty                          shift and go to state 207

state 148

    (53) FACTOR -> VARCONSTAUX .

    times           reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 53 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 53 (FACTOR -> VARCONSTAUX .)


state 149

    (54) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (170) PUSH_STACK_OPERANDS -> . empty
    (154) empty -> .

    lSqrBracket     reduce using rule 154 (empty -> .)
    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 208
    empty                          shift and go to state 209

state 150

    (55) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 210
    empty                          shift and go to state 78

state 151

    (56) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 211
    empty                          shift and go to state 78

state 152

    (57) VARCONSTAUX -> BOOLEAN .

    times           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    divide          reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    plus            reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    minus           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    rSqrBracket     reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    greater         reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    lessThan        reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    greaterEquals   reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    lessThanEquals  reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    equals          reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    notEquals       reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    and             reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    or              reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    semicolon       reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    rParenthesis    reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)
    comma           reduce using rule 57 (VARCONSTAUX -> BOOLEAN .)


state 153

    (112) BOOLEAN -> False . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 212
    empty                          shift and go to state 78

state 154

    (113) BOOLEAN -> True . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 213
    empty                          shift and go to state 78

state 155

    (83) SOLVE_OFFSETS -> empty .

    comma           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    semicolon       reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    assign          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    times           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    divide          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    plus            reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    minus           reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    rSqrBracket     reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    greater         reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    lessThan        reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    greaterEquals   reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    lessThanEquals  reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    equals          reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    notEquals       reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    and             reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    or              reduce using rule 83 (SOLVE_OFFSETS -> empty .)
    rParenthesis    reduce using rule 83 (SOLVE_OFFSETS -> empty .)


state 156

    (81) ISLIST -> empty SOLVE_OFFSETS .

    comma           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    semicolon       reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    assign          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    times           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    divide          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    plus            reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    minus           reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    rSqrBracket     reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    greater         reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThan        reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    greaterEquals   reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThanEquals  reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    equals          reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    notEquals       reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    and             reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    or              reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)
    rParenthesis    reduce using rule 81 (ISLIST -> empty SOLVE_OFFSETS .)


state 157

    (22) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 22 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 22 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 158

    (158) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 158 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 158 (SAVE_ASSIGNED_VAR -> empty .)


state 159

    (23) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 160

    (24) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 24 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 24 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 161

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST CALCULATE_ARRAY LIST_A

    rSqrBracket     shift and go to state 214


state 162

    (29) ACUMULATE_R -> empty .

    rSqrBracket     reduce using rule 29 (ACUMULATE_R -> empty .)


state 163

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS .)


state 164

    (186) PRINTQUADS -> empty .

    $end            reduce using rule 186 (PRINTQUADS -> empty .)


state 165

    (62) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    lasso           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ridge           reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    k_means         reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mini_batch      reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    linear_regression reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    t_series        reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 62 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 166

    (63) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 63 (BLOCK_A -> STATEMENT BLOCK_A .)


state 167

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (154) empty -> .

    lSqrBracket     shift and go to state 74
    assign          reduce using rule 154 (empty -> .)

    ISLIST                         shift and go to state 215
    empty                          shift and go to state 75

state 168

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (167) ERA -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)

    ERA                            shift and go to state 216
    empty                          shift and go to state 217

state 169

    (170) PUSH_STACK_OPERANDS -> empty .
    (166) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 166 (VALIDATE_FUNCTION_NAME -> empty .)


state 170

    (86) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 218
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 171

    (89) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPRESSION                     shift and go to state 219
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 172

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 220


state 173

    (182) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 182 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 182 (PUSH_STACK_JUMPS -> empty .)


state 174

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 221

state 175

    (77) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (92) VARCTE -> . id ISLIST
    (93) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (94) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (95) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (96) VARCTE -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 223
    cte_i           shift and go to state 224
    cte_f           shift and go to state 225
    cte_str         shift and go to state 226
    False           shift and go to state 153
    True            shift and go to state 154

    VARCTE                         shift and go to state 222
    BOOLEAN                        shift and go to state 227

state 176

    (110) RETURN -> return EXPLOG . GENERATE_QUAD_RETURN semicolon
    (111) GENERATE_QUAD_RETURN -> . empty
    (154) empty -> .

    semicolon       reduce using rule 154 (empty -> .)

    GENERATE_QUAD_RETURN           shift and go to state 228
    empty                          shift and go to state 229

state 177

    (31) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG_A -> . and EXPLOG
    (34) EXPLOG_A -> . or EXPLOG
    (35) EXPLOG_A -> . empty
    (154) empty -> .

    and             shift and go to state 231
    or              shift and go to state 232
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    EXPLOG_A                       shift and go to state 230
    empty                          shift and go to state 233

state 178

    (32) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPRESSION                     shift and go to state 234
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 179

    (36) EXPRESSION -> EXP .
    (37) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (38) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (39) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (40) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (41) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (42) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (43) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 36 (EXPRESSION -> EXP .)
    or              reduce using rule 36 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 36 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 36 (EXPRESSION -> EXP .)
    comma           reduce using rule 36 (EXPRESSION -> EXP .)
    greater         shift and go to state 236
    lessThan        shift and go to state 237
    greaterEquals   shift and go to state 238
    lessThanEquals  shift and go to state 239
    equals          shift and go to state 240
    notEquals       shift and go to state 241

    EXPRESSION_A                   shift and go to state 235

state 180

    (131) LASSO -> lasso lParenthesis . id GENERATE_QUAD_LASSO rParenthesis semicolon

    id              shift and go to state 242


state 181

    (133) RIDGE -> ridge lParenthesis . id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    id              shift and go to state 243


state 182

    (135) K_MEANS -> k_means lParenthesis . id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    id              shift and go to state 244


state 183

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis . id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    id              shift and go to state 245


state 184

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis . id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    id              shift and go to state 246


state 185

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis . id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    id              shift and go to state 247


state 186

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    id              shift and go to state 248


state 187

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    id              shift and go to state 249


state 188

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon

    id              shift and go to state 250


state 189

    (145) MEAN -> mean lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 251


state 190

    (147) MODE -> mode lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 252


state 191

    (148) MEDIAN -> median lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 253


state 192

    (149) FREQUENCY -> freq lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 254


state 193

    (150) VARIANCE -> variance lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 255


state 194

    (151) STANDARD_DEVIATION -> stddev lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 256


state 195

    (152) SKEWNESS -> skew lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 257


state 196

    (153) KURTOSI -> kurt lParenthesis . id GENERATE_QUAD_MEAN rParenthesis semicolon

    id              shift and go to state 258


state 197

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (163) SAVE_COUNTER_QUAD -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 259
    empty                          shift and go to state 260

state 198

    (100) PARAMS -> TYPE id SAVE_PARAM . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (165) SAVE_PARAM_TYPE -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 261
    empty                          shift and go to state 262

state 199

    (160) SAVE_PARAM -> empty .

    comma           reduce using rule 160 (SAVE_PARAM -> empty .)
    rParenthesis    reduce using rule 160 (SAVE_PARAM -> empty .)


state 200

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX . rSqrBracket ISLIST

    rSqrBracket     shift and go to state 263


state 201

    (82) VALIDATE_INDEX -> empty .

    rSqrBracket     reduce using rule 82 (VALIDATE_INDEX -> empty .)


state 202

    (44) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (46) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (47) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    rSqrBracket     reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greater         reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 265
    minus           shift and go to state 266

    EXP_A                          shift and go to state 264

state 203

    (174) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 174 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 204

    (48) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (50) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (51) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 268
    divide          shift and go to state 269

    TERM_A                         shift and go to state 267

state 205

    (175) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 175 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 206

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 270
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 207

    (172) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    False           reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)
    True            reduce using rule 172 (PUSH_STACK_OPERATORS -> empty .)


state 208

    (54) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (154) empty -> .

    lSqrBracket     shift and go to state 74
    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    ISLIST                         shift and go to state 271
    empty                          shift and go to state 75

state 209

    (170) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)


state 210

    (55) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 55 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 211

    (56) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 56 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 212

    (112) BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 112 (BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT .)


state 213

    (113) BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 113 (BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT .)


state 214

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST CALCULATE_ARRAY LIST_A
    (17) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (18) LIST -> . empty
    (154) empty -> .

    lSqrBracket     shift and go to state 272
    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    LIST                           shift and go to state 273
    empty                          shift and go to state 274

state 215

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS ASSIGNMENT_A

    assign          shift and go to state 275


state 216

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 276


state 217

    (167) ERA -> empty .

    lParenthesis    reduce using rule 167 (ERA -> empty .)


state 218

    (86) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 277


state 219

    (89) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (185) GENERATE_QUAD_PRINT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 278
    empty                          shift and go to state 279

state 220

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 280
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 221

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 281


state 222

    (77) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (78) READ_A -> . comma
    (79) READ_A -> . empty
    (154) empty -> .

    comma           shift and go to state 283
    rParenthesis    reduce using rule 154 (empty -> .)

    READ_A                         shift and go to state 282
    empty                          shift and go to state 284

state 223

    (92) VARCTE -> id . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (154) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    ISLIST                         shift and go to state 285
    empty                          shift and go to state 75

state 224

    (93) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 286
    empty                          shift and go to state 78

state 225

    (94) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 287
    empty                          shift and go to state 78

state 226

    (95) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (171) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 288
    empty                          shift and go to state 78

state 227

    (96) VARCTE -> BOOLEAN .

    comma           reduce using rule 96 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 96 (VARCTE -> BOOLEAN .)


state 228

    (110) RETURN -> return EXPLOG GENERATE_QUAD_RETURN . semicolon

    semicolon       shift and go to state 289


state 229

    (111) GENERATE_QUAD_RETURN -> empty .

    semicolon       reduce using rule 111 (GENERATE_QUAD_RETURN -> empty .)


state 230

    (31) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (177) SOLVE_OPERATION_LOGIC -> . empty
    (154) empty -> .

    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 290
    empty                          shift and go to state 291

state 231

    (33) EXPLOG_A -> and . EXPLOG
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 292
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 232

    (34) EXPLOG_A -> or . EXPLOG
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 293
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 233

    (35) EXPLOG_A -> empty .

    semicolon       reduce using rule 35 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 35 (EXPLOG_A -> empty .)


state 234

    (32) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (33) EXPLOG_A -> . and EXPLOG
    (34) EXPLOG_A -> . or EXPLOG
    (35) EXPLOG_A -> . empty
    (154) empty -> .

    and             shift and go to state 231
    or              shift and go to state 232
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    EXPLOG_A                       shift and go to state 294
    empty                          shift and go to state 233

state 235

    (37) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXP                            shift and go to state 295
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 236

    (38) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 296
    empty                          shift and go to state 207

state 237

    (39) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 297
    empty                          shift and go to state 207

state 238

    (40) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 298
    empty                          shift and go to state 207

state 239

    (41) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 299
    empty                          shift and go to state 207

state 240

    (42) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 300
    empty                          shift and go to state 207

state 241

    (43) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 301
    empty                          shift and go to state 207

state 242

    (131) LASSO -> lasso lParenthesis id . GENERATE_QUAD_LASSO rParenthesis semicolon
    (132) GENERATE_QUAD_LASSO -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_LASSO            shift and go to state 302
    empty                          shift and go to state 303

state 243

    (133) RIDGE -> ridge lParenthesis id . comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    comma           shift and go to state 304


state 244

    (135) K_MEANS -> k_means lParenthesis id . comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    comma           shift and go to state 305


state 245

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id . comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    comma           shift and go to state 306


state 246

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id . comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    comma           shift and go to state 307


state 247

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id . comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    comma           shift and go to state 308


state 248

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    comma           shift and go to state 309


state 249

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    comma           shift and go to state 310


state 250

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon

    comma           shift and go to state 311


state 251

    (145) MEAN -> mean lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 312
    empty                          shift and go to state 313

state 252

    (147) MODE -> mode lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 314
    empty                          shift and go to state 313

state 253

    (148) MEDIAN -> median lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 315
    empty                          shift and go to state 313

state 254

    (149) FREQUENCY -> freq lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 316
    empty                          shift and go to state 313

state 255

    (150) VARIANCE -> variance lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 317
    empty                          shift and go to state 313

state 256

    (151) STANDARD_DEVIATION -> stddev lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 318
    empty                          shift and go to state 313

state 257

    (152) SKEWNESS -> skew lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 319
    empty                          shift and go to state 313

state 258

    (153) KURTOSI -> kurt lParenthesis id . GENERATE_QUAD_MEAN rParenthesis semicolon
    (146) GENERATE_QUAD_MEAN -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEAN             shift and go to state 320
    empty                          shift and go to state 313

state 259

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 321

state 260

    (163) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 163 (SAVE_COUNTER_QUAD -> empty .)


state 261

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (161) INCREMENT_PARAM_COUNTER -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 322
    empty                          shift and go to state 323

state 262

    (165) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 165 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 165 (SAVE_PARAM_TYPE -> empty .)


state 263

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket . ISLIST
    (80) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (81) ISLIST -> . empty SOLVE_OFFSETS
    (154) empty -> .

    lSqrBracket     shift and go to state 74
    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    assign          reduce using rule 154 (empty -> .)
    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    ISLIST                         shift and go to state 324
    empty                          shift and go to state 75

state 264

    (45) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    rSqrBracket     reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greater         reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 45 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 265

    (46) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 325
    empty                          shift and go to state 207

state 266

    (47) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 326
    empty                          shift and go to state 207

state 267

    (49) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 49 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 268

    (50) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 327
    empty                          shift and go to state 207

state 269

    (51) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 328
    empty                          shift and go to state 207

state 270

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 329


state 271

    (54) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 54 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 272

    (17) LIST -> lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST

    cte_i           shift and go to state 330


state 273

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST . CALCULATE_ARRAY LIST_A
    (30) CALCULATE_ARRAY -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    CALCULATE_ARRAY                shift and go to state 331
    empty                          shift and go to state 332

state 274

    (18) LIST -> empty .

    comma           reduce using rule 18 (LIST -> empty .)
    semicolon       reduce using rule 18 (LIST -> empty .)


state 275

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS ASSIGNMENT_A
    (172) PUSH_STACK_OPERATORS -> . empty
    (154) empty -> .

    not             reduce using rule 154 (empty -> .)
    id              reduce using rule 154 (empty -> .)
    lParenthesis    reduce using rule 154 (empty -> .)
    cte_i           reduce using rule 154 (empty -> .)
    cte_f           reduce using rule 154 (empty -> .)
    False           reduce using rule 154 (empty -> .)
    True            reduce using rule 154 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 333
    empty                          shift and go to state 207

state 276

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (106) METHODCALL_A -> . EXP VALIDATE_PARAMETER
    (107) METHODCALL_A -> . empty
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (154) empty -> .
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    METHODCALL_A                   shift and go to state 334
    EXP                            shift and go to state 335
    empty                          shift and go to state 336
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 277

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (179) GENERATE_GOTOF_CONDITIONAL -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 337
    empty                          shift and go to state 338

state 278

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (90) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (91) WRITE_A -> . empty
    (154) empty -> .

    comma           shift and go to state 340
    rParenthesis    reduce using rule 154 (empty -> .)

    WRITE_A                        shift and go to state 339
    empty                          shift and go to state 341

state 279

    (185) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 185 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 185 (GENERATE_QUAD_PRINT -> empty .)


state 280

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 342


state 281

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 343


state 282

    (77) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 344


state 283

    (78) READ_A -> comma .

    rParenthesis    reduce using rule 78 (READ_A -> comma .)


state 284

    (79) READ_A -> empty .

    rParenthesis    reduce using rule 79 (READ_A -> empty .)


state 285

    (92) VARCTE -> id ISLIST .

    comma           reduce using rule 92 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 92 (VARCTE -> id ISLIST .)


state 286

    (93) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 93 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 93 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 287

    (94) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 94 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 94 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 288

    (95) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 95 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 95 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 289

    (110) RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .

    id              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    if              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    print           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    while           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    do              reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    scan            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    return          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    lasso           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    ridge           reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    k_means         reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mini_batch      reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    linear_regression reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    t_series        reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_abs_err    reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean_sqr_err    reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median_abs_err  reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mean            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    mode            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    median          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    freq            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    variance        reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    stddev          reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    skew            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    kurt            reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)
    rCurlyBracket   reduce using rule 110 (RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon .)


state 290

    (31) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 31 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 31 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 291

    (177) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 177 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 177 (SOLVE_OPERATION_LOGIC -> empty .)


state 292

    (33) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 33 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 33 (EXPLOG_A -> and EXPLOG .)


state 293

    (34) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 34 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 34 (EXPLOG_A -> or EXPLOG .)


state 294

    (32) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (177) SOLVE_OPERATION_LOGIC -> . empty
    (154) empty -> .

    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 345
    empty                          shift and go to state 291

state 295

    (37) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (176) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (154) empty -> .

    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 346
    empty                          shift and go to state 347

state 296

    (38) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    False           reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    True            reduce using rule 38 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 297

    (39) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    False           reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    True            reduce using rule 39 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 298

    (40) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 40 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 299

    (41) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 41 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 300

    (42) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    False           reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    True            reduce using rule 42 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 301

    (43) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    False           reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    True            reduce using rule 43 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 302

    (131) LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO . rParenthesis semicolon

    rParenthesis    shift and go to state 348


state 303

    (132) GENERATE_QUAD_LASSO -> empty .

    rParenthesis    reduce using rule 132 (GENERATE_QUAD_LASSO -> empty .)


state 304

    (133) RIDGE -> ridge lParenthesis id comma . cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    cte_i           shift and go to state 349


state 305

    (135) K_MEANS -> k_means lParenthesis id comma . cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    cte_i           shift and go to state 350


state 306

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id comma . cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    cte_i           shift and go to state 351


state 307

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id comma . cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon

    cte_i           shift and go to state 352


state 308

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma . id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    id              shift and go to state 353


state 309

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    id              shift and go to state 354


state 310

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon

    id              shift and go to state 355


state 311

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon

    id              shift and go to state 356


state 312

    (145) MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 357


state 313

    (146) GENERATE_QUAD_MEAN -> empty .

    rParenthesis    reduce using rule 146 (GENERATE_QUAD_MEAN -> empty .)


state 314

    (147) MODE -> mode lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 358


state 315

    (148) MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 359


state 316

    (149) FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 360


state 317

    (150) VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 361


state 318

    (151) STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 362


state 319

    (152) SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 363


state 320

    (153) KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 364


state 321

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (164) END_PROCEDURE -> . empty
    (154) empty -> .

    func            reduce using rule 154 (empty -> .)
    void            reduce using rule 154 (empty -> .)

    END_PROCEDURE                  shift and go to state 365
    empty                          shift and go to state 87

state 322

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (101) PARAMS_A -> . comma PARAMS
    (102) PARAMS_A -> . empty
    (154) empty -> .

    comma           shift and go to state 367
    rParenthesis    reduce using rule 154 (empty -> .)

    PARAMS_A                       shift and go to state 366
    empty                          shift and go to state 368

state 323

    (161) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 161 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 161 (INCREMENT_PARAM_COUNTER -> empty .)


state 324

    (80) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .

    comma           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    semicolon       reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    assign          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    times           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    divide          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    plus            reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    minus           reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rSqrBracket     reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greater         reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThan        reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greaterEquals   reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThanEquals  reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    equals          reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    notEquals       reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    and             reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    or              reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rParenthesis    reduce using rule 80 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)


state 325

    (46) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXP                            shift and go to state 369
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 326

    (47) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXP                            shift and go to state 370
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 327

    (50) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    TERM                           shift and go to state 371
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 328

    (51) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    TERM                           shift and go to state 372
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 329

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (173) POP_STACK_OPERATORS -> . empty
    (154) empty -> .

    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    rSqrBracket     reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)
    comma           reduce using rule 154 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 373
    empty                          shift and go to state 374

state 330

    (17) LIST -> lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST
    (29) ACUMULATE_R -> . empty
    (154) empty -> .

    rSqrBracket     reduce using rule 154 (empty -> .)

    ACUMULATE_R                    shift and go to state 375
    empty                          shift and go to state 162

state 331

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY . LIST_A
    (19) LIST_A -> . comma VARS_A
    (20) LIST_A -> . empty
    (154) empty -> .

    comma           shift and go to state 377
    semicolon       reduce using rule 154 (empty -> .)

    LIST_A                         shift and go to state 376
    empty                          shift and go to state 378

state 332

    (30) CALCULATE_ARRAY -> empty .

    comma           reduce using rule 30 (CALCULATE_ARRAY -> empty .)
    semicolon       reduce using rule 30 (CALCULATE_ARRAY -> empty .)


state 333

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . ASSIGNMENT_A
    (75) ASSIGNMENT_A -> . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (76) ASSIGNMENT_A -> . METHODCALL SOLVE_OPERATION_ASSIGNMENT
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (105) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    id              shift and go to state 379
    lParenthesis    shift and go to state 147
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    ASSIGNMENT_A                   shift and go to state 380
    EXPLOG                         shift and go to state 381
    METHODCALL                     shift and go to state 382
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 334

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A . METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (108) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (109) METHODCALL_B -> . empty
    (154) empty -> .

    comma           shift and go to state 384
    rParenthesis    reduce using rule 154 (empty -> .)

    METHODCALL_B                   shift and go to state 383
    empty                          shift and go to state 385

state 335

    (106) METHODCALL_A -> EXP . VALIDATE_PARAMETER
    (168) VALIDATE_PARAMETER -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 386
    empty                          shift and go to state 387

state 336

    (107) METHODCALL_A -> empty .

    comma           reduce using rule 107 (METHODCALL_A -> empty .)
    rParenthesis    reduce using rule 107 (METHODCALL_A -> empty .)


state 337

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 388

state 338

    (179) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 179 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 339

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 389


state 340

    (90) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPRESSION                     shift and go to state 390
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 341

    (91) WRITE_A -> empty .

    rParenthesis    reduce using rule 91 (WRITE_A -> empty .)


state 342

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (179) GENERATE_GOTOF_CONDITIONAL -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 391
    empty                          shift and go to state 338

state 343

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (31) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (36) EXPRESSION -> . EXP
    (37) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 178
    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXPLOG                         shift and go to state 392
    EXPRESSION                     shift and go to state 177
    EXP                            shift and go to state 179
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 344

    (77) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    lasso           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ridge           reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    k_means         reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mini_batch      reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    linear_regression reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    t_series        reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 77 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 345

    (32) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 32 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 32 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 346

    (37) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 37 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 347

    (176) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 176 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 176 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 176 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 176 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 176 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 348

    (131) LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis . semicolon

    semicolon       shift and go to state 393


state 349

    (133) RIDGE -> ridge lParenthesis id comma cte_i . GENERATE_QUAD_RIDGE rParenthesis semicolon
    (134) GENERATE_QUAD_RIDGE -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_RIDGE            shift and go to state 394
    empty                          shift and go to state 395

state 350

    (135) K_MEANS -> k_means lParenthesis id comma cte_i . GENERATE_QUAD_RIDGE rParenthesis semicolon
    (134) GENERATE_QUAD_RIDGE -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_RIDGE            shift and go to state 396
    empty                          shift and go to state 395

state 351

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i . GENERATE_QUAD_RIDGE rParenthesis semicolon
    (134) GENERATE_QUAD_RIDGE -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_RIDGE            shift and go to state 397
    empty                          shift and go to state 395

state 352

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i . GENERATE_QUAD_RIDGE rParenthesis semicolon
    (134) GENERATE_QUAD_RIDGE -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_RIDGE            shift and go to state 398
    empty                          shift and go to state 395

state 353

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id . comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    comma           shift and go to state 399


state 354

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (141) GENERATE_QUAD_ABSOLUTE_ERROR -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_ABSOLUTE_ERROR   shift and go to state 400
    empty                          shift and go to state 401

state 355

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon
    (141) GENERATE_QUAD_ABSOLUTE_ERROR -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_ABSOLUTE_ERROR   shift and go to state 402
    empty                          shift and go to state 401

state 356

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon
    (144) GENERATE_QUAD_MEDIAN_ERROR -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_MEDIAN_ERROR     shift and go to state 403
    empty                          shift and go to state 404

state 357

    (145) MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 405


state 358

    (147) MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 406


state 359

    (148) MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 407


state 360

    (149) FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 408


state 361

    (150) VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 409


state 362

    (151) STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 410


state 363

    (152) SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 411


state 364

    (153) KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis . semicolon

    semicolon       shift and go to state 412


state 365

    (97) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 97 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 97 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 366

    (100) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 100 (PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 367

    (101) PARAMS_A -> comma . PARAMS
    (100) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (58) TYPE -> . int SAVE_TYPE
    (59) TYPE -> . float SAVE_TYPE
    (60) TYPE -> . string SAVE_TYPE
    (61) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    PARAMS                         shift and go to state 413
    TYPE                           shift and go to state 72

state 368

    (102) PARAMS_A -> empty .

    rParenthesis    reduce using rule 102 (PARAMS_A -> empty .)


state 369

    (46) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 46 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 370

    (47) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    rSqrBracket     reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greater         reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 47 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 371

    (50) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 50 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 372

    (51) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 51 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 373

    (52) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 52 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 374

    (173) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 173 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 173 (POP_STACK_OPERATORS -> empty .)


state 375

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST

    rSqrBracket     shift and go to state 414


state 376

    (11) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .

    semicolon       reduce using rule 11 (VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .)


state 377

    (19) LIST_A -> comma . VARS_A
    (9) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (10) VARS_A -> . id SAVE_VAR SIMPLE
    (11) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (12) VARS_A -> . empty
    (154) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 154 (empty -> .)

    VARS_A                         shift and go to state 415
    empty                          shift and go to state 41

state 378

    (20) LIST_A -> empty .

    semicolon       reduce using rule 20 (LIST_A -> empty .)


state 379

    (105) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL
    (54) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (166) VALIDATE_FUNCTION_NAME -> . empty
    (170) PUSH_STACK_OPERANDS -> . empty
    (154) empty -> .

    lParenthesis    reduce using rule 154 (empty -> .)
    lSqrBracket     reduce using rule 154 (empty -> .)
    times           reduce using rule 154 (empty -> .)
    divide          reduce using rule 154 (empty -> .)
    plus            reduce using rule 154 (empty -> .)
    minus           reduce using rule 154 (empty -> .)
    greater         reduce using rule 154 (empty -> .)
    lessThan        reduce using rule 154 (empty -> .)
    greaterEquals   reduce using rule 154 (empty -> .)
    lessThanEquals  reduce using rule 154 (empty -> .)
    equals          reduce using rule 154 (empty -> .)
    notEquals       reduce using rule 154 (empty -> .)
    and             reduce using rule 154 (empty -> .)
    or              reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    VALIDATE_FUNCTION_NAME         shift and go to state 168
    PUSH_STACK_OPERANDS            shift and go to state 208
    empty                          shift and go to state 416

state 380

    (74) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .

    id              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    if              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    print           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    while           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    do              reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    scan            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    return          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    lasso           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    ridge           reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    k_means         reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mini_batch      reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    linear_regression reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    t_series        reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_abs_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean_sqr_err    reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median_abs_err  reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mean            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    mode            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    median          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    freq            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    variance        reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    stddev          reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    skew            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    kurt            reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)
    rCurlyBracket   reduce using rule 74 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A .)


state 381

    (75) ASSIGNMENT_A -> EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (178) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (154) empty -> .

    semicolon       reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 417
    empty                          shift and go to state 418

state 382

    (76) ASSIGNMENT_A -> METHODCALL . SOLVE_OPERATION_ASSIGNMENT
    (178) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 419
    empty                          shift and go to state 418

state 383

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 420


state 384

    (108) METHODCALL_B -> comma . EXP VALIDATE_PARAMETER METHODCALL_B
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (45) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (49) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (52) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (53) FACTOR -> . VARCONSTAUX
    (54) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (55) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (56) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (57) VARCONSTAUX -> . BOOLEAN
    (112) BOOLEAN -> . False PUSH_STACK_OPERANDS_CONSTANT
    (113) BOOLEAN -> . True PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 147
    id              shift and go to state 149
    cte_i           shift and go to state 150
    cte_f           shift and go to state 151
    False           shift and go to state 153
    True            shift and go to state 154

    EXP                            shift and go to state 421
    TERM                           shift and go to state 145
    FACTOR                         shift and go to state 146
    VARCONSTAUX                    shift and go to state 148
    BOOLEAN                        shift and go to state 152

state 385

    (109) METHODCALL_B -> empty .

    rParenthesis    reduce using rule 109 (METHODCALL_B -> empty .)


state 386

    (106) METHODCALL_A -> EXP VALIDATE_PARAMETER .

    comma           reduce using rule 106 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)
    rParenthesis    reduce using rule 106 (METHODCALL_A -> EXP VALIDATE_PARAMETER .)


state 387

    (168) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 168 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 168 (VALIDATE_PARAMETER -> empty .)


state 388

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (87) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (88) CONDITION_A -> . empty
    (154) empty -> .

    else            shift and go to state 423
    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    CONDITION_A                    shift and go to state 422
    empty                          shift and go to state 424

state 389

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 425


state 390

    (90) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (185) GENERATE_QUAD_PRINT -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 426
    empty                          shift and go to state 279

state 391

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 427

state 392

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 428


state 393

    (131) LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .

    id              reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    if              reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    print           reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    while           reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    do              reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    scan            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    return          reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    lasso           reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    ridge           reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    k_means         reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    mini_batch      reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    linear_regression reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    t_series        reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    mean_abs_err    reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    median_abs_err  reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    mean            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    mode            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    median          reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    freq            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    variance        reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    stddev          reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    skew            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    kurt            reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 131 (LASSO -> lasso lParenthesis id GENERATE_QUAD_LASSO rParenthesis semicolon .)


state 394

    (133) RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE . rParenthesis semicolon

    rParenthesis    shift and go to state 429


state 395

    (134) GENERATE_QUAD_RIDGE -> empty .

    rParenthesis    reduce using rule 134 (GENERATE_QUAD_RIDGE -> empty .)


state 396

    (135) K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE . rParenthesis semicolon

    rParenthesis    shift and go to state 430


state 397

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE . rParenthesis semicolon

    rParenthesis    shift and go to state 431


state 398

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE . rParenthesis semicolon

    rParenthesis    shift and go to state 432


state 399

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma . cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon

    cte_i           shift and go to state 433


state 400

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR . rParenthesis semicolon

    rParenthesis    shift and go to state 434


state 401

    (141) GENERATE_QUAD_ABSOLUTE_ERROR -> empty .

    rParenthesis    reduce using rule 141 (GENERATE_QUAD_ABSOLUTE_ERROR -> empty .)


state 402

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR . rParenthesis semicolon

    rParenthesis    shift and go to state 435


state 403

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR . rParenthesis semicolon

    rParenthesis    shift and go to state 436


state 404

    (144) GENERATE_QUAD_MEDIAN_ERROR -> empty .

    rParenthesis    reduce using rule 144 (GENERATE_QUAD_MEDIAN_ERROR -> empty .)


state 405

    (145) MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 145 (MEAN -> mean lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 406

    (147) MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 147 (MODE -> mode lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 407

    (148) MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 148 (MEDIAN -> median lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 408

    (149) FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 149 (FREQUENCY -> freq lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 409

    (150) VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 150 (VARIANCE -> variance lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 410

    (151) STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 151 (STANDARD_DEVIATION -> stddev lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 411

    (152) SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 152 (SKEWNESS -> skew lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 412

    (153) KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .

    id              reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    if              reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    print           reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    while           reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    do              reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    scan            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    return          reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    lasso           reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    ridge           reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    k_means         reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mini_batch      reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    linear_regression reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    t_series        reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mean            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    mode            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    median          reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    freq            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    variance        reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    stddev          reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    skew            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    kurt            reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 153 (KURTOSI -> kurt lParenthesis id GENERATE_QUAD_MEAN rParenthesis semicolon .)


state 413

    (101) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 101 (PARAMS_A -> comma PARAMS .)


state 414

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST
    (17) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (18) LIST -> . empty
    (154) empty -> .

    lSqrBracket     shift and go to state 272
    comma           reduce using rule 154 (empty -> .)
    semicolon       reduce using rule 154 (empty -> .)

    LIST                           shift and go to state 437
    empty                          shift and go to state 274

state 415

    (19) LIST_A -> comma VARS_A .

    semicolon       reduce using rule 19 (LIST_A -> comma VARS_A .)


state 416

    (166) VALIDATE_FUNCTION_NAME -> empty .
    (170) PUSH_STACK_OPERANDS -> empty .

    lParenthesis    reduce using rule 166 (VALIDATE_FUNCTION_NAME -> empty .)
    lSqrBracket     reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 170 (PUSH_STACK_OPERANDS -> empty .)


state 417

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 438


state 418

    (178) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    id              reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    if              reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    print           reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    while           reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    do              reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    scan            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    return          reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    lasso           reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    ridge           reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    k_means         reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mini_batch      reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    linear_regression reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    t_series        reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean_abs_err    reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean_sqr_err    reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    median_abs_err  reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mean            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    mode            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    median          reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    freq            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    variance        reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    stddev          reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    skew            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    kurt            reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)
    rCurlyBracket   reduce using rule 178 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 419

    (76) ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .

    id              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    if              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    print           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    while           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    do              reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    scan            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    return          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    lasso           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    ridge           reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    k_means         reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mini_batch      reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    linear_regression reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    t_series        reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean_abs_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean_sqr_err    reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    median_abs_err  reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mean            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    mode            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    median          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    freq            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    variance        reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    stddev          reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    skew            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    kurt            reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)
    rCurlyBracket   reduce using rule 76 (ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT .)


state 420

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 439


state 421

    (108) METHODCALL_B -> comma EXP . VALIDATE_PARAMETER METHODCALL_B
    (168) VALIDATE_PARAMETER -> . empty
    (154) empty -> .

    comma           reduce using rule 154 (empty -> .)
    rParenthesis    reduce using rule 154 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 440
    empty                          shift and go to state 387

state 422

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (180) SOLVE_OPERATION_CONDITIONAL -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 441
    empty                          shift and go to state 442

state 423

    (87) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (181) GENERATE_GOTO_CONDITIONAL -> . empty
    (154) empty -> .

    lCurlyBracket   reduce using rule 154 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 443
    empty                          shift and go to state 444

state 424

    (88) CONDITION_A -> empty .

    id              reduce using rule 88 (CONDITION_A -> empty .)
    if              reduce using rule 88 (CONDITION_A -> empty .)
    print           reduce using rule 88 (CONDITION_A -> empty .)
    while           reduce using rule 88 (CONDITION_A -> empty .)
    do              reduce using rule 88 (CONDITION_A -> empty .)
    scan            reduce using rule 88 (CONDITION_A -> empty .)
    return          reduce using rule 88 (CONDITION_A -> empty .)
    lasso           reduce using rule 88 (CONDITION_A -> empty .)
    ridge           reduce using rule 88 (CONDITION_A -> empty .)
    k_means         reduce using rule 88 (CONDITION_A -> empty .)
    mini_batch      reduce using rule 88 (CONDITION_A -> empty .)
    linear_regression reduce using rule 88 (CONDITION_A -> empty .)
    t_series        reduce using rule 88 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 88 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 88 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 88 (CONDITION_A -> empty .)
    mean            reduce using rule 88 (CONDITION_A -> empty .)
    mode            reduce using rule 88 (CONDITION_A -> empty .)
    median          reduce using rule 88 (CONDITION_A -> empty .)
    freq            reduce using rule 88 (CONDITION_A -> empty .)
    variance        reduce using rule 88 (CONDITION_A -> empty .)
    stddev          reduce using rule 88 (CONDITION_A -> empty .)
    skew            reduce using rule 88 (CONDITION_A -> empty .)
    kurt            reduce using rule 88 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 88 (CONDITION_A -> empty .)


state 425

    (89) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    lasso           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ridge           reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    k_means         reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mini_batch      reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    linear_regression reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    t_series        reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 89 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 426

    (90) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (90) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (91) WRITE_A -> . empty
    (154) empty -> .

    comma           shift and go to state 340
    rParenthesis    reduce using rule 154 (empty -> .)

    WRITE_A                        shift and go to state 445
    empty                          shift and go to state 341

state 427

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (183) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 446
    empty                          shift and go to state 447

state 428

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (184) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 448
    empty                          shift and go to state 449

state 429

    (133) RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis . semicolon

    semicolon       shift and go to state 450


state 430

    (135) K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis . semicolon

    semicolon       shift and go to state 451


state 431

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis . semicolon

    semicolon       shift and go to state 452


state 432

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis . semicolon

    semicolon       shift and go to state 453


state 433

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i . GENERATE_QUAD_TIME_SERIES rParenthesis semicolon
    (139) GENERATE_QUAD_TIME_SERIES -> . empty
    (154) empty -> .

    rParenthesis    reduce using rule 154 (empty -> .)

    GENERATE_QUAD_TIME_SERIES      shift and go to state 454
    empty                          shift and go to state 455

state 434

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis . semicolon

    semicolon       shift and go to state 456


state 435

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis . semicolon

    semicolon       shift and go to state 457


state 436

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis . semicolon

    semicolon       shift and go to state 458


state 437

    (17) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .

    comma           reduce using rule 17 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)
    semicolon       reduce using rule 17 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)


state 438

    (75) ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    lasso           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ridge           reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    k_means         reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mini_batch      reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    linear_regression reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    t_series        reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 75 (ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 439

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon . VALIDATE_METHOD_CALL
    (169) VALIDATE_METHOD_CALL -> . empty
    (154) empty -> .

    id              reduce using rule 154 (empty -> .)
    if              reduce using rule 154 (empty -> .)
    print           reduce using rule 154 (empty -> .)
    while           reduce using rule 154 (empty -> .)
    do              reduce using rule 154 (empty -> .)
    scan            reduce using rule 154 (empty -> .)
    return          reduce using rule 154 (empty -> .)
    lasso           reduce using rule 154 (empty -> .)
    ridge           reduce using rule 154 (empty -> .)
    k_means         reduce using rule 154 (empty -> .)
    mini_batch      reduce using rule 154 (empty -> .)
    linear_regression reduce using rule 154 (empty -> .)
    t_series        reduce using rule 154 (empty -> .)
    mean_abs_err    reduce using rule 154 (empty -> .)
    mean_sqr_err    reduce using rule 154 (empty -> .)
    median_abs_err  reduce using rule 154 (empty -> .)
    mean            reduce using rule 154 (empty -> .)
    mode            reduce using rule 154 (empty -> .)
    median          reduce using rule 154 (empty -> .)
    freq            reduce using rule 154 (empty -> .)
    variance        reduce using rule 154 (empty -> .)
    stddev          reduce using rule 154 (empty -> .)
    skew            reduce using rule 154 (empty -> .)
    kurt            reduce using rule 154 (empty -> .)
    rCurlyBracket   reduce using rule 154 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 459
    empty                          shift and go to state 460

state 440

    (108) METHODCALL_B -> comma EXP VALIDATE_PARAMETER . METHODCALL_B
    (108) METHODCALL_B -> . comma EXP VALIDATE_PARAMETER METHODCALL_B
    (109) METHODCALL_B -> . empty
    (154) empty -> .

    comma           shift and go to state 384
    rParenthesis    reduce using rule 154 (empty -> .)

    METHODCALL_B                   shift and go to state 461
    empty                          shift and go to state 385

state 441

    (86) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    lasso           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ridge           reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    k_means         reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mini_batch      reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    linear_regression reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    t_series        reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 86 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 442

    (180) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    lasso           reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ridge           reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    k_means         reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mini_batch      reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    linear_regression reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    t_series        reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 180 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 443

    (87) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (62) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 68

    BLOCK                          shift and go to state 462

state 444

    (181) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 181 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 445

    (90) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 90 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 446

    (103) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    lasso           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ridge           reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    k_means         reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mini_batch      reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    linear_regression reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    t_series        reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 103 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 447

    (183) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    lasso           reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ridge           reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    k_means         reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mini_batch      reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    linear_regression reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    t_series        reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 183 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 448

    (104) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    lasso           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ridge           reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    k_means         reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mini_batch      reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    linear_regression reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    t_series        reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 104 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 449

    (184) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    lasso           reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ridge           reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    k_means         reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mini_batch      reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    linear_regression reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    t_series        reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 184 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 450

    (133) RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .

    id              reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    if              reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    print           reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    while           reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    do              reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    scan            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    return          reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    lasso           reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    ridge           reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    k_means         reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mini_batch      reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    linear_regression reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    t_series        reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mode            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median          reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    freq            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    variance        reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    stddev          reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    skew            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    kurt            reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (RIDGE -> ridge lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)


state 451

    (135) K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .

    id              reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    if              reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    print           reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    while           reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    do              reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    scan            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    return          reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    lasso           reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    ridge           reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    k_means         reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mini_batch      reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    linear_regression reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    t_series        reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_abs_err    reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median_abs_err  reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mode            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median          reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    freq            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    variance        reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    stddev          reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    skew            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    kurt            reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 135 (K_MEANS -> k_means lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)


state 452

    (136) MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .

    id              reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    if              reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    print           reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    while           reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    do              reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    scan            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    return          reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    lasso           reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    ridge           reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    k_means         reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mini_batch      reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    linear_regression reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    t_series        reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_abs_err    reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median_abs_err  reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mode            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median          reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    freq            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    variance        reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    stddev          reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    skew            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    kurt            reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 136 (MINI_BATCH_MEANS -> mini_batch lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)


state 453

    (137) LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .

    id              reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    if              reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    print           reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    while           reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    do              reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    scan            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    return          reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    lasso           reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    ridge           reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    k_means         reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mini_batch      reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    linear_regression reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    t_series        reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_abs_err    reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median_abs_err  reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mean            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    mode            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    median          reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    freq            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    variance        reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    stddev          reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    skew            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    kurt            reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 137 (LINEAR_REGRESSION -> linear_regression lParenthesis id comma cte_i GENERATE_QUAD_RIDGE rParenthesis semicolon .)


state 454

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES . rParenthesis semicolon

    rParenthesis    shift and go to state 463


state 455

    (139) GENERATE_QUAD_TIME_SERIES -> empty .

    rParenthesis    reduce using rule 139 (GENERATE_QUAD_TIME_SERIES -> empty .)


state 456

    (140) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .

    id              reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    if              reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    print           reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    while           reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    do              reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    scan            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    return          reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    lasso           reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    ridge           reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    k_means         reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mini_batch      reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    linear_regression reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    t_series        reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean_abs_err    reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    median_abs_err  reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mode            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    median          reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    freq            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    variance        reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    stddev          reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    skew            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    kurt            reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 140 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)


state 457

    (142) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .

    id              reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    if              reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    print           reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    while           reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    do              reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    scan            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    return          reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    lasso           reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    ridge           reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    k_means         reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mini_batch      reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    linear_regression reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    t_series        reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean_abs_err    reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    median_abs_err  reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mean            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    mode            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    median          reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    freq            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    variance        reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    stddev          reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    skew            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    kurt            reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 142 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id GENERATE_QUAD_ABSOLUTE_ERROR rParenthesis semicolon .)


state 458

    (143) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .

    id              reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    if              reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    print           reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    while           reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    do              reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    scan            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    return          reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    lasso           reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    ridge           reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    k_means         reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    mini_batch      reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    linear_regression reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    t_series        reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    mean_abs_err    reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    median_abs_err  reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    mean            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    mode            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    median          reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    freq            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    variance        reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    stddev          reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    skew            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    kurt            reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 143 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id GENERATE_QUAD_MEDIAN_ERROR rParenthesis semicolon .)


state 459

    (105) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    lasso           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ridge           reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    k_means         reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mini_batch      reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    linear_regression reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    t_series        reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 105 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 460

    (169) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    lasso           reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    ridge           reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    k_means         reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    mini_batch      reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    linear_regression reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    t_series        reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 169 (VALIDATE_METHOD_CALL -> empty .)


state 461

    (108) METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .

    rParenthesis    reduce using rule 108 (METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B .)


state 462

    (87) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    lasso           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ridge           reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    k_means         reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mini_batch      reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    linear_regression reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    t_series        reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 87 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 463

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis . semicolon

    semicolon       shift and go to state 464


state 464

    (138) TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .

    id              reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    if              reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    print           reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    while           reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    do              reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    scan            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    return          reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    lasso           reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    ridge           reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    k_means         reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    mini_batch      reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    linear_regression reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    t_series        reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    mean_abs_err    reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    median_abs_err  reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    mean            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    mode            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    median          reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    freq            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    variance        reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    stddev          reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    skew            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    kurt            reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 138 (TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma cte_i GENERATE_QUAD_TIME_SERIES rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 44 resolved as shift
