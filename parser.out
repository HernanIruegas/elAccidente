Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
Rule 2     PROGRAM_A -> VARS PROGRAM_A
Rule 3     PROGRAM_A -> METHOD PROGRAM_B
Rule 4     PROGRAM_A -> empty
Rule 5     PROGRAM_B -> METHOD PROGRAM_B
Rule 6     PROGRAM_B -> empty
Rule 7     VARS -> var VARS_A
Rule 8     VARS_A -> TYPE colon VARS_B semicolon VARS_C
Rule 9     VARS_B -> SIMPLE
Rule 10    VARS_B -> LIST
Rule 11    VARS_C -> VARS_A
Rule 12    VARS_C -> empty
Rule 13    SIMPLE -> id SAVE_VAR SIMPLE_A
Rule 14    SIMPLE_A -> comma SIMPLE
Rule 15    SIMPLE_A -> empty
Rule 16    LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
Rule 17    LIST_A -> comma LIST
Rule 18    LIST_A -> empty
Rule 19    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 20    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 21    EXPLOG_A -> and EXPLOG
Rule 22    EXPLOG_A -> or EXPLOG
Rule 23    EXPLOG_A -> empty
Rule 24    EXPRESSION -> EXP
Rule 25    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 26    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 27    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 28    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 29    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 30    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 31    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 32    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 33    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 34    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 35    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 36    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 37    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 38    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 39    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 40    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 41    FACTOR -> VARCONSTAUX
Rule 42    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 43    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 44    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 45    TYPE -> int SAVE_TYPE
Rule 46    TYPE -> float SAVE_TYPE
Rule 47    TYPE -> string SAVE_TYPE
Rule 48    TYPE -> bool SAVE_TYPE
Rule 49    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 50    BLOCK_A -> STATEMENT BLOCK_A
Rule 51    BLOCK_A -> empty
Rule 52    STATEMENT -> ASSIGNMENT
Rule 53    STATEMENT -> CONDITION
Rule 54    STATEMENT -> WRITE
Rule 55    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 56    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 57    STATEMENT -> METHODCALL
Rule 58    STATEMENT -> READ
Rule 59    STATEMENT -> STATMETHODS
Rule 60    STATEMENT -> RETURN
Rule 61    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 62    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 63    READ_A -> comma
Rule 64    READ_A -> empty
Rule 65    ISLIST -> lSqrBracket EXP rSqrBracket
Rule 66    ISLIST -> empty
Rule 67    TYPEMETHOD -> TYPE
Rule 68    TYPEMETHOD -> void SAVE_TYPE
Rule 69    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 70    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 71    CONDITION_A -> empty
Rule 72    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 73    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 74    WRITE_A -> empty
Rule 75    VARCTE -> id ISLIST
Rule 76    VARCTE -> cte_i
Rule 77    VARCTE -> cte_f
Rule 78    VARCTE -> cte_str
Rule 79    VARCTE -> BOOLEAN
Rule 80    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 81    METHOD_A -> PARAMS
Rule 82    METHOD_A -> empty
Rule 83    PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 84    PARAMS_A -> comma PARAMS
Rule 85    PARAMS_A -> empty
Rule 86    PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 87    POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 88    METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 89    METHODCALL_A -> comma EXP
Rule 90    METHODCALL_A -> empty
Rule 91    RETURN -> return EXPLOG semicolon
Rule 92    BOOLEAN -> FALSE
Rule 93    BOOLEAN -> TRUE
Rule 94    STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 95    STATMETHODS -> LASSO
Rule 96    STATMETHODS -> RIDGE
Rule 97    STATMETHODS -> K_MEANS
Rule 98    STATMETHODS -> MINI_BATCH_MEANS
Rule 99    STATMETHODS -> TIME_SERIES_SPLIT
Rule 100   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 101   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 102   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 103   STATMETHODS -> MEAN
Rule 104   STATMETHODS -> MODE
Rule 105   STATMETHODS -> MEDIAN
Rule 106   STATMETHODS -> PROBABILITY
Rule 107   STATMETHODS -> FREQUENCY
Rule 108   STATMETHODS -> VARIANCE
Rule 109   STATMETHODS -> STANDARD_DEVIATION
Rule 110   STATMETHODS -> SKEWNESS
Rule 111   STATMETHODS -> KURTOSI
Rule 112   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 113   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 114   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 115   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 116   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 117   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 118   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 119   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 120   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 121   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 122   MEAN_A -> comma id MEAN_A
Rule 123   MEAN_A -> empty
Rule 124   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 125   MODE_A -> comma id MODE_A
Rule 126   MODE_A -> empty
Rule 127   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 128   MEDIAN_A -> comma id MEDIAN_A
Rule 129   MEDIAN_A -> empty
Rule 130   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 131   PROBABILITY_A -> comma id PROBABILITY_A
Rule 132   PROBABILITY_A -> empty
Rule 133   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 134   FREQUENCY_A -> comma id FREQUENCY_A
Rule 135   FREQUENCY_A -> empty
Rule 136   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 137   VARIANCE_A -> comma id VARIANCE_A
Rule 138   VARIANCE_A -> empty
Rule 139   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 140   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 141   STANDARD_DEVIATION_A -> empty
Rule 142   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 143   SKEWNESS_A -> comma id SKEWNESS_A
Rule 144   SKEWNESS_A -> empty
Rule 145   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 146   KURTOSI_A -> comma id KURTOSI_A
Rule 147   KURTOSI_A -> empty
Rule 148   empty -> <empty>
Rule 149   START_FUNCTION -> empty
Rule 150   SAVE_TYPE -> empty
Rule 151   SAVE_VAR -> empty
Rule 152   SAVE_ARRAY -> empty
Rule 153   INCREMENT_PARAM_COUNTER -> empty
Rule 154   SAVE_COUNTER_PARAM -> empty
Rule 155   SAVE_COUNTER_QUAD -> empty
Rule 156   END_PROCEDURE -> empty
Rule 157   SAVE_PARAM_TYPE -> empty
Rule 158   VALIDATE_FUNCTION_NAME -> empty
Rule 159   ERA -> empty
Rule 160   VALIDATE_PARAMETER -> empty
Rule 161   VALIDATE_METHOD_CALL -> empty
Rule 162   PUSH_STACK_OPERANDS -> empty
Rule 163   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 164   PUSH_STACK_OPERATORS -> empty
Rule 165   POP_STACK_OPERATORS -> empty
Rule 166   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 167   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 168   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 169   SOLVE_OPERATION_LOGIC -> empty
Rule 170   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 171   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 172   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 173   GENERATE_GOTO_CONDITIONAL -> empty
Rule 174   PUSH_STACK_JUMPS -> empty
Rule 175   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 176   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 177   GENERATE_QUAD_PRINT -> empty
Rule 178   PRINTQUADS -> empty

Terminals, with rules where they appear

FALSE                : 92
TRUE                 : 93
and                  : 21
assign               : 61
bool                 : 48
colon                : 8
comma                : 14 17 63 73 84 89 112 112 112 112 112 113 113 113 113 113 113 113 113 113 113 113 113 114 114 114 114 114 114 114 114 114 115 115 115 115 115 115 115 115 115 115 116 116 116 116 116 116 116 116 116 116 116 117 118 119 120 122 125 128 131 134 137 140 143 146
cte_f                : 44 77
cte_i                : 43 76
cte_str              : 78
divide               : 39
do                   : 87
else                 : 70
equals               : 30
error                : 
float                : 46 113
freq                 : 133
func                 : 80
globalFunc           : 1
greater              : 26
greaterEquals        : 28
id                   : 13 16 42 61 75 80 83 88 112 112 113 113 114 114 118 118 119 119 120 120 121 122 124 125 127 128 130 131 133 134 136 137 139 140 142 143 145 146
if                   : 69
int                  : 45
kmeans               : 115
kurt                 : 145
lCurlyBracket        : 49
lParenthesis         : 40 62 69 72 80 86 87 88 112 113 114 115 116 117 118 119 120 121 124 127 130 133 136 139 142 145
lSqrBracket          : 16 65
las                  : 113
lessThan             : 27
lessThanEquals       : 29
mbm                  : 116
mean                 : 121
mean_abs_err         : 118
mean_sqr_err         : 119
median               : 127
median_abs_err       : 120
minus                : 35
mode                 : 124
not                  : 20
notEquals            : 31
ols                  : 112
or                   : 22
plus                 : 34
print                : 72
prob                 : 130
program              : 1
rCurlyBracket        : 49
rParenthesis         : 40 62 69 72 80 86 87 88 112 113 114 115 116 117 118 119 120 121 124 127 130 133 136 139 142 145
rSqrBracket          : 16 65
return               : 91
rid                  : 114
scan                 : 62
semicolon            : 1 8 61 72 88 91 112 113 114 115 116 117 118 119 120 121 124 127 130 133 136 139 142 145
skew                 : 142
start                : 1
stddev               : 139
string               : 47 113 114 115 115 115 116
times                : 38
tseries              : 117
var                  : 7
variance             : 136
void                 : 1 1 68
while                : 86 87

Nonterminals, with rules where they appear

ASSIGNMENT           : 52
BLOCK                : 1 69 70 80 86 87
BLOCK_A              : 49 50
BOOLEAN              : 79 112 112 112 113 113 113 113 113 113 114 114 114 115 116 116
CONDITION            : 53
CONDITION_A          : 69
END_PROCEDURE        : 80
ERA                  : 88
EXP                  : 24 25 25 34 35 65 88 89
EXPLOG               : 21 22 40 61 69 86 87 91
EXPLOG_A             : 19 20
EXPRESSION           : 19 20 72 73
EXPRESSION_A         : 25
EXP_A                : 33
FACTOR               : 36 37
FREQUENCY            : 107
FREQUENCY_A          : 133 134
GENERATE_GOTOF_CONDITIONAL : 69 86
GENERATE_GOTO_CONDITIONAL : 70
GENERATE_QUAD_PRINT  : 72 73
INCREMENT_PARAM_COUNTER : 83
ISLIST               : 42 61 75
KURTOSI              : 111
KURTOSI_A            : 145 146
K_MEANS              : 97
LASSO                : 95
LIST                 : 10 17
LIST_A               : 16
MEAN                 : 103
MEAN_A               : 121 122
MEAN_ABSOLUTE_ERROR  : 100
MEAN_SQUARED_ERROR   : 101
MEDIAN               : 105
MEDIAN_A             : 127 128
MEDIAN_ABSOLUTE_ERROR : 102
METHOD               : 3 5
METHODCALL           : 57
METHODCALL_A         : 88
METHOD_A             : 80
MINI_BATCH_MEANS     : 98
MODE                 : 104
MODE_A               : 124 125
ORDINARY_LEAST_SQUARES : 94
PARAMS               : 81 84
PARAMS_A             : 83
POP_STACK_OPERATORS  : 40
POST_CONDITIONAL_LOOP : 56
PRE_CONDITIONAL_LOOP : 55
PRINTQUADS           : 1
PROBABILITY          : 106
PROBABILITY_A        : 130 131
PROGRAM              : 0
PROGRAM_A            : 1 2
PROGRAM_B            : 3 5
PUSH_STACK_JUMPS     : 86 87
PUSH_STACK_OPERANDS  : 42 61
PUSH_STACK_OPERANDS_CONSTANT : 43 44
PUSH_STACK_OPERATORS : 26 27 28 29 30 31 34 35 38 39 40 61
READ                 : 58
READ_A               : 62
RETURN               : 60
RIDGE                : 96
SAVE_ARRAY           : 16
SAVE_COUNTER_PARAM   : 80
SAVE_COUNTER_QUAD    : 80
SAVE_PARAM_TYPE      : 83
SAVE_TYPE            : 1 1 45 46 47 48 68
SAVE_VAR             : 13 83
SIMPLE               : 9 14
SIMPLE_A             : 13
SKEWNESS             : 110
SKEWNESS_A           : 142 143
SOLVE_OPERATION_ASSIGNMENT : 61
SOLVE_OPERATION_CONDITIONAL : 69
SOLVE_OPERATION_LOGIC : 19 20
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 87
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 86
SOLVE_OPERATION_RELATIONSHIP : 25
SOLVE_OPERATION_SUM_MINUS : 32 33
SOLVE_OPERATION_TIMES_DIVIDE : 36 37
STANDARD_DEVIATION   : 109
STANDARD_DEVIATION_A : 139 140
START_FUNCTION       : 1 1 80
STATEMENT            : 50
STATMETHODS          : 59
TERM                 : 32 33 38 39
TERM_A               : 37
TIME_SERIES_SPLIT    : 99
TYPE                 : 8 67 83
TYPEMETHOD           : 80
VALIDATE_FUNCTION_NAME : 88
VALIDATE_METHOD_CALL : 88
VALIDATE_PARAMETER   : 88
VARCONSTAUX          : 16 41 112 113 113 113 114 114 114 114 115 115 115 115 115 115 115 116 116 116 116 116 116 116 116 116 117 117
VARCTE               : 62
VARIANCE             : 108
VARIANCE_A           : 136 137
VARS                 : 2
VARS_A               : 7 11
VARS_B               : 8
VARS_C               : 8
WRITE                : 54
WRITE_A              : 72 73
empty                : 4 6 12 15 18 23 51 64 66 71 74 82 85 90 123 126 129 132 135 138 141 144 147 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    globalFunc      reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (150) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 150 (SAVE_TYPE -> empty .)
    start           reduce using rule 150 (SAVE_TYPE -> empty .)
    colon           reduce using rule 150 (SAVE_TYPE -> empty .)
    id              reduce using rule 150 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (149) START_FUNCTION -> . empty
    (148) empty -> .

    semicolon       reduce using rule 148 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (149) START_FUNCTION -> empty .

    semicolon       reduce using rule 149 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 149 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 149 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var VARS_A
    (80) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (148) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 148 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 16


state 11

    (2) PROGRAM_A -> VARS . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var VARS_A
    (80) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (148) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 148 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 17
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 12

    (3) PROGRAM_A -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (80) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (148) empty -> .

    func            shift and go to state 15
    void            reduce using rule 148 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 19
    empty                          shift and go to state 20

state 13

    (4) PROGRAM_A -> empty .

    void            reduce using rule 4 (PROGRAM_A -> empty .)


state 14

    (7) VARS -> var . VARS_A
    (8) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (45) TYPE -> . int SAVE_TYPE
    (46) TYPE -> . float SAVE_TYPE
    (47) TYPE -> . string SAVE_TYPE
    (48) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    VARS_A                         shift and go to state 21
    TYPE                           shift and go to state 22

state 15

    (80) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (67) TYPEMETHOD -> . TYPE
    (68) TYPEMETHOD -> . void SAVE_TYPE
    (45) TYPE -> . int SAVE_TYPE
    (46) TYPE -> . float SAVE_TYPE
    (47) TYPE -> . string SAVE_TYPE
    (48) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 29
    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    TYPEMETHOD                     shift and go to state 27
    TYPE                           shift and go to state 28

state 16

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void . SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    start           reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 30
    empty                          shift and go to state 5

state 17

    (2) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 2 (PROGRAM_A -> VARS PROGRAM_A .)


state 18

    (5) PROGRAM_B -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (80) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (148) empty -> .

    func            shift and go to state 15
    void            reduce using rule 148 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 31
    empty                          shift and go to state 20

state 19

    (3) PROGRAM_A -> METHOD PROGRAM_B .

    void            reduce using rule 3 (PROGRAM_A -> METHOD PROGRAM_B .)


state 20

    (6) PROGRAM_B -> empty .

    void            reduce using rule 6 (PROGRAM_B -> empty .)


state 21

    (7) VARS -> var VARS_A .

    var             reduce using rule 7 (VARS -> var VARS_A .)
    func            reduce using rule 7 (VARS -> var VARS_A .)
    void            reduce using rule 7 (VARS -> var VARS_A .)


state 22

    (8) VARS_A -> TYPE . colon VARS_B semicolon VARS_C

    colon           shift and go to state 32


state 23

    (45) TYPE -> int . SAVE_TYPE
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    colon           reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (46) TYPE -> float . SAVE_TYPE
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    colon           reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (47) TYPE -> string . SAVE_TYPE
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    colon           reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (48) TYPE -> bool . SAVE_TYPE
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    colon           reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 36
    empty                          shift and go to state 5

state 27

    (80) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 37


state 28

    (67) TYPEMETHOD -> TYPE .

    id              reduce using rule 67 (TYPEMETHOD -> TYPE .)


state 29

    (68) TYPEMETHOD -> void . SAVE_TYPE
    (150) SAVE_TYPE -> . empty
    (148) empty -> .

    id              reduce using rule 148 (empty -> .)

    SAVE_TYPE                      shift and go to state 38
    empty                          shift and go to state 5

state 30

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE . start START_FUNCTION BLOCK PRINTQUADS

    start           shift and go to state 39


state 31

    (5) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_B -> METHOD PROGRAM_B .)


state 32

    (8) VARS_A -> TYPE colon . VARS_B semicolon VARS_C
    (9) VARS_B -> . SIMPLE
    (10) VARS_B -> . LIST
    (13) SIMPLE -> . id SAVE_VAR SIMPLE_A
    (16) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 43

    VARS_B                         shift and go to state 40
    SIMPLE                         shift and go to state 41
    LIST                           shift and go to state 42

state 33

    (45) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 45 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 45 (TYPE -> int SAVE_TYPE .)


state 34

    (46) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 46 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 46 (TYPE -> float SAVE_TYPE .)


state 35

    (47) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 47 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 47 (TYPE -> string SAVE_TYPE .)


state 36

    (48) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 48 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 48 (TYPE -> bool SAVE_TYPE .)


state 37

    (80) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (149) START_FUNCTION -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)

    START_FUNCTION                 shift and go to state 44
    empty                          shift and go to state 8

state 38

    (68) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 68 (TYPEMETHOD -> void SAVE_TYPE .)


state 39

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start . START_FUNCTION BLOCK PRINTQUADS
    (149) START_FUNCTION -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    START_FUNCTION                 shift and go to state 45
    empty                          shift and go to state 8

state 40

    (8) VARS_A -> TYPE colon VARS_B . semicolon VARS_C

    semicolon       shift and go to state 46


state 41

    (9) VARS_B -> SIMPLE .

    semicolon       reduce using rule 9 (VARS_B -> SIMPLE .)


state 42

    (10) VARS_B -> LIST .

    semicolon       reduce using rule 10 (VARS_B -> LIST .)


state 43

    (13) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (16) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (151) SAVE_VAR -> . empty
    (148) empty -> .

    lSqrBracket     shift and go to state 48
    comma           reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)

    SAVE_VAR                       shift and go to state 47
    empty                          shift and go to state 49

state 44

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 50


state 45

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION . BLOCK PRINTQUADS
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 51

state 46

    (8) VARS_A -> TYPE colon VARS_B semicolon . VARS_C
    (11) VARS_C -> . VARS_A
    (12) VARS_C -> . empty
    (8) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (148) empty -> .
    (45) TYPE -> . int SAVE_TYPE
    (46) TYPE -> . float SAVE_TYPE
    (47) TYPE -> . string SAVE_TYPE
    (48) TYPE -> . bool SAVE_TYPE

    var             reduce using rule 148 (empty -> .)
    func            reduce using rule 148 (empty -> .)
    void            reduce using rule 148 (empty -> .)
    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    TYPE                           shift and go to state 22
    VARS_C                         shift and go to state 53
    VARS_A                         shift and go to state 54
    empty                          shift and go to state 55

state 47

    (13) SIMPLE -> id SAVE_VAR . SIMPLE_A
    (14) SIMPLE_A -> . comma SIMPLE
    (15) SIMPLE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 57
    semicolon       reduce using rule 148 (empty -> .)

    SIMPLE_A                       shift and go to state 56
    empty                          shift and go to state 58

state 48

    (16) LIST -> id lSqrBracket . VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 60

state 49

    (151) SAVE_VAR -> empty .

    comma           reduce using rule 151 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 151 (SAVE_VAR -> empty .)
    rParenthesis    reduce using rule 151 (SAVE_VAR -> empty .)


state 50

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (81) METHOD_A -> . PARAMS
    (82) METHOD_A -> . empty
    (83) PARAMS -> . TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (148) empty -> .
    (45) TYPE -> . int SAVE_TYPE
    (46) TYPE -> . float SAVE_TYPE
    (47) TYPE -> . string SAVE_TYPE
    (48) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 148 (empty -> .)
    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    METHOD_A                       shift and go to state 63
    PARAMS                         shift and go to state 64
    empty                          shift and go to state 65
    TYPE                           shift and go to state 66

state 51

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK . PRINTQUADS
    (178) PRINTQUADS -> . empty
    (148) empty -> .

    $end            reduce using rule 148 (empty -> .)

    PRINTQUADS                     shift and go to state 67
    empty                          shift and go to state 68

state 52

    (49) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (50) BLOCK_A -> . STATEMENT BLOCK_A
    (51) BLOCK_A -> . empty
    (52) STATEMENT -> . ASSIGNMENT
    (53) STATEMENT -> . CONDITION
    (54) STATEMENT -> . WRITE
    (55) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (56) STATEMENT -> . POST_CONDITIONAL_LOOP
    (57) STATEMENT -> . METHODCALL
    (58) STATEMENT -> . READ
    (59) STATEMENT -> . STATMETHODS
    (60) STATEMENT -> . RETURN
    (148) empty -> .
    (61) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (69) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (72) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (86) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (87) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (88) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (62) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (94) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (95) STATMETHODS -> . LASSO
    (96) STATMETHODS -> . RIDGE
    (97) STATMETHODS -> . K_MEANS
    (98) STATMETHODS -> . MINI_BATCH_MEANS
    (99) STATMETHODS -> . TIME_SERIES_SPLIT
    (100) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (101) STATMETHODS -> . MEAN_SQUARED_ERROR
    (102) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (103) STATMETHODS -> . MEAN
    (104) STATMETHODS -> . MODE
    (105) STATMETHODS -> . MEDIAN
    (106) STATMETHODS -> . PROBABILITY
    (107) STATMETHODS -> . FREQUENCY
    (108) STATMETHODS -> . VARIANCE
    (109) STATMETHODS -> . STANDARD_DEVIATION
    (110) STATMETHODS -> . SKEWNESS
    (111) STATMETHODS -> . KURTOSI
    (91) RETURN -> . return EXPLOG semicolon
    (112) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (113) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (114) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (115) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (116) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (117) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (118) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (119) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (120) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (121) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (124) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (127) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (130) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (133) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (136) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (139) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (142) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (145) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 148 (empty -> .)
    id              shift and go to state 81
    if              shift and go to state 82
    print           shift and go to state 83
    while           shift and go to state 84
    do              shift and go to state 85
    scan            shift and go to state 86
    return          shift and go to state 105
    ols             shift and go to state 106
    las             shift and go to state 107
    rid             shift and go to state 108
    kmeans          shift and go to state 109
    mbm             shift and go to state 110
    tseries         shift and go to state 111
    mean_abs_err    shift and go to state 112
    mean_sqr_err    shift and go to state 113
    median_abs_err  shift and go to state 114
    mean            shift and go to state 115
    mode            shift and go to state 116
    median          shift and go to state 117
    prob            shift and go to state 118
    freq            shift and go to state 119
    variance        shift and go to state 120
    stddev          shift and go to state 121
    skew            shift and go to state 122
    kurt            shift and go to state 123

    BLOCK_A                        shift and go to state 69
    STATEMENT                      shift and go to state 70
    empty                          shift and go to state 71
    ASSIGNMENT                     shift and go to state 72
    CONDITION                      shift and go to state 73
    WRITE                          shift and go to state 74
    PRE_CONDITIONAL_LOOP           shift and go to state 75
    POST_CONDITIONAL_LOOP          shift and go to state 76
    METHODCALL                     shift and go to state 77
    READ                           shift and go to state 78
    STATMETHODS                    shift and go to state 79
    RETURN                         shift and go to state 80
    ORDINARY_LEAST_SQUARES         shift and go to state 87
    LASSO                          shift and go to state 88
    RIDGE                          shift and go to state 89
    K_MEANS                        shift and go to state 90
    MINI_BATCH_MEANS               shift and go to state 91
    TIME_SERIES_SPLIT              shift and go to state 92
    MEAN_ABSOLUTE_ERROR            shift and go to state 93
    MEAN_SQUARED_ERROR             shift and go to state 94
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 95
    MEAN                           shift and go to state 96
    MODE                           shift and go to state 97
    MEDIAN                         shift and go to state 98
    PROBABILITY                    shift and go to state 99
    FREQUENCY                      shift and go to state 100
    VARIANCE                       shift and go to state 101
    STANDARD_DEVIATION             shift and go to state 102
    SKEWNESS                       shift and go to state 103
    KURTOSI                        shift and go to state 104

state 53

    (8) VARS_A -> TYPE colon VARS_B semicolon VARS_C .

    var             reduce using rule 8 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    func            reduce using rule 8 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    void            reduce using rule 8 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)


state 54

    (11) VARS_C -> VARS_A .

    var             reduce using rule 11 (VARS_C -> VARS_A .)
    func            reduce using rule 11 (VARS_C -> VARS_A .)
    void            reduce using rule 11 (VARS_C -> VARS_A .)


state 55

    (12) VARS_C -> empty .

    var             reduce using rule 12 (VARS_C -> empty .)
    func            reduce using rule 12 (VARS_C -> empty .)
    void            reduce using rule 12 (VARS_C -> empty .)


state 56

    (13) SIMPLE -> id SAVE_VAR SIMPLE_A .

    semicolon       reduce using rule 13 (SIMPLE -> id SAVE_VAR SIMPLE_A .)


state 57

    (14) SIMPLE_A -> comma . SIMPLE
    (13) SIMPLE -> . id SAVE_VAR SIMPLE_A

    id              shift and go to state 125

    SIMPLE                         shift and go to state 124

state 58

    (15) SIMPLE_A -> empty .

    semicolon       reduce using rule 15 (SIMPLE_A -> empty .)


state 59

    (42) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (162) PUSH_STACK_OPERANDS -> . empty
    (148) empty -> .

    lSqrBracket     reduce using rule 148 (empty -> .)
    rSqrBracket     reduce using rule 148 (empty -> .)
    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 126
    empty                          shift and go to state 127

state 60

    (16) LIST -> id lSqrBracket VARCONSTAUX . rSqrBracket SAVE_ARRAY LIST_A

    rSqrBracket     shift and go to state 128


state 61

    (43) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (163) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (148) empty -> .

    rSqrBracket     reduce using rule 148 (empty -> .)
    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 129
    empty                          shift and go to state 130

state 62

    (44) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (163) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (148) empty -> .

    rSqrBracket     reduce using rule 148 (empty -> .)
    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 131
    empty                          shift and go to state 130

state 63

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (154) SAVE_COUNTER_PARAM -> . empty
    (148) empty -> .

    rParenthesis    reduce using rule 148 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 132
    empty                          shift and go to state 133

state 64

    (81) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 81 (METHOD_A -> PARAMS .)


state 65

    (82) METHOD_A -> empty .

    rParenthesis    reduce using rule 82 (METHOD_A -> empty .)


state 66

    (83) PARAMS -> TYPE . id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 134


state 67

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .)


state 68

    (178) PRINTQUADS -> empty .

    $end            reduce using rule 178 (PRINTQUADS -> empty .)


state 69

    (49) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 135


state 70

    (50) BLOCK_A -> STATEMENT . BLOCK_A
    (50) BLOCK_A -> . STATEMENT BLOCK_A
    (51) BLOCK_A -> . empty
    (52) STATEMENT -> . ASSIGNMENT
    (53) STATEMENT -> . CONDITION
    (54) STATEMENT -> . WRITE
    (55) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (56) STATEMENT -> . POST_CONDITIONAL_LOOP
    (57) STATEMENT -> . METHODCALL
    (58) STATEMENT -> . READ
    (59) STATEMENT -> . STATMETHODS
    (60) STATEMENT -> . RETURN
    (148) empty -> .
    (61) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (69) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (72) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (86) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (87) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (88) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (62) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (94) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (95) STATMETHODS -> . LASSO
    (96) STATMETHODS -> . RIDGE
    (97) STATMETHODS -> . K_MEANS
    (98) STATMETHODS -> . MINI_BATCH_MEANS
    (99) STATMETHODS -> . TIME_SERIES_SPLIT
    (100) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (101) STATMETHODS -> . MEAN_SQUARED_ERROR
    (102) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (103) STATMETHODS -> . MEAN
    (104) STATMETHODS -> . MODE
    (105) STATMETHODS -> . MEDIAN
    (106) STATMETHODS -> . PROBABILITY
    (107) STATMETHODS -> . FREQUENCY
    (108) STATMETHODS -> . VARIANCE
    (109) STATMETHODS -> . STANDARD_DEVIATION
    (110) STATMETHODS -> . SKEWNESS
    (111) STATMETHODS -> . KURTOSI
    (91) RETURN -> . return EXPLOG semicolon
    (112) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (113) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (114) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (115) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (116) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (117) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (118) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (119) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (120) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (121) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (124) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (127) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (130) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (133) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (136) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (139) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (142) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (145) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 148 (empty -> .)
    id              shift and go to state 81
    if              shift and go to state 82
    print           shift and go to state 83
    while           shift and go to state 84
    do              shift and go to state 85
    scan            shift and go to state 86
    return          shift and go to state 105
    ols             shift and go to state 106
    las             shift and go to state 107
    rid             shift and go to state 108
    kmeans          shift and go to state 109
    mbm             shift and go to state 110
    tseries         shift and go to state 111
    mean_abs_err    shift and go to state 112
    mean_sqr_err    shift and go to state 113
    median_abs_err  shift and go to state 114
    mean            shift and go to state 115
    mode            shift and go to state 116
    median          shift and go to state 117
    prob            shift and go to state 118
    freq            shift and go to state 119
    variance        shift and go to state 120
    stddev          shift and go to state 121
    skew            shift and go to state 122
    kurt            shift and go to state 123

    STATEMENT                      shift and go to state 70
    BLOCK_A                        shift and go to state 136
    empty                          shift and go to state 71
    ASSIGNMENT                     shift and go to state 72
    CONDITION                      shift and go to state 73
    WRITE                          shift and go to state 74
    PRE_CONDITIONAL_LOOP           shift and go to state 75
    POST_CONDITIONAL_LOOP          shift and go to state 76
    METHODCALL                     shift and go to state 77
    READ                           shift and go to state 78
    STATMETHODS                    shift and go to state 79
    RETURN                         shift and go to state 80
    ORDINARY_LEAST_SQUARES         shift and go to state 87
    LASSO                          shift and go to state 88
    RIDGE                          shift and go to state 89
    K_MEANS                        shift and go to state 90
    MINI_BATCH_MEANS               shift and go to state 91
    TIME_SERIES_SPLIT              shift and go to state 92
    MEAN_ABSOLUTE_ERROR            shift and go to state 93
    MEAN_SQUARED_ERROR             shift and go to state 94
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 95
    MEAN                           shift and go to state 96
    MODE                           shift and go to state 97
    MEDIAN                         shift and go to state 98
    PROBABILITY                    shift and go to state 99
    FREQUENCY                      shift and go to state 100
    VARIANCE                       shift and go to state 101
    STANDARD_DEVIATION             shift and go to state 102
    SKEWNESS                       shift and go to state 103
    KURTOSI                        shift and go to state 104

state 71

    (51) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 51 (BLOCK_A -> empty .)


state 72

    (52) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 52 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 52 (STATEMENT -> ASSIGNMENT .)


state 73

    (53) STATEMENT -> CONDITION .

    id              reduce using rule 53 (STATEMENT -> CONDITION .)
    if              reduce using rule 53 (STATEMENT -> CONDITION .)
    print           reduce using rule 53 (STATEMENT -> CONDITION .)
    while           reduce using rule 53 (STATEMENT -> CONDITION .)
    do              reduce using rule 53 (STATEMENT -> CONDITION .)
    scan            reduce using rule 53 (STATEMENT -> CONDITION .)
    return          reduce using rule 53 (STATEMENT -> CONDITION .)
    ols             reduce using rule 53 (STATEMENT -> CONDITION .)
    las             reduce using rule 53 (STATEMENT -> CONDITION .)
    rid             reduce using rule 53 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 53 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 53 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 53 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 53 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 53 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 53 (STATEMENT -> CONDITION .)
    mean            reduce using rule 53 (STATEMENT -> CONDITION .)
    mode            reduce using rule 53 (STATEMENT -> CONDITION .)
    median          reduce using rule 53 (STATEMENT -> CONDITION .)
    prob            reduce using rule 53 (STATEMENT -> CONDITION .)
    freq            reduce using rule 53 (STATEMENT -> CONDITION .)
    variance        reduce using rule 53 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 53 (STATEMENT -> CONDITION .)
    skew            reduce using rule 53 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 53 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 53 (STATEMENT -> CONDITION .)


state 74

    (54) STATEMENT -> WRITE .

    id              reduce using rule 54 (STATEMENT -> WRITE .)
    if              reduce using rule 54 (STATEMENT -> WRITE .)
    print           reduce using rule 54 (STATEMENT -> WRITE .)
    while           reduce using rule 54 (STATEMENT -> WRITE .)
    do              reduce using rule 54 (STATEMENT -> WRITE .)
    scan            reduce using rule 54 (STATEMENT -> WRITE .)
    return          reduce using rule 54 (STATEMENT -> WRITE .)
    ols             reduce using rule 54 (STATEMENT -> WRITE .)
    las             reduce using rule 54 (STATEMENT -> WRITE .)
    rid             reduce using rule 54 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 54 (STATEMENT -> WRITE .)
    mbm             reduce using rule 54 (STATEMENT -> WRITE .)
    tseries         reduce using rule 54 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 54 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 54 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 54 (STATEMENT -> WRITE .)
    mean            reduce using rule 54 (STATEMENT -> WRITE .)
    mode            reduce using rule 54 (STATEMENT -> WRITE .)
    median          reduce using rule 54 (STATEMENT -> WRITE .)
    prob            reduce using rule 54 (STATEMENT -> WRITE .)
    freq            reduce using rule 54 (STATEMENT -> WRITE .)
    variance        reduce using rule 54 (STATEMENT -> WRITE .)
    stddev          reduce using rule 54 (STATEMENT -> WRITE .)
    skew            reduce using rule 54 (STATEMENT -> WRITE .)
    kurt            reduce using rule 54 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 54 (STATEMENT -> WRITE .)


state 75

    (55) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 55 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 76

    (56) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 56 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 77

    (57) STATEMENT -> METHODCALL .

    id              reduce using rule 57 (STATEMENT -> METHODCALL .)
    if              reduce using rule 57 (STATEMENT -> METHODCALL .)
    print           reduce using rule 57 (STATEMENT -> METHODCALL .)
    while           reduce using rule 57 (STATEMENT -> METHODCALL .)
    do              reduce using rule 57 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 57 (STATEMENT -> METHODCALL .)
    return          reduce using rule 57 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 57 (STATEMENT -> METHODCALL .)
    las             reduce using rule 57 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 57 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 57 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 57 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 57 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 57 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 57 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 57 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 57 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 57 (STATEMENT -> METHODCALL .)
    median          reduce using rule 57 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 57 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 57 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 57 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 57 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 57 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 57 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 57 (STATEMENT -> METHODCALL .)


state 78

    (58) STATEMENT -> READ .

    id              reduce using rule 58 (STATEMENT -> READ .)
    if              reduce using rule 58 (STATEMENT -> READ .)
    print           reduce using rule 58 (STATEMENT -> READ .)
    while           reduce using rule 58 (STATEMENT -> READ .)
    do              reduce using rule 58 (STATEMENT -> READ .)
    scan            reduce using rule 58 (STATEMENT -> READ .)
    return          reduce using rule 58 (STATEMENT -> READ .)
    ols             reduce using rule 58 (STATEMENT -> READ .)
    las             reduce using rule 58 (STATEMENT -> READ .)
    rid             reduce using rule 58 (STATEMENT -> READ .)
    kmeans          reduce using rule 58 (STATEMENT -> READ .)
    mbm             reduce using rule 58 (STATEMENT -> READ .)
    tseries         reduce using rule 58 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 58 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 58 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 58 (STATEMENT -> READ .)
    mean            reduce using rule 58 (STATEMENT -> READ .)
    mode            reduce using rule 58 (STATEMENT -> READ .)
    median          reduce using rule 58 (STATEMENT -> READ .)
    prob            reduce using rule 58 (STATEMENT -> READ .)
    freq            reduce using rule 58 (STATEMENT -> READ .)
    variance        reduce using rule 58 (STATEMENT -> READ .)
    stddev          reduce using rule 58 (STATEMENT -> READ .)
    skew            reduce using rule 58 (STATEMENT -> READ .)
    kurt            reduce using rule 58 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 58 (STATEMENT -> READ .)


state 79

    (59) STATEMENT -> STATMETHODS .

    id              reduce using rule 59 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 59 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 59 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 59 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 59 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 59 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 59 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 59 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 59 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 59 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 59 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 59 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 59 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 59 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 59 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 59 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 59 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 59 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 59 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 59 (STATEMENT -> STATMETHODS .)


state 80

    (60) STATEMENT -> RETURN .

    id              reduce using rule 60 (STATEMENT -> RETURN .)
    if              reduce using rule 60 (STATEMENT -> RETURN .)
    print           reduce using rule 60 (STATEMENT -> RETURN .)
    while           reduce using rule 60 (STATEMENT -> RETURN .)
    do              reduce using rule 60 (STATEMENT -> RETURN .)
    scan            reduce using rule 60 (STATEMENT -> RETURN .)
    return          reduce using rule 60 (STATEMENT -> RETURN .)
    ols             reduce using rule 60 (STATEMENT -> RETURN .)
    las             reduce using rule 60 (STATEMENT -> RETURN .)
    rid             reduce using rule 60 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 60 (STATEMENT -> RETURN .)
    mbm             reduce using rule 60 (STATEMENT -> RETURN .)
    tseries         reduce using rule 60 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 60 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 60 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 60 (STATEMENT -> RETURN .)
    mean            reduce using rule 60 (STATEMENT -> RETURN .)
    mode            reduce using rule 60 (STATEMENT -> RETURN .)
    median          reduce using rule 60 (STATEMENT -> RETURN .)
    prob            reduce using rule 60 (STATEMENT -> RETURN .)
    freq            reduce using rule 60 (STATEMENT -> RETURN .)
    variance        reduce using rule 60 (STATEMENT -> RETURN .)
    stddev          reduce using rule 60 (STATEMENT -> RETURN .)
    skew            reduce using rule 60 (STATEMENT -> RETURN .)
    kurt            reduce using rule 60 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 60 (STATEMENT -> RETURN .)


state 81

    (61) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (88) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (162) PUSH_STACK_OPERANDS -> . empty
    (158) VALIDATE_FUNCTION_NAME -> . empty
    (148) empty -> .

    lSqrBracket     reduce using rule 148 (empty -> .)
    assign          reduce using rule 148 (empty -> .)
    lParenthesis    reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 137
    VALIDATE_FUNCTION_NAME         shift and go to state 138
    empty                          shift and go to state 139

state 82

    (69) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 140


state 83

    (72) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 141


state 84

    (86) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (174) PUSH_STACK_JUMPS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 142
    empty                          shift and go to state 143

state 85

    (87) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (174) PUSH_STACK_JUMPS -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 144
    empty                          shift and go to state 143

state 86

    (62) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 145


state 87

    (94) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 94 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 88

    (95) STATMETHODS -> LASSO .

    id              reduce using rule 95 (STATMETHODS -> LASSO .)
    if              reduce using rule 95 (STATMETHODS -> LASSO .)
    print           reduce using rule 95 (STATMETHODS -> LASSO .)
    while           reduce using rule 95 (STATMETHODS -> LASSO .)
    do              reduce using rule 95 (STATMETHODS -> LASSO .)
    scan            reduce using rule 95 (STATMETHODS -> LASSO .)
    return          reduce using rule 95 (STATMETHODS -> LASSO .)
    ols             reduce using rule 95 (STATMETHODS -> LASSO .)
    las             reduce using rule 95 (STATMETHODS -> LASSO .)
    rid             reduce using rule 95 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 95 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 95 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 95 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 95 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 95 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 95 (STATMETHODS -> LASSO .)
    mean            reduce using rule 95 (STATMETHODS -> LASSO .)
    mode            reduce using rule 95 (STATMETHODS -> LASSO .)
    median          reduce using rule 95 (STATMETHODS -> LASSO .)
    prob            reduce using rule 95 (STATMETHODS -> LASSO .)
    freq            reduce using rule 95 (STATMETHODS -> LASSO .)
    variance        reduce using rule 95 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 95 (STATMETHODS -> LASSO .)
    skew            reduce using rule 95 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 95 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 95 (STATMETHODS -> LASSO .)


state 89

    (96) STATMETHODS -> RIDGE .

    id              reduce using rule 96 (STATMETHODS -> RIDGE .)
    if              reduce using rule 96 (STATMETHODS -> RIDGE .)
    print           reduce using rule 96 (STATMETHODS -> RIDGE .)
    while           reduce using rule 96 (STATMETHODS -> RIDGE .)
    do              reduce using rule 96 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 96 (STATMETHODS -> RIDGE .)
    return          reduce using rule 96 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 96 (STATMETHODS -> RIDGE .)
    las             reduce using rule 96 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 96 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 96 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 96 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 96 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 96 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 96 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 96 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 96 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 96 (STATMETHODS -> RIDGE .)
    median          reduce using rule 96 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 96 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 96 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 96 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 96 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 96 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 96 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 96 (STATMETHODS -> RIDGE .)


state 90

    (97) STATMETHODS -> K_MEANS .

    id              reduce using rule 97 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 97 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 97 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 97 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 97 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 97 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 97 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 97 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 97 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 97 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 97 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 97 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 97 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 97 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 97 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 97 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 97 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 97 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 97 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 97 (STATMETHODS -> K_MEANS .)


state 91

    (98) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 98 (STATMETHODS -> MINI_BATCH_MEANS .)


state 92

    (99) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 99 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 93

    (100) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 100 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 94

    (101) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 101 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 95

    (102) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 102 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 96

    (103) STATMETHODS -> MEAN .

    id              reduce using rule 103 (STATMETHODS -> MEAN .)
    if              reduce using rule 103 (STATMETHODS -> MEAN .)
    print           reduce using rule 103 (STATMETHODS -> MEAN .)
    while           reduce using rule 103 (STATMETHODS -> MEAN .)
    do              reduce using rule 103 (STATMETHODS -> MEAN .)
    scan            reduce using rule 103 (STATMETHODS -> MEAN .)
    return          reduce using rule 103 (STATMETHODS -> MEAN .)
    ols             reduce using rule 103 (STATMETHODS -> MEAN .)
    las             reduce using rule 103 (STATMETHODS -> MEAN .)
    rid             reduce using rule 103 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 103 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 103 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 103 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 103 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 103 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 103 (STATMETHODS -> MEAN .)
    mean            reduce using rule 103 (STATMETHODS -> MEAN .)
    mode            reduce using rule 103 (STATMETHODS -> MEAN .)
    median          reduce using rule 103 (STATMETHODS -> MEAN .)
    prob            reduce using rule 103 (STATMETHODS -> MEAN .)
    freq            reduce using rule 103 (STATMETHODS -> MEAN .)
    variance        reduce using rule 103 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 103 (STATMETHODS -> MEAN .)
    skew            reduce using rule 103 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 103 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 103 (STATMETHODS -> MEAN .)


state 97

    (104) STATMETHODS -> MODE .

    id              reduce using rule 104 (STATMETHODS -> MODE .)
    if              reduce using rule 104 (STATMETHODS -> MODE .)
    print           reduce using rule 104 (STATMETHODS -> MODE .)
    while           reduce using rule 104 (STATMETHODS -> MODE .)
    do              reduce using rule 104 (STATMETHODS -> MODE .)
    scan            reduce using rule 104 (STATMETHODS -> MODE .)
    return          reduce using rule 104 (STATMETHODS -> MODE .)
    ols             reduce using rule 104 (STATMETHODS -> MODE .)
    las             reduce using rule 104 (STATMETHODS -> MODE .)
    rid             reduce using rule 104 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 104 (STATMETHODS -> MODE .)
    mbm             reduce using rule 104 (STATMETHODS -> MODE .)
    tseries         reduce using rule 104 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 104 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 104 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 104 (STATMETHODS -> MODE .)
    mean            reduce using rule 104 (STATMETHODS -> MODE .)
    mode            reduce using rule 104 (STATMETHODS -> MODE .)
    median          reduce using rule 104 (STATMETHODS -> MODE .)
    prob            reduce using rule 104 (STATMETHODS -> MODE .)
    freq            reduce using rule 104 (STATMETHODS -> MODE .)
    variance        reduce using rule 104 (STATMETHODS -> MODE .)
    stddev          reduce using rule 104 (STATMETHODS -> MODE .)
    skew            reduce using rule 104 (STATMETHODS -> MODE .)
    kurt            reduce using rule 104 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 104 (STATMETHODS -> MODE .)


state 98

    (105) STATMETHODS -> MEDIAN .

    id              reduce using rule 105 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 105 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 105 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 105 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 105 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 105 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 105 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 105 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 105 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 105 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 105 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 105 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 105 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 105 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 105 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 105 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 105 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 105 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 105 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 105 (STATMETHODS -> MEDIAN .)


state 99

    (106) STATMETHODS -> PROBABILITY .

    id              reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 106 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 106 (STATMETHODS -> PROBABILITY .)


state 100

    (107) STATMETHODS -> FREQUENCY .

    id              reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 107 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 107 (STATMETHODS -> FREQUENCY .)


state 101

    (108) STATMETHODS -> VARIANCE .

    id              reduce using rule 108 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 108 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 108 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 108 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 108 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 108 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 108 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 108 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 108 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 108 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 108 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 108 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 108 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 108 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 108 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 108 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 108 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 108 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 108 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 108 (STATMETHODS -> VARIANCE .)


state 102

    (109) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 109 (STATMETHODS -> STANDARD_DEVIATION .)


state 103

    (110) STATMETHODS -> SKEWNESS .

    id              reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 110 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 110 (STATMETHODS -> SKEWNESS .)


state 104

    (111) STATMETHODS -> KURTOSI .

    id              reduce using rule 111 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 111 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 111 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 111 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 111 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 111 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 111 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 111 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 111 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 111 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 111 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 111 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 111 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 111 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 111 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 111 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 111 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 111 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 111 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 111 (STATMETHODS -> KURTOSI .)


state 105

    (91) RETURN -> return . EXPLOG semicolon
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 146
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 106

    (112) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 154


state 107

    (113) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 155


state 108

    (114) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 156


state 109

    (115) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 157


state 110

    (116) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 158


state 111

    (117) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 159


state 112

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 160


state 113

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 161


state 114

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 162


state 115

    (121) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 163


state 116

    (124) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 164


state 117

    (127) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 165


state 118

    (130) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 166


state 119

    (133) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 167


state 120

    (136) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 168


state 121

    (139) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 169


state 122

    (142) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 170


state 123

    (145) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 171


state 124

    (14) SIMPLE_A -> comma SIMPLE .

    semicolon       reduce using rule 14 (SIMPLE_A -> comma SIMPLE .)


state 125

    (13) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (151) SAVE_VAR -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)

    SAVE_VAR                       shift and go to state 47
    empty                          shift and go to state 49

state 126

    (42) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (65) ISLIST -> . lSqrBracket EXP rSqrBracket
    (66) ISLIST -> . empty
    (148) empty -> .

    lSqrBracket     shift and go to state 173
    rSqrBracket     reduce using rule 148 (empty -> .)
    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)

    ISLIST                         shift and go to state 172
    empty                          shift and go to state 174

state 127

    (162) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)


state 128

    (16) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket . SAVE_ARRAY LIST_A
    (152) SAVE_ARRAY -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)

    SAVE_ARRAY                     shift and go to state 175
    empty                          shift and go to state 176

state 129

    (43) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    rSqrBracket     reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    times           reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 43 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 130

    (163) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    rSqrBracket     reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    comma           reduce using rule 163 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 131

    (44) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    rSqrBracket     reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    times           reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 44 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 132

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 177


state 133

    (154) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 154 (SAVE_COUNTER_PARAM -> empty .)


state 134

    (83) PARAMS -> TYPE id . SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (151) SAVE_VAR -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    SAVE_VAR                       shift and go to state 178
    empty                          shift and go to state 49

state 135

    (49) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 49 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 136

    (50) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 50 (BLOCK_A -> STATEMENT BLOCK_A .)


state 137

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (65) ISLIST -> . lSqrBracket EXP rSqrBracket
    (66) ISLIST -> . empty
    (148) empty -> .

    lSqrBracket     shift and go to state 173
    assign          reduce using rule 148 (empty -> .)

    ISLIST                         shift and go to state 179
    empty                          shift and go to state 174

state 138

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (159) ERA -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)

    ERA                            shift and go to state 180
    empty                          shift and go to state 181

state 139

    (162) PUSH_STACK_OPERANDS -> empty .
    (158) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 162 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 158 (VALIDATE_FUNCTION_NAME -> empty .)


state 140

    (69) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 182
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 141

    (72) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPRESSION                     shift and go to state 183
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 142

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 184


state 143

    (174) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 174 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 174 (PUSH_STACK_JUMPS -> empty .)


state 144

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 185

state 145

    (62) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (75) VARCTE -> . id ISLIST
    (76) VARCTE -> . cte_i
    (77) VARCTE -> . cte_f
    (78) VARCTE -> . cte_str
    (79) VARCTE -> . BOOLEAN
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    id              shift and go to state 187
    cte_i           shift and go to state 188
    cte_f           shift and go to state 189
    cte_str         shift and go to state 190
    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    VARCTE                         shift and go to state 186
    BOOLEAN                        shift and go to state 191

state 146

    (91) RETURN -> return EXPLOG . semicolon

    semicolon       shift and go to state 194


state 147

    (19) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (21) EXPLOG_A -> . and EXPLOG
    (22) EXPLOG_A -> . or EXPLOG
    (23) EXPLOG_A -> . empty
    (148) empty -> .

    and             shift and go to state 196
    or              shift and go to state 197
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    EXPLOG_A                       shift and go to state 195
    empty                          shift and go to state 198

state 148

    (20) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPRESSION                     shift and go to state 199
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 149

    (24) EXPRESSION -> EXP .
    (25) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (26) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (27) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (28) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (29) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (30) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (31) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 24 (EXPRESSION -> EXP .)
    or              reduce using rule 24 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 24 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 24 (EXPRESSION -> EXP .)
    comma           reduce using rule 24 (EXPRESSION -> EXP .)
    greater         shift and go to state 201
    lessThan        shift and go to state 202
    greaterEquals   shift and go to state 203
    lessThanEquals  shift and go to state 204
    equals          shift and go to state 205
    notEquals       shift and go to state 206

    EXPRESSION_A                   shift and go to state 200

state 150

    (32) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (166) SOLVE_OPERATION_SUM_MINUS -> . empty
    (148) empty -> .

    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)
    rSqrBracket     reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 207
    empty                          shift and go to state 208

state 151

    (36) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (167) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (148) empty -> .

    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)
    rSqrBracket     reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 209
    empty                          shift and go to state 210

state 152

    (40) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    not             reduce using rule 148 (empty -> .)
    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 211
    empty                          shift and go to state 212

state 153

    (41) FACTOR -> VARCONSTAUX .

    times           reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 41 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 41 (FACTOR -> VARCONSTAUX .)


state 154

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 213


state 155

    (113) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 214


state 156

    (114) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 215


state 157

    (115) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 216

state 158

    (116) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 217

state 159

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 218

state 160

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 219


state 161

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 220


state 162

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 221


state 163

    (121) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 222


state 164

    (124) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 223


state 165

    (127) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 224


state 166

    (130) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 225


state 167

    (133) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 226


state 168

    (136) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 227


state 169

    (139) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 228


state 170

    (142) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 229


state 171

    (145) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 230


state 172

    (42) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    rSqrBracket     reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    times           reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 42 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 173

    (65) ISLIST -> lSqrBracket . EXP rSqrBracket
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 231
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 174

    (66) ISLIST -> empty .

    rSqrBracket     reduce using rule 66 (ISLIST -> empty .)
    times           reduce using rule 66 (ISLIST -> empty .)
    divide          reduce using rule 66 (ISLIST -> empty .)
    plus            reduce using rule 66 (ISLIST -> empty .)
    minus           reduce using rule 66 (ISLIST -> empty .)
    greater         reduce using rule 66 (ISLIST -> empty .)
    lessThan        reduce using rule 66 (ISLIST -> empty .)
    greaterEquals   reduce using rule 66 (ISLIST -> empty .)
    lessThanEquals  reduce using rule 66 (ISLIST -> empty .)
    equals          reduce using rule 66 (ISLIST -> empty .)
    notEquals       reduce using rule 66 (ISLIST -> empty .)
    and             reduce using rule 66 (ISLIST -> empty .)
    or              reduce using rule 66 (ISLIST -> empty .)
    semicolon       reduce using rule 66 (ISLIST -> empty .)
    rParenthesis    reduce using rule 66 (ISLIST -> empty .)
    comma           reduce using rule 66 (ISLIST -> empty .)
    assign          reduce using rule 66 (ISLIST -> empty .)


state 175

    (16) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY . LIST_A
    (17) LIST_A -> . comma LIST
    (18) LIST_A -> . empty
    (148) empty -> .

    comma           shift and go to state 233
    semicolon       reduce using rule 148 (empty -> .)

    LIST_A                         shift and go to state 232
    empty                          shift and go to state 234

state 176

    (152) SAVE_ARRAY -> empty .

    comma           reduce using rule 152 (SAVE_ARRAY -> empty .)
    semicolon       reduce using rule 152 (SAVE_ARRAY -> empty .)


state 177

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (155) SAVE_COUNTER_QUAD -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 235
    empty                          shift and go to state 236

state 178

    (83) PARAMS -> TYPE id SAVE_VAR . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (157) SAVE_PARAM_TYPE -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 237
    empty                          shift and go to state 238

state 179

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon

    assign          shift and go to state 239


state 180

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 240


state 181

    (159) ERA -> empty .

    lParenthesis    reduce using rule 159 (ERA -> empty .)


state 182

    (69) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 241


state 183

    (72) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (177) GENERATE_QUAD_PRINT -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 242
    empty                          shift and go to state 243

state 184

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 244
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 185

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 245


state 186

    (62) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (63) READ_A -> . comma
    (64) READ_A -> . empty
    (148) empty -> .

    comma           shift and go to state 247
    rParenthesis    reduce using rule 148 (empty -> .)

    READ_A                         shift and go to state 246
    empty                          shift and go to state 248

state 187

    (75) VARCTE -> id . ISLIST
    (65) ISLIST -> . lSqrBracket EXP rSqrBracket
    (66) ISLIST -> . empty
    (148) empty -> .

    lSqrBracket     shift and go to state 173
    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    ISLIST                         shift and go to state 249
    empty                          shift and go to state 174

state 188

    (76) VARCTE -> cte_i .

    comma           reduce using rule 76 (VARCTE -> cte_i .)
    rParenthesis    reduce using rule 76 (VARCTE -> cte_i .)


state 189

    (77) VARCTE -> cte_f .

    comma           reduce using rule 77 (VARCTE -> cte_f .)
    rParenthesis    reduce using rule 77 (VARCTE -> cte_f .)


state 190

    (78) VARCTE -> cte_str .

    comma           reduce using rule 78 (VARCTE -> cte_str .)
    rParenthesis    reduce using rule 78 (VARCTE -> cte_str .)


state 191

    (79) VARCTE -> BOOLEAN .

    comma           reduce using rule 79 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 79 (VARCTE -> BOOLEAN .)


state 192

    (92) BOOLEAN -> FALSE .

    comma           reduce using rule 92 (BOOLEAN -> FALSE .)
    rParenthesis    reduce using rule 92 (BOOLEAN -> FALSE .)


state 193

    (93) BOOLEAN -> TRUE .

    comma           reduce using rule 93 (BOOLEAN -> TRUE .)
    rParenthesis    reduce using rule 93 (BOOLEAN -> TRUE .)


state 194

    (91) RETURN -> return EXPLOG semicolon .

    id              reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    if              reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    print           reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    while           reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    do              reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    scan            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    return          reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    ols             reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    las             reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    rid             reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    kmeans          reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    mbm             reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    tseries         reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    mean_abs_err    reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    mean_sqr_err    reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    median_abs_err  reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    mean            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    mode            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    median          reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    prob            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    freq            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    variance        reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    stddev          reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    skew            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    kurt            reduce using rule 91 (RETURN -> return EXPLOG semicolon .)
    rCurlyBracket   reduce using rule 91 (RETURN -> return EXPLOG semicolon .)


state 195

    (19) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (169) SOLVE_OPERATION_LOGIC -> . empty
    (148) empty -> .

    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 250
    empty                          shift and go to state 251

state 196

    (21) EXPLOG_A -> and . EXPLOG
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 252
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 197

    (22) EXPLOG_A -> or . EXPLOG
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 253
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 198

    (23) EXPLOG_A -> empty .

    semicolon       reduce using rule 23 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 23 (EXPLOG_A -> empty .)


state 199

    (20) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (21) EXPLOG_A -> . and EXPLOG
    (22) EXPLOG_A -> . or EXPLOG
    (23) EXPLOG_A -> . empty
    (148) empty -> .

    and             shift and go to state 196
    or              shift and go to state 197
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    EXPLOG_A                       shift and go to state 254
    empty                          shift and go to state 198

state 200

    (25) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 255
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 201

    (26) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 256
    empty                          shift and go to state 212

state 202

    (27) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 257
    empty                          shift and go to state 212

state 203

    (28) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 258
    empty                          shift and go to state 212

state 204

    (29) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 259
    empty                          shift and go to state 212

state 205

    (30) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 260
    empty                          shift and go to state 212

state 206

    (31) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 261
    empty                          shift and go to state 212

state 207

    (32) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (33) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (34) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (35) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    greater         reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rSqrBracket     reduce using rule 32 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 263
    minus           shift and go to state 264

    EXP_A                          shift and go to state 262

state 208

    (166) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 166 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 209

    (36) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (37) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (38) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (39) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 36 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 266
    divide          shift and go to state 267

    TERM_A                         shift and go to state 265

state 210

    (167) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 167 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 211

    (40) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 268
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 212

    (164) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 164 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 164 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 164 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 164 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 164 (PUSH_STACK_OPERATORS -> empty .)


state 213

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 269


state 214

    (113) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 270


state 215

    (114) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 271


state 216

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 272


state 217

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 273


state 218

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 274


state 219

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 275


state 220

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 276


state 221

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 277


state 222

    (121) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (122) MEAN_A -> . comma id MEAN_A
    (123) MEAN_A -> . empty
    (148) empty -> .

    comma           shift and go to state 279
    rParenthesis    reduce using rule 148 (empty -> .)

    MEAN_A                         shift and go to state 278
    empty                          shift and go to state 280

state 223

    (124) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (125) MODE_A -> . comma id MODE_A
    (126) MODE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 282
    rParenthesis    reduce using rule 148 (empty -> .)

    MODE_A                         shift and go to state 281
    empty                          shift and go to state 283

state 224

    (127) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (128) MEDIAN_A -> . comma id MEDIAN_A
    (129) MEDIAN_A -> . empty
    (148) empty -> .

    comma           shift and go to state 285
    rParenthesis    reduce using rule 148 (empty -> .)

    MEDIAN_A                       shift and go to state 284
    empty                          shift and go to state 286

state 225

    (130) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (131) PROBABILITY_A -> . comma id PROBABILITY_A
    (132) PROBABILITY_A -> . empty
    (148) empty -> .

    comma           shift and go to state 288
    rParenthesis    reduce using rule 148 (empty -> .)

    PROBABILITY_A                  shift and go to state 287
    empty                          shift and go to state 289

state 226

    (133) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (134) FREQUENCY_A -> . comma id FREQUENCY_A
    (135) FREQUENCY_A -> . empty
    (148) empty -> .

    comma           shift and go to state 291
    rParenthesis    reduce using rule 148 (empty -> .)

    FREQUENCY_A                    shift and go to state 290
    empty                          shift and go to state 292

state 227

    (136) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (137) VARIANCE_A -> . comma id VARIANCE_A
    (138) VARIANCE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 294
    rParenthesis    reduce using rule 148 (empty -> .)

    VARIANCE_A                     shift and go to state 293
    empty                          shift and go to state 295

state 228

    (139) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (140) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (141) STANDARD_DEVIATION_A -> . empty
    (148) empty -> .

    comma           shift and go to state 297
    rParenthesis    reduce using rule 148 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 296
    empty                          shift and go to state 298

state 229

    (142) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (143) SKEWNESS_A -> . comma id SKEWNESS_A
    (144) SKEWNESS_A -> . empty
    (148) empty -> .

    comma           shift and go to state 300
    rParenthesis    reduce using rule 148 (empty -> .)

    SKEWNESS_A                     shift and go to state 299
    empty                          shift and go to state 301

state 230

    (145) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (146) KURTOSI_A -> . comma id KURTOSI_A
    (147) KURTOSI_A -> . empty
    (148) empty -> .

    comma           shift and go to state 303
    rParenthesis    reduce using rule 148 (empty -> .)

    KURTOSI_A                      shift and go to state 302
    empty                          shift and go to state 304

state 231

    (65) ISLIST -> lSqrBracket EXP . rSqrBracket

    rSqrBracket     shift and go to state 305


state 232

    (16) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .

    semicolon       reduce using rule 16 (LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .)


state 233

    (17) LIST_A -> comma . LIST
    (16) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 307

    LIST                           shift and go to state 306

state 234

    (18) LIST_A -> empty .

    semicolon       reduce using rule 18 (LIST_A -> empty .)


state 235

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 308

state 236

    (155) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 155 (SAVE_COUNTER_QUAD -> empty .)


state 237

    (83) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (153) INCREMENT_PARAM_COUNTER -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 309
    empty                          shift and go to state 310

state 238

    (157) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 157 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 157 (SAVE_PARAM_TYPE -> empty .)


state 239

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    not             reduce using rule 148 (empty -> .)
    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 311
    empty                          shift and go to state 212

state 240

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 312
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 241

    (69) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (171) GENERATE_GOTOF_CONDITIONAL -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 313
    empty                          shift and go to state 314

state 242

    (72) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (73) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (74) WRITE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 148 (empty -> .)

    WRITE_A                        shift and go to state 315
    empty                          shift and go to state 317

state 243

    (177) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 177 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 177 (GENERATE_QUAD_PRINT -> empty .)


state 244

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 318


state 245

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 319


state 246

    (62) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 320


state 247

    (63) READ_A -> comma .

    rParenthesis    reduce using rule 63 (READ_A -> comma .)


state 248

    (64) READ_A -> empty .

    rParenthesis    reduce using rule 64 (READ_A -> empty .)


state 249

    (75) VARCTE -> id ISLIST .

    comma           reduce using rule 75 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 75 (VARCTE -> id ISLIST .)


state 250

    (19) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 19 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 19 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 251

    (169) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 169 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 169 (SOLVE_OPERATION_LOGIC -> empty .)


state 252

    (21) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 21 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 21 (EXPLOG_A -> and EXPLOG .)


state 253

    (22) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 22 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 22 (EXPLOG_A -> or EXPLOG .)


state 254

    (20) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (169) SOLVE_OPERATION_LOGIC -> . empty
    (148) empty -> .

    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 321
    empty                          shift and go to state 251

state 255

    (25) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (168) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (148) empty -> .

    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 322
    empty                          shift and go to state 323

state 256

    (26) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 26 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 26 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 26 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 26 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 257

    (27) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 27 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 27 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 27 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 27 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 258

    (28) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 28 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 28 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 28 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 28 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 259

    (29) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 29 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 29 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 29 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 29 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 260

    (30) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 30 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 30 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 30 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 30 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 261

    (31) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 31 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 31 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 31 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 31 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 262

    (33) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    greater         reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rSqrBracket     reduce using rule 33 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 263

    (34) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 324
    empty                          shift and go to state 212

state 264

    (35) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 325
    empty                          shift and go to state 212

state 265

    (37) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 37 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 266

    (38) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 326
    empty                          shift and go to state 212

state 267

    (39) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (164) PUSH_STACK_OPERATORS -> . empty
    (148) empty -> .

    lParenthesis    reduce using rule 148 (empty -> .)
    id              reduce using rule 148 (empty -> .)
    cte_i           reduce using rule 148 (empty -> .)
    cte_f           reduce using rule 148 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 327
    empty                          shift and go to state 212

state 268

    (40) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 328


state 269

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 329


state 270

    (113) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 330


state 271

    (114) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 331


state 272

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 332


state 273

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 333


state 274

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 334

state 275

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 335


state 276

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 336


state 277

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 337


state 278

    (121) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 338


state 279

    (122) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 339


state 280

    (123) MEAN_A -> empty .

    rParenthesis    reduce using rule 123 (MEAN_A -> empty .)


state 281

    (124) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 340


state 282

    (125) MODE_A -> comma . id MODE_A

    id              shift and go to state 341


state 283

    (126) MODE_A -> empty .

    rParenthesis    reduce using rule 126 (MODE_A -> empty .)


state 284

    (127) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 342


state 285

    (128) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 343


state 286

    (129) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 129 (MEDIAN_A -> empty .)


state 287

    (130) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 344


state 288

    (131) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 345


state 289

    (132) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 132 (PROBABILITY_A -> empty .)


state 290

    (133) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 346


state 291

    (134) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 347


state 292

    (135) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 135 (FREQUENCY_A -> empty .)


state 293

    (136) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 348


state 294

    (137) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 349


state 295

    (138) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 138 (VARIANCE_A -> empty .)


state 296

    (139) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 350


state 297

    (140) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 351


state 298

    (141) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 141 (STANDARD_DEVIATION_A -> empty .)


state 299

    (142) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 352


state 300

    (143) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 353


state 301

    (144) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 144 (SKEWNESS_A -> empty .)


state 302

    (145) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 354


state 303

    (146) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 355


state 304

    (147) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 147 (KURTOSI_A -> empty .)


state 305

    (65) ISLIST -> lSqrBracket EXP rSqrBracket .

    rSqrBracket     reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    times           reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    divide          reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    plus            reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    minus           reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greater         reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThan        reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greaterEquals   reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThanEquals  reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    equals          reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    notEquals       reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    and             reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    or              reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    semicolon       reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rParenthesis    reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    comma           reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    assign          reduce using rule 65 (ISLIST -> lSqrBracket EXP rSqrBracket .)


state 306

    (17) LIST_A -> comma LIST .

    semicolon       reduce using rule 17 (LIST_A -> comma LIST .)


state 307

    (16) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    lSqrBracket     shift and go to state 48


state 308

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (156) END_PROCEDURE -> . empty
    (148) empty -> .

    func            reduce using rule 148 (empty -> .)
    void            reduce using rule 148 (empty -> .)

    END_PROCEDURE                  shift and go to state 356
    empty                          shift and go to state 357

state 309

    (83) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (84) PARAMS_A -> . comma PARAMS
    (85) PARAMS_A -> . empty
    (148) empty -> .

    comma           shift and go to state 359
    rParenthesis    reduce using rule 148 (empty -> .)

    PARAMS_A                       shift and go to state 358
    empty                          shift and go to state 360

state 310

    (153) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 153 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 153 (INCREMENT_PARAM_COUNTER -> empty .)


state 311

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 361
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 312

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP . VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (160) VALIDATE_PARAMETER -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 362
    empty                          shift and go to state 363

state 313

    (69) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 364

state 314

    (171) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 171 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 315

    (72) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 365


state 316

    (73) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPRESSION                     shift and go to state 366
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 317

    (74) WRITE_A -> empty .

    rParenthesis    reduce using rule 74 (WRITE_A -> empty .)


state 318

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (171) GENERATE_GOTOF_CONDITIONAL -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 367
    empty                          shift and go to state 314

state 319

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (19) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (20) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (24) EXPRESSION -> . EXP
    (25) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 148
    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXPLOG                         shift and go to state 368
    EXPRESSION                     shift and go to state 147
    EXP                            shift and go to state 149
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 320

    (62) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 62 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 321

    (20) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 20 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 20 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 322

    (25) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 25 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 25 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 25 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 25 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 25 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 323

    (168) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 168 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 168 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 168 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 168 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 168 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 324

    (34) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 369
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 325

    (35) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 370
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 326

    (38) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    TERM                           shift and go to state 371
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 327

    (39) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    TERM                           shift and go to state 372
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 328

    (40) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (165) POP_STACK_OPERATORS -> . empty
    (148) empty -> .

    times           reduce using rule 148 (empty -> .)
    divide          reduce using rule 148 (empty -> .)
    plus            reduce using rule 148 (empty -> .)
    minus           reduce using rule 148 (empty -> .)
    greater         reduce using rule 148 (empty -> .)
    lessThan        reduce using rule 148 (empty -> .)
    greaterEquals   reduce using rule 148 (empty -> .)
    lessThanEquals  reduce using rule 148 (empty -> .)
    equals          reduce using rule 148 (empty -> .)
    notEquals       reduce using rule 148 (empty -> .)
    and             reduce using rule 148 (empty -> .)
    or              reduce using rule 148 (empty -> .)
    semicolon       reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)
    comma           reduce using rule 148 (empty -> .)
    rSqrBracket     reduce using rule 148 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 373
    empty                          shift and go to state 374

state 329

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 375


state 330

    (113) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 376


state 331

    (114) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 377


state 332

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 378


state 333

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 379


state 334

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 380


state 335

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 381


state 336

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 382


state 337

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 383


state 338

    (121) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 384


state 339

    (122) MEAN_A -> comma id . MEAN_A
    (122) MEAN_A -> . comma id MEAN_A
    (123) MEAN_A -> . empty
    (148) empty -> .

    comma           shift and go to state 279
    rParenthesis    reduce using rule 148 (empty -> .)

    MEAN_A                         shift and go to state 385
    empty                          shift and go to state 280

state 340

    (124) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 386


state 341

    (125) MODE_A -> comma id . MODE_A
    (125) MODE_A -> . comma id MODE_A
    (126) MODE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 282
    rParenthesis    reduce using rule 148 (empty -> .)

    MODE_A                         shift and go to state 387
    empty                          shift and go to state 283

state 342

    (127) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 388


state 343

    (128) MEDIAN_A -> comma id . MEDIAN_A
    (128) MEDIAN_A -> . comma id MEDIAN_A
    (129) MEDIAN_A -> . empty
    (148) empty -> .

    comma           shift and go to state 285
    rParenthesis    reduce using rule 148 (empty -> .)

    MEDIAN_A                       shift and go to state 389
    empty                          shift and go to state 286

state 344

    (130) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 390


state 345

    (131) PROBABILITY_A -> comma id . PROBABILITY_A
    (131) PROBABILITY_A -> . comma id PROBABILITY_A
    (132) PROBABILITY_A -> . empty
    (148) empty -> .

    comma           shift and go to state 288
    rParenthesis    reduce using rule 148 (empty -> .)

    PROBABILITY_A                  shift and go to state 391
    empty                          shift and go to state 289

state 346

    (133) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 392


state 347

    (134) FREQUENCY_A -> comma id . FREQUENCY_A
    (134) FREQUENCY_A -> . comma id FREQUENCY_A
    (135) FREQUENCY_A -> . empty
    (148) empty -> .

    comma           shift and go to state 291
    rParenthesis    reduce using rule 148 (empty -> .)

    FREQUENCY_A                    shift and go to state 393
    empty                          shift and go to state 292

state 348

    (136) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 394


state 349

    (137) VARIANCE_A -> comma id . VARIANCE_A
    (137) VARIANCE_A -> . comma id VARIANCE_A
    (138) VARIANCE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 294
    rParenthesis    reduce using rule 148 (empty -> .)

    VARIANCE_A                     shift and go to state 395
    empty                          shift and go to state 295

state 350

    (139) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 396


state 351

    (140) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (140) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (141) STANDARD_DEVIATION_A -> . empty
    (148) empty -> .

    comma           shift and go to state 297
    rParenthesis    reduce using rule 148 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 397
    empty                          shift and go to state 298

state 352

    (142) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 398


state 353

    (143) SKEWNESS_A -> comma id . SKEWNESS_A
    (143) SKEWNESS_A -> . comma id SKEWNESS_A
    (144) SKEWNESS_A -> . empty
    (148) empty -> .

    comma           shift and go to state 300
    rParenthesis    reduce using rule 148 (empty -> .)

    SKEWNESS_A                     shift and go to state 399
    empty                          shift and go to state 301

state 354

    (145) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 400


state 355

    (146) KURTOSI_A -> comma id . KURTOSI_A
    (146) KURTOSI_A -> . comma id KURTOSI_A
    (147) KURTOSI_A -> . empty
    (148) empty -> .

    comma           shift and go to state 303
    rParenthesis    reduce using rule 148 (empty -> .)

    KURTOSI_A                      shift and go to state 401
    empty                          shift and go to state 304

state 356

    (80) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 80 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 80 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 357

    (156) END_PROCEDURE -> empty .

    func            reduce using rule 156 (END_PROCEDURE -> empty .)
    void            reduce using rule 156 (END_PROCEDURE -> empty .)


state 358

    (83) PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 83 (PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 359

    (84) PARAMS_A -> comma . PARAMS
    (83) PARAMS -> . TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (45) TYPE -> . int SAVE_TYPE
    (46) TYPE -> . float SAVE_TYPE
    (47) TYPE -> . string SAVE_TYPE
    (48) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 23
    float           shift and go to state 24
    string          shift and go to state 25
    bool            shift and go to state 26

    PARAMS                         shift and go to state 402
    TYPE                           shift and go to state 66

state 360

    (85) PARAMS_A -> empty .

    rParenthesis    reduce using rule 85 (PARAMS_A -> empty .)


state 361

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (170) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (148) empty -> .

    semicolon       reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 403
    empty                          shift and go to state 404

state 362

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER . METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (89) METHODCALL_A -> . comma EXP
    (90) METHODCALL_A -> . empty
    (148) empty -> .

    comma           shift and go to state 406
    rParenthesis    reduce using rule 148 (empty -> .)

    METHODCALL_A                   shift and go to state 405
    empty                          shift and go to state 407

state 363

    (160) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 160 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 160 (VALIDATE_PARAMETER -> empty .)


state 364

    (69) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (70) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (71) CONDITION_A -> . empty
    (148) empty -> .

    else            shift and go to state 409
    id              reduce using rule 148 (empty -> .)
    if              reduce using rule 148 (empty -> .)
    print           reduce using rule 148 (empty -> .)
    while           reduce using rule 148 (empty -> .)
    do              reduce using rule 148 (empty -> .)
    scan            reduce using rule 148 (empty -> .)
    return          reduce using rule 148 (empty -> .)
    ols             reduce using rule 148 (empty -> .)
    las             reduce using rule 148 (empty -> .)
    rid             reduce using rule 148 (empty -> .)
    kmeans          reduce using rule 148 (empty -> .)
    mbm             reduce using rule 148 (empty -> .)
    tseries         reduce using rule 148 (empty -> .)
    mean_abs_err    reduce using rule 148 (empty -> .)
    mean_sqr_err    reduce using rule 148 (empty -> .)
    median_abs_err  reduce using rule 148 (empty -> .)
    mean            reduce using rule 148 (empty -> .)
    mode            reduce using rule 148 (empty -> .)
    median          reduce using rule 148 (empty -> .)
    prob            reduce using rule 148 (empty -> .)
    freq            reduce using rule 148 (empty -> .)
    variance        reduce using rule 148 (empty -> .)
    stddev          reduce using rule 148 (empty -> .)
    skew            reduce using rule 148 (empty -> .)
    kurt            reduce using rule 148 (empty -> .)
    rCurlyBracket   reduce using rule 148 (empty -> .)

    CONDITION_A                    shift and go to state 408
    empty                          shift and go to state 410

state 365

    (72) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 411


state 366

    (73) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (177) GENERATE_QUAD_PRINT -> . empty
    (148) empty -> .

    comma           reduce using rule 148 (empty -> .)
    rParenthesis    reduce using rule 148 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 412
    empty                          shift and go to state 243

state 367

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 413

state 368

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 414


state 369

    (34) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 34 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 370

    (35) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 35 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 371

    (38) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 38 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 372

    (39) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 39 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 373

    (40) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 40 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 374

    (165) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 165 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 165 (POP_STACK_OPERATORS -> empty .)


state 375

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 415

state 376

    (113) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 416

state 377

    (114) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 417

state 378

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 418

state 379

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 419

state 380

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 420


state 381

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 421


state 382

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 422


state 383

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 423


state 384

    (121) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 121 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 385

    (122) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 122 (MEAN_A -> comma id MEAN_A .)


state 386

    (124) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 124 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 387

    (125) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 125 (MODE_A -> comma id MODE_A .)


state 388

    (127) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 127 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 389

    (128) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 128 (MEDIAN_A -> comma id MEDIAN_A .)


state 390

    (130) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 130 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 391

    (131) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 131 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 392

    (133) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 393

    (134) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 134 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 394

    (136) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 136 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 395

    (137) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 137 (VARIANCE_A -> comma id VARIANCE_A .)


state 396

    (139) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 139 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 397

    (140) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 140 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 398

    (142) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 142 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 399

    (143) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 143 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 400

    (145) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 145 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 401

    (146) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 146 (KURTOSI_A -> comma id KURTOSI_A .)


state 402

    (84) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 84 (PARAMS_A -> comma PARAMS .)


state 403

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 424


state 404

    (170) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 170 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 405

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 425


state 406

    (89) METHODCALL_A -> comma . EXP
    (32) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (33) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (36) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (37) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (40) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (41) FACTOR -> . VARCONSTAUX
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 152
    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    EXP                            shift and go to state 426
    TERM                           shift and go to state 150
    FACTOR                         shift and go to state 151
    VARCONSTAUX                    shift and go to state 153

state 407

    (90) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 90 (METHODCALL_A -> empty .)


state 408

    (69) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (172) SOLVE_OPERATION_CONDITIONAL -> . empty
    (148) empty -> .

    id              reduce using rule 148 (empty -> .)
    if              reduce using rule 148 (empty -> .)
    print           reduce using rule 148 (empty -> .)
    while           reduce using rule 148 (empty -> .)
    do              reduce using rule 148 (empty -> .)
    scan            reduce using rule 148 (empty -> .)
    return          reduce using rule 148 (empty -> .)
    ols             reduce using rule 148 (empty -> .)
    las             reduce using rule 148 (empty -> .)
    rid             reduce using rule 148 (empty -> .)
    kmeans          reduce using rule 148 (empty -> .)
    mbm             reduce using rule 148 (empty -> .)
    tseries         reduce using rule 148 (empty -> .)
    mean_abs_err    reduce using rule 148 (empty -> .)
    mean_sqr_err    reduce using rule 148 (empty -> .)
    median_abs_err  reduce using rule 148 (empty -> .)
    mean            reduce using rule 148 (empty -> .)
    mode            reduce using rule 148 (empty -> .)
    median          reduce using rule 148 (empty -> .)
    prob            reduce using rule 148 (empty -> .)
    freq            reduce using rule 148 (empty -> .)
    variance        reduce using rule 148 (empty -> .)
    stddev          reduce using rule 148 (empty -> .)
    skew            reduce using rule 148 (empty -> .)
    kurt            reduce using rule 148 (empty -> .)
    rCurlyBracket   reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 427
    empty                          shift and go to state 428

state 409

    (70) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (173) GENERATE_GOTO_CONDITIONAL -> . empty
    (148) empty -> .

    lCurlyBracket   reduce using rule 148 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 429
    empty                          shift and go to state 430

state 410

    (71) CONDITION_A -> empty .

    id              reduce using rule 71 (CONDITION_A -> empty .)
    if              reduce using rule 71 (CONDITION_A -> empty .)
    print           reduce using rule 71 (CONDITION_A -> empty .)
    while           reduce using rule 71 (CONDITION_A -> empty .)
    do              reduce using rule 71 (CONDITION_A -> empty .)
    scan            reduce using rule 71 (CONDITION_A -> empty .)
    return          reduce using rule 71 (CONDITION_A -> empty .)
    ols             reduce using rule 71 (CONDITION_A -> empty .)
    las             reduce using rule 71 (CONDITION_A -> empty .)
    rid             reduce using rule 71 (CONDITION_A -> empty .)
    kmeans          reduce using rule 71 (CONDITION_A -> empty .)
    mbm             reduce using rule 71 (CONDITION_A -> empty .)
    tseries         reduce using rule 71 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 71 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 71 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 71 (CONDITION_A -> empty .)
    mean            reduce using rule 71 (CONDITION_A -> empty .)
    mode            reduce using rule 71 (CONDITION_A -> empty .)
    median          reduce using rule 71 (CONDITION_A -> empty .)
    prob            reduce using rule 71 (CONDITION_A -> empty .)
    freq            reduce using rule 71 (CONDITION_A -> empty .)
    variance        reduce using rule 71 (CONDITION_A -> empty .)
    stddev          reduce using rule 71 (CONDITION_A -> empty .)
    skew            reduce using rule 71 (CONDITION_A -> empty .)
    kurt            reduce using rule 71 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 71 (CONDITION_A -> empty .)


state 411

    (72) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 72 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 412

    (73) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (73) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (74) WRITE_A -> . empty
    (148) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 148 (empty -> .)

    WRITE_A                        shift and go to state 431
    empty                          shift and go to state 317

state 413

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (175) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (148) empty -> .

    id              reduce using rule 148 (empty -> .)
    if              reduce using rule 148 (empty -> .)
    print           reduce using rule 148 (empty -> .)
    while           reduce using rule 148 (empty -> .)
    do              reduce using rule 148 (empty -> .)
    scan            reduce using rule 148 (empty -> .)
    return          reduce using rule 148 (empty -> .)
    ols             reduce using rule 148 (empty -> .)
    las             reduce using rule 148 (empty -> .)
    rid             reduce using rule 148 (empty -> .)
    kmeans          reduce using rule 148 (empty -> .)
    mbm             reduce using rule 148 (empty -> .)
    tseries         reduce using rule 148 (empty -> .)
    mean_abs_err    reduce using rule 148 (empty -> .)
    mean_sqr_err    reduce using rule 148 (empty -> .)
    median_abs_err  reduce using rule 148 (empty -> .)
    mean            reduce using rule 148 (empty -> .)
    mode            reduce using rule 148 (empty -> .)
    median          reduce using rule 148 (empty -> .)
    prob            reduce using rule 148 (empty -> .)
    freq            reduce using rule 148 (empty -> .)
    variance        reduce using rule 148 (empty -> .)
    stddev          reduce using rule 148 (empty -> .)
    skew            reduce using rule 148 (empty -> .)
    kurt            reduce using rule 148 (empty -> .)
    rCurlyBracket   reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 432
    empty                          shift and go to state 433

state 414

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (176) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (148) empty -> .

    id              reduce using rule 148 (empty -> .)
    if              reduce using rule 148 (empty -> .)
    print           reduce using rule 148 (empty -> .)
    while           reduce using rule 148 (empty -> .)
    do              reduce using rule 148 (empty -> .)
    scan            reduce using rule 148 (empty -> .)
    return          reduce using rule 148 (empty -> .)
    ols             reduce using rule 148 (empty -> .)
    las             reduce using rule 148 (empty -> .)
    rid             reduce using rule 148 (empty -> .)
    kmeans          reduce using rule 148 (empty -> .)
    mbm             reduce using rule 148 (empty -> .)
    tseries         reduce using rule 148 (empty -> .)
    mean_abs_err    reduce using rule 148 (empty -> .)
    mean_sqr_err    reduce using rule 148 (empty -> .)
    median_abs_err  reduce using rule 148 (empty -> .)
    mean            reduce using rule 148 (empty -> .)
    mode            reduce using rule 148 (empty -> .)
    median          reduce using rule 148 (empty -> .)
    prob            reduce using rule 148 (empty -> .)
    freq            reduce using rule 148 (empty -> .)
    variance        reduce using rule 148 (empty -> .)
    stddev          reduce using rule 148 (empty -> .)
    skew            reduce using rule 148 (empty -> .)
    kurt            reduce using rule 148 (empty -> .)
    rCurlyBracket   reduce using rule 148 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 434
    empty                          shift and go to state 435

state 415

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 436


state 416

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 437


state 417

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 438


state 418

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 439


state 419

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 440


state 420

    (117) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 117 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 421

    (118) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 118 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 422

    (119) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 119 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 423

    (120) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 120 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 424

    (61) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 61 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 425

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 441


state 426

    (89) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 89 (METHODCALL_A -> comma EXP .)


state 427

    (69) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 69 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 428

    (172) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 172 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 429

    (70) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (49) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 52

    BLOCK                          shift and go to state 442

state 430

    (173) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 173 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 431

    (73) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 73 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 432

    (86) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 86 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 433

    (175) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 175 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 434

    (87) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 87 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 435

    (176) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 176 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 436

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 443

state 437

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 444

state 438

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 445

state 439

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 446

state 440

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 447

state 441

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon . VALIDATE_METHOD_CALL
    (161) VALIDATE_METHOD_CALL -> . empty
    (148) empty -> .

    id              reduce using rule 148 (empty -> .)
    if              reduce using rule 148 (empty -> .)
    print           reduce using rule 148 (empty -> .)
    while           reduce using rule 148 (empty -> .)
    do              reduce using rule 148 (empty -> .)
    scan            reduce using rule 148 (empty -> .)
    return          reduce using rule 148 (empty -> .)
    ols             reduce using rule 148 (empty -> .)
    las             reduce using rule 148 (empty -> .)
    rid             reduce using rule 148 (empty -> .)
    kmeans          reduce using rule 148 (empty -> .)
    mbm             reduce using rule 148 (empty -> .)
    tseries         reduce using rule 148 (empty -> .)
    mean_abs_err    reduce using rule 148 (empty -> .)
    mean_sqr_err    reduce using rule 148 (empty -> .)
    median_abs_err  reduce using rule 148 (empty -> .)
    mean            reduce using rule 148 (empty -> .)
    mode            reduce using rule 148 (empty -> .)
    median          reduce using rule 148 (empty -> .)
    prob            reduce using rule 148 (empty -> .)
    freq            reduce using rule 148 (empty -> .)
    variance        reduce using rule 148 (empty -> .)
    stddev          reduce using rule 148 (empty -> .)
    skew            reduce using rule 148 (empty -> .)
    kurt            reduce using rule 148 (empty -> .)
    rCurlyBracket   reduce using rule 148 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 448
    empty                          shift and go to state 449

state 442

    (70) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 70 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 443

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 450


state 444

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 451


state 445

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 452


state 446

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 453


state 447

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 454


state 448

    (88) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 88 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 449

    (161) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 161 (VALIDATE_METHOD_CALL -> empty .)


state 450

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 455

state 451

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 456

state 452

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 457

state 453

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 458

state 454

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 459

state 455

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 460


state 456

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 461


state 457

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 462


state 458

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 463


state 459

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 464


state 460

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 465

state 461

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 466

state 462

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 467

state 463

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 468


state 464

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 469

state 465

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 470


state 466

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 471


state 467

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 472


state 468

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 473


state 469

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 474


state 470

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 475


state 471

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 476

state 472

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 477

state 473

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 478

state 474

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 479

state 475

    (112) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 112 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 476

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 480


state 477

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 481


state 478

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 482


state 479

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 483


state 480

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 484

state 481

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 485

state 482

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 486

state 483

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 487

state 484

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 488


state 485

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 489


state 486

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 490


state 487

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 491


state 488

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 492

state 489

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 493


state 490

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 494

state 491

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 495

state 492

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 496


state 493

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 497


state 494

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 498


state 495

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 499


state 496

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 500

state 497

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 501

state 498

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 502

state 499

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 503

state 500

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 504


state 501

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 505


state 502

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 506


state 503

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 507


state 504

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 508


state 505

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 509


state 506

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 510


state 507

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 511

state 508

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 512


state 509

    (114) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 114 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 510

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 513


state 511

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 514


state 512

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 515


state 513

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 516


state 514

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (42) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (43) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (44) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 59
    cte_i           shift and go to state 61
    cte_f           shift and go to state 62

    VARCONSTAUX                    shift and go to state 517

state 515

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 518


state 516

    (115) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 115 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 517

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 519


state 518

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (92) BOOLEAN -> . FALSE
    (93) BOOLEAN -> . TRUE

    FALSE           shift and go to state 192
    TRUE            shift and go to state 193

    BOOLEAN                        shift and go to state 520

state 519

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 521


state 520

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 522


state 521

    (116) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 116 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 522

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 523


state 523

    (113) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 113 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

