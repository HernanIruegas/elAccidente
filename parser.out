Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
Rule 2     PROGRAM_A -> VARS PROGRAM_A
Rule 3     PROGRAM_A -> METHOD PROGRAM_B
Rule 4     PROGRAM_A -> empty
Rule 5     PROGRAM_B -> METHOD PROGRAM_B
Rule 6     PROGRAM_B -> empty
Rule 7     VARS -> var TYPE colon VARS_A semicolon VARS_B
Rule 8     VARS_A -> id assign VARCTE_AUX_VARS SIMPLE
Rule 9     VARS_A -> id SAVE_VAR SIMPLE
Rule 10    VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
Rule 11    VARS_A -> empty
Rule 12    VARS_B -> VARS
Rule 13    VARS_B -> empty
Rule 14    SIMPLE -> comma VARS_A
Rule 15    SIMPLE -> empty
Rule 16    LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
Rule 17    LIST -> empty
Rule 18    LIST_A -> comma VARS_A
Rule 19    LIST_A -> empty
Rule 20    VARCTE_AUX_VARS -> id ISLIST
Rule 21    VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 22    VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 23    VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
Rule 24    VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS
Rule 25    BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR
Rule 26    BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR
Rule 27    VALIDATE_NAME_ARRAY -> empty
Rule 28    ACUMULATE_R -> empty
Rule 29    CALCULATE_ARRAY -> empty
Rule 30    EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 31    EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
Rule 32    EXPLOG_A -> and EXPLOG
Rule 33    EXPLOG_A -> or EXPLOG
Rule 34    EXPLOG_A -> empty
Rule 35    EXPRESSION -> EXP
Rule 36    EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
Rule 37    EXPRESSION_A -> greater PUSH_STACK_OPERATORS
Rule 38    EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS
Rule 39    EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS
Rule 40    EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS
Rule 41    EXPRESSION_A -> equals PUSH_STACK_OPERATORS
Rule 42    EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS
Rule 43    EXP -> TERM SOLVE_OPERATION_SUM_MINUS
Rule 44    EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A
Rule 45    EXP_A -> plus PUSH_STACK_OPERATORS EXP
Rule 46    EXP_A -> minus PUSH_STACK_OPERATORS EXP
Rule 47    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE
Rule 48    TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
Rule 49    TERM_A -> times PUSH_STACK_OPERATORS TERM
Rule 50    TERM_A -> divide PUSH_STACK_OPERATORS TERM
Rule 51    FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
Rule 52    FACTOR -> VARCONSTAUX
Rule 53    VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST
Rule 54    VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 55    VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 56    TYPE -> int SAVE_TYPE
Rule 57    TYPE -> float SAVE_TYPE
Rule 58    TYPE -> string SAVE_TYPE
Rule 59    TYPE -> bool SAVE_TYPE
Rule 60    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 61    BLOCK_A -> STATEMENT BLOCK_A
Rule 62    BLOCK_A -> empty
Rule 63    STATEMENT -> ASSIGNMENT
Rule 64    STATEMENT -> CONDITION
Rule 65    STATEMENT -> WRITE
Rule 66    STATEMENT -> PRE_CONDITIONAL_LOOP
Rule 67    STATEMENT -> POST_CONDITIONAL_LOOP
Rule 68    STATEMENT -> METHODCALL
Rule 69    STATEMENT -> READ
Rule 70    STATEMENT -> STATMETHODS
Rule 71    STATEMENT -> RETURN
Rule 72    ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
Rule 73    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 74    READ_A -> comma
Rule 75    READ_A -> empty
Rule 76    ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
Rule 77    ISLIST -> empty SOLVE_OFFSETS
Rule 78    VALIDATE_INDEX -> empty
Rule 79    SOLVE_OFFSETS -> empty
Rule 80    TYPEMETHOD -> TYPE
Rule 81    TYPEMETHOD -> void SAVE_TYPE
Rule 82    CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
Rule 83    CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK
Rule 84    CONDITION_A -> empty
Rule 85    WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
Rule 86    WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
Rule 87    WRITE_A -> empty
Rule 88    VARCTE -> id ISLIST
Rule 89    VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT
Rule 90    VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT
Rule 91    VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT
Rule 92    VARCTE -> BOOLEAN
Rule 93    METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
Rule 94    METHOD_A -> PARAMS
Rule 95    METHOD_A -> empty
Rule 96    PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
Rule 97    PARAMS_A -> comma PARAMS
Rule 98    PARAMS_A -> empty
Rule 99    PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
Rule 100   POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
Rule 101   METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
Rule 102   METHODCALL_A -> comma EXP
Rule 103   METHODCALL_A -> empty
Rule 104   RETURN -> return EXPLOG semicolon
Rule 105   BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT
Rule 106   BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT
Rule 107   STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 108   STATMETHODS -> LASSO
Rule 109   STATMETHODS -> RIDGE
Rule 110   STATMETHODS -> K_MEANS
Rule 111   STATMETHODS -> MINI_BATCH_MEANS
Rule 112   STATMETHODS -> TIME_SERIES_SPLIT
Rule 113   STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 114   STATMETHODS -> MEAN_SQUARED_ERROR
Rule 115   STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 116   STATMETHODS -> MEAN
Rule 117   STATMETHODS -> MODE
Rule 118   STATMETHODS -> MEDIAN
Rule 119   STATMETHODS -> PROBABILITY
Rule 120   STATMETHODS -> FREQUENCY
Rule 121   STATMETHODS -> VARIANCE
Rule 122   STATMETHODS -> STANDARD_DEVIATION
Rule 123   STATMETHODS -> SKEWNESS
Rule 124   STATMETHODS -> KURTOSI
Rule 125   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 126   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 127   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 128   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 129   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 130   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 131   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 132   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 133   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 134   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 135   MEAN_A -> comma id MEAN_A
Rule 136   MEAN_A -> empty
Rule 137   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 138   MODE_A -> comma id MODE_A
Rule 139   MODE_A -> empty
Rule 140   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 141   MEDIAN_A -> comma id MEDIAN_A
Rule 142   MEDIAN_A -> empty
Rule 143   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 144   PROBABILITY_A -> comma id PROBABILITY_A
Rule 145   PROBABILITY_A -> empty
Rule 146   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 147   FREQUENCY_A -> comma id FREQUENCY_A
Rule 148   FREQUENCY_A -> empty
Rule 149   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 150   VARIANCE_A -> comma id VARIANCE_A
Rule 151   VARIANCE_A -> empty
Rule 152   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 153   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 154   STANDARD_DEVIATION_A -> empty
Rule 155   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 156   SKEWNESS_A -> comma id SKEWNESS_A
Rule 157   SKEWNESS_A -> empty
Rule 158   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 159   KURTOSI_A -> comma id KURTOSI_A
Rule 160   KURTOSI_A -> empty
Rule 161   empty -> <empty>
Rule 162   START_FUNCTION -> empty
Rule 163   SAVE_TYPE -> empty
Rule 164   SAVE_VAR -> empty
Rule 165   SAVE_ASSIGNED_VAR -> empty
Rule 166   SAVE_PARAM -> empty
Rule 167   INCREMENT_PARAM_COUNTER -> empty
Rule 168   SAVE_COUNTER_PARAM -> empty
Rule 169   SAVE_COUNTER_QUAD -> empty
Rule 170   END_PROCEDURE -> empty
Rule 171   SAVE_PARAM_TYPE -> empty
Rule 172   VALIDATE_FUNCTION_NAME -> empty
Rule 173   ERA -> empty
Rule 174   VALIDATE_PARAMETER -> empty
Rule 175   VALIDATE_METHOD_CALL -> empty
Rule 176   PUSH_STACK_OPERANDS -> empty
Rule 177   PUSH_STACK_OPERANDS_CONSTANT -> empty
Rule 178   PUSH_STACK_OPERATORS -> empty
Rule 179   POP_STACK_OPERATORS -> empty
Rule 180   SOLVE_OPERATION_SUM_MINUS -> empty
Rule 181   SOLVE_OPERATION_TIMES_DIVIDE -> empty
Rule 182   SOLVE_OPERATION_RELATIONSHIP -> empty
Rule 183   SOLVE_OPERATION_LOGIC -> empty
Rule 184   SOLVE_OPERATION_ASSIGNMENT -> empty
Rule 185   GENERATE_GOTOF_CONDITIONAL -> empty
Rule 186   SOLVE_OPERATION_CONDITIONAL -> empty
Rule 187   GENERATE_GOTO_CONDITIONAL -> empty
Rule 188   PUSH_STACK_JUMPS -> empty
Rule 189   SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty
Rule 190   SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty
Rule 191   GENERATE_QUAD_PRINT -> empty
Rule 192   PRINTQUADS -> empty

Terminals, with rules where they appear

FALSE                : 25 105
TRUE                 : 26 106
and                  : 32
assign               : 8 72
bool                 : 59
colon                : 7
comma                : 14 18 74 86 97 102 125 125 125 125 125 126 126 126 126 126 126 126 126 126 126 126 126 127 127 127 127 127 127 127 127 127 128 128 128 128 128 128 128 128 128 128 129 129 129 129 129 129 129 129 129 129 129 130 131 132 133 135 138 141 144 147 150 153 156 159
cte_f                : 22 55 90
cte_i                : 10 16 21 54 89
cte_str              : 23 91
divide               : 50
do                   : 100
else                 : 83
equals               : 41
error                : 
float                : 57 126
freq                 : 146
func                 : 93
globalFunc           : 1
greater              : 37
greaterEquals        : 39
id                   : 8 9 10 20 53 72 88 93 96 101 125 125 126 126 127 127 131 131 132 132 133 133 134 135 137 138 140 141 143 144 146 147 149 150 152 153 155 156 158 159
if                   : 82
int                  : 56
kmeans               : 128
kurt                 : 158
lCurlyBracket        : 60
lParenthesis         : 51 73 82 85 93 99 100 101 125 126 127 128 129 130 131 132 133 134 137 140 143 146 149 152 155 158
lSqrBracket          : 10 16 76
las                  : 126
lessThan             : 38
lessThanEquals       : 40
mbm                  : 129
mean                 : 134
mean_abs_err         : 131
mean_sqr_err         : 132
median               : 140
median_abs_err       : 133
minus                : 46
mode                 : 137
not                  : 31
notEquals            : 42
ols                  : 125
or                   : 33
plus                 : 45
print                : 85
prob                 : 143
program              : 1
rCurlyBracket        : 60
rParenthesis         : 51 73 82 85 93 99 100 101 125 126 127 128 129 130 131 132 133 134 137 140 143 146 149 152 155 158
rSqrBracket          : 10 16 76
return               : 104
rid                  : 127
scan                 : 73
semicolon            : 1 7 72 85 101 104 125 126 127 128 129 130 131 132 133 134 137 140 143 146 149 152 155 158
skew                 : 155
start                : 1
stddev               : 152
string               : 58 126 127 128 128 128 129
times                : 49
tseries              : 130
var                  : 7
variance             : 149
void                 : 1 1 81
while                : 99 100

Nonterminals, with rules where they appear

ACUMULATE_R          : 10 16
ASSIGNMENT           : 63
BLOCK                : 1 82 83 93 99 100
BLOCK_A              : 60 61
BOOLEAN              : 92 125 125 125 126 126 126 126 126 126 127 127 127 128 129 129
BOOLEAN_AUX_VARS     : 24
CALCULATE_ARRAY      : 10
CONDITION            : 64
CONDITION_A          : 82
END_PROCEDURE        : 93
ERA                  : 101
EXP                  : 35 36 36 45 46 76 101 102
EXPLOG               : 32 33 51 72 82 99 100 104
EXPLOG_A             : 30 31
EXPRESSION           : 30 31 85 86
EXPRESSION_A         : 36
EXP_A                : 44
FACTOR               : 47 48
FREQUENCY            : 120
FREQUENCY_A          : 146 147
GENERATE_GOTOF_CONDITIONAL : 82 99
GENERATE_GOTO_CONDITIONAL : 83
GENERATE_QUAD_PRINT  : 85 86
INCREMENT_PARAM_COUNTER : 96
ISLIST               : 20 53 72 76 88
KURTOSI              : 124
KURTOSI_A            : 158 159
K_MEANS              : 110
LASSO                : 108
LIST                 : 10 16
LIST_A               : 10
MEAN                 : 116
MEAN_A               : 134 135
MEAN_ABSOLUTE_ERROR  : 113
MEAN_SQUARED_ERROR   : 114
MEDIAN               : 118
MEDIAN_A             : 140 141
MEDIAN_ABSOLUTE_ERROR : 115
METHOD               : 3 5
METHODCALL           : 68
METHODCALL_A         : 101
METHOD_A             : 93
MINI_BATCH_MEANS     : 111
MODE                 : 117
MODE_A               : 137 138
ORDINARY_LEAST_SQUARES : 107
PARAMS               : 94 97
PARAMS_A             : 96
POP_STACK_OPERATORS  : 51
POST_CONDITIONAL_LOOP : 67
PRE_CONDITIONAL_LOOP : 66
PRINTQUADS           : 1
PROBABILITY          : 119
PROBABILITY_A        : 143 144
PROGRAM              : 0
PROGRAM_A            : 1 2
PROGRAM_B            : 3 5
PUSH_STACK_JUMPS     : 99 100
PUSH_STACK_OPERANDS  : 53 72
PUSH_STACK_OPERANDS_CONSTANT : 21 22 23 54 55 89 90 91 105 106
PUSH_STACK_OPERATORS : 37 38 39 40 41 42 45 46 49 50 51 72
READ                 : 69
READ_A               : 73
RETURN               : 71
RIDGE                : 109
SAVE_ASSIGNED_VAR    : 21 22 23 25 26
SAVE_COUNTER_PARAM   : 93
SAVE_COUNTER_QUAD    : 93
SAVE_PARAM           : 96
SAVE_PARAM_TYPE      : 96
SAVE_TYPE            : 1 1 56 57 58 59 81
SAVE_VAR             : 9
SIMPLE               : 8 9
SKEWNESS             : 123
SKEWNESS_A           : 155 156
SOLVE_OFFSETS        : 77
SOLVE_OPERATION_ASSIGNMENT : 72
SOLVE_OPERATION_CONDITIONAL : 82
SOLVE_OPERATION_LOGIC : 30 31
SOLVE_OPERATION_POST_CONDITIONAL_LOOP : 100
SOLVE_OPERATION_PRE_CONDITIONAL_LOOP : 99
SOLVE_OPERATION_RELATIONSHIP : 36
SOLVE_OPERATION_SUM_MINUS : 43 44
SOLVE_OPERATION_TIMES_DIVIDE : 47 48
STANDARD_DEVIATION   : 122
STANDARD_DEVIATION_A : 152 153
START_FUNCTION       : 1 1 93
STATEMENT            : 61
STATMETHODS          : 70
TERM                 : 43 44 49 50
TERM_A               : 48
TIME_SERIES_SPLIT    : 112
TYPE                 : 7 80 96
TYPEMETHOD           : 93
VALIDATE_FUNCTION_NAME : 101
VALIDATE_INDEX       : 76
VALIDATE_METHOD_CALL : 101
VALIDATE_NAME_ARRAY  : 10
VALIDATE_PARAMETER   : 101
VARCONSTAUX          : 52 125 126 126 126 127 127 127 127 128 128 128 128 128 128 128 129 129 129 129 129 129 129 129 129 130 130
VARCTE               : 73
VARCTE_AUX_VARS      : 8
VARIANCE             : 121
VARIANCE_A           : 149 150
VARS                 : 2 12
VARS_A               : 7 14 18
VARS_B               : 7
WRITE                : 65
WRITE_A              : 85 86
empty                : 4 6 11 13 15 17 19 27 28 29 34 62 75 77 78 79 84 87 95 98 103 136 139 142 145 148 151 154 157 160 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 3


state 3

    (1) PROGRAM -> program void . SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    globalFunc      reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program void SAVE_TYPE . globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    globalFunc      shift and go to state 6


state 5

    (163) SAVE_TYPE -> empty .

    globalFunc      reduce using rule 163 (SAVE_TYPE -> empty .)
    start           reduce using rule 163 (SAVE_TYPE -> empty .)
    colon           reduce using rule 163 (SAVE_TYPE -> empty .)
    id              reduce using rule 163 (SAVE_TYPE -> empty .)


state 6

    (1) PROGRAM -> program void SAVE_TYPE globalFunc . START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (162) START_FUNCTION -> . empty
    (161) empty -> .

    semicolon       reduce using rule 161 (empty -> .)

    START_FUNCTION                 shift and go to state 7
    empty                          shift and go to state 8

state 7

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION . semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    semicolon       shift and go to state 9


state 8

    (162) START_FUNCTION -> empty .

    semicolon       reduce using rule 162 (START_FUNCTION -> empty .)
    lParenthesis    reduce using rule 162 (START_FUNCTION -> empty .)
    lCurlyBracket   reduce using rule 162 (START_FUNCTION -> empty .)


state 9

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon . PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (93) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (161) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 161 (empty -> .)

    PROGRAM_A                      shift and go to state 10
    VARS                           shift and go to state 11
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 10

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A . void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS

    void            shift and go to state 16


state 11

    (2) PROGRAM_A -> VARS . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_B
    (4) PROGRAM_A -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (93) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (161) empty -> .

    var             shift and go to state 14
    func            shift and go to state 15
    void            reduce using rule 161 (empty -> .)

    VARS                           shift and go to state 11
    PROGRAM_A                      shift and go to state 17
    METHOD                         shift and go to state 12
    empty                          shift and go to state 13

state 12

    (3) PROGRAM_A -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (93) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (161) empty -> .

    func            shift and go to state 15
    void            reduce using rule 161 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 19
    empty                          shift and go to state 20

state 13

    (4) PROGRAM_A -> empty .

    void            reduce using rule 4 (PROGRAM_A -> empty .)


state 14

    (7) VARS -> var . TYPE colon VARS_A semicolon VARS_B
    (56) TYPE -> . int SAVE_TYPE
    (57) TYPE -> . float SAVE_TYPE
    (58) TYPE -> . string SAVE_TYPE
    (59) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPE                           shift and go to state 21

state 15

    (93) METHOD -> func . TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (80) TYPEMETHOD -> . TYPE
    (81) TYPEMETHOD -> . void SAVE_TYPE
    (56) TYPE -> . int SAVE_TYPE
    (57) TYPE -> . float SAVE_TYPE
    (58) TYPE -> . string SAVE_TYPE
    (59) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 28
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    TYPEMETHOD                     shift and go to state 26
    TYPE                           shift and go to state 27

state 16

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void . SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    start           reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 29
    empty                          shift and go to state 5

state 17

    (2) PROGRAM_A -> VARS PROGRAM_A .

    void            reduce using rule 2 (PROGRAM_A -> VARS PROGRAM_A .)


state 18

    (5) PROGRAM_B -> METHOD . PROGRAM_B
    (5) PROGRAM_B -> . METHOD PROGRAM_B
    (6) PROGRAM_B -> . empty
    (93) METHOD -> . func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (161) empty -> .

    func            shift and go to state 15
    void            reduce using rule 161 (empty -> .)

    METHOD                         shift and go to state 18
    PROGRAM_B                      shift and go to state 30
    empty                          shift and go to state 20

state 19

    (3) PROGRAM_A -> METHOD PROGRAM_B .

    void            reduce using rule 3 (PROGRAM_A -> METHOD PROGRAM_B .)


state 20

    (6) PROGRAM_B -> empty .

    void            reduce using rule 6 (PROGRAM_B -> empty .)


state 21

    (7) VARS -> var TYPE . colon VARS_A semicolon VARS_B

    colon           shift and go to state 31


state 22

    (56) TYPE -> int . SAVE_TYPE
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    colon           reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 5

state 23

    (57) TYPE -> float . SAVE_TYPE
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    colon           reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 33
    empty                          shift and go to state 5

state 24

    (58) TYPE -> string . SAVE_TYPE
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    colon           reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 34
    empty                          shift and go to state 5

state 25

    (59) TYPE -> bool . SAVE_TYPE
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    colon           reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 35
    empty                          shift and go to state 5

state 26

    (93) METHOD -> func TYPEMETHOD . id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    id              shift and go to state 36


state 27

    (80) TYPEMETHOD -> TYPE .

    id              reduce using rule 80 (TYPEMETHOD -> TYPE .)


state 28

    (81) TYPEMETHOD -> void . SAVE_TYPE
    (163) SAVE_TYPE -> . empty
    (161) empty -> .

    id              reduce using rule 161 (empty -> .)

    SAVE_TYPE                      shift and go to state 37
    empty                          shift and go to state 5

state 29

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE . start START_FUNCTION BLOCK PRINTQUADS

    start           shift and go to state 38


state 30

    (5) PROGRAM_B -> METHOD PROGRAM_B .

    void            reduce using rule 5 (PROGRAM_B -> METHOD PROGRAM_B .)


state 31

    (7) VARS -> var TYPE colon . VARS_A semicolon VARS_B
    (8) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (9) VARS_A -> . id SAVE_VAR SIMPLE
    (10) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (11) VARS_A -> . empty
    (161) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 161 (empty -> .)

    VARS_A                         shift and go to state 39
    empty                          shift and go to state 41

state 32

    (56) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 56 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 56 (TYPE -> int SAVE_TYPE .)


state 33

    (57) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 57 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 57 (TYPE -> float SAVE_TYPE .)


state 34

    (58) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 58 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 58 (TYPE -> string SAVE_TYPE .)


state 35

    (59) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 59 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 59 (TYPE -> bool SAVE_TYPE .)


state 36

    (93) METHOD -> func TYPEMETHOD id . START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (162) START_FUNCTION -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)

    START_FUNCTION                 shift and go to state 42
    empty                          shift and go to state 8

state 37

    (81) TYPEMETHOD -> void SAVE_TYPE .

    id              reduce using rule 81 (TYPEMETHOD -> void SAVE_TYPE .)


state 38

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start . START_FUNCTION BLOCK PRINTQUADS
    (162) START_FUNCTION -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    START_FUNCTION                 shift and go to state 43
    empty                          shift and go to state 8

state 39

    (7) VARS -> var TYPE colon VARS_A . semicolon VARS_B

    semicolon       shift and go to state 44


state 40

    (8) VARS_A -> id . assign VARCTE_AUX_VARS SIMPLE
    (9) VARS_A -> id . SAVE_VAR SIMPLE
    (10) VARS_A -> id . VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (164) SAVE_VAR -> . empty
    (27) VALIDATE_NAME_ARRAY -> . empty
    (161) empty -> .

    assign          shift and go to state 45
    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    lSqrBracket     reduce using rule 161 (empty -> .)

    SAVE_VAR                       shift and go to state 46
    VALIDATE_NAME_ARRAY            shift and go to state 47
    empty                          shift and go to state 48

state 41

    (11) VARS_A -> empty .

    semicolon       reduce using rule 11 (VARS_A -> empty .)


state 42

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION . lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    lParenthesis    shift and go to state 49


state 43

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION . BLOCK PRINTQUADS
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 50

state 44

    (7) VARS -> var TYPE colon VARS_A semicolon . VARS_B
    (12) VARS_B -> . VARS
    (13) VARS_B -> . empty
    (7) VARS -> . var TYPE colon VARS_A semicolon VARS_B
    (161) empty -> .

  ! shift/reduce conflict for var resolved as shift
    var             shift and go to state 14
    func            reduce using rule 161 (empty -> .)
    void            reduce using rule 161 (empty -> .)

  ! var             [ reduce using rule 161 (empty -> .) ]

    VARS_B                         shift and go to state 52
    VARS                           shift and go to state 53
    empty                          shift and go to state 54

state 45

    (8) VARS_A -> id assign . VARCTE_AUX_VARS SIMPLE
    (20) VARCTE_AUX_VARS -> . id ISLIST
    (21) VARCTE_AUX_VARS -> . cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (22) VARCTE_AUX_VARS -> . cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (23) VARCTE_AUX_VARS -> . cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (24) VARCTE_AUX_VARS -> . BOOLEAN_AUX_VARS
    (25) BOOLEAN_AUX_VARS -> . FALSE SAVE_ASSIGNED_VAR
    (26) BOOLEAN_AUX_VARS -> . TRUE SAVE_ASSIGNED_VAR

    id              shift and go to state 55
    cte_i           shift and go to state 57
    cte_f           shift and go to state 58
    cte_str         shift and go to state 59
    FALSE           shift and go to state 61
    TRUE            shift and go to state 62

    VARCTE_AUX_VARS                shift and go to state 56
    BOOLEAN_AUX_VARS               shift and go to state 60

state 46

    (9) VARS_A -> id SAVE_VAR . SIMPLE
    (14) SIMPLE -> . comma VARS_A
    (15) SIMPLE -> . empty
    (161) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 161 (empty -> .)

    SIMPLE                         shift and go to state 63
    empty                          shift and go to state 65

state 47

    (10) VARS_A -> id VALIDATE_NAME_ARRAY . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    lSqrBracket     shift and go to state 66


state 48

    (164) SAVE_VAR -> empty .
    (27) VALIDATE_NAME_ARRAY -> empty .

    comma           reduce using rule 164 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 164 (SAVE_VAR -> empty .)
    lSqrBracket     reduce using rule 27 (VALIDATE_NAME_ARRAY -> empty .)


state 49

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis . METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (94) METHOD_A -> . PARAMS
    (95) METHOD_A -> . empty
    (96) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (161) empty -> .
    (56) TYPE -> . int SAVE_TYPE
    (57) TYPE -> . float SAVE_TYPE
    (58) TYPE -> . string SAVE_TYPE
    (59) TYPE -> . bool SAVE_TYPE

    rParenthesis    reduce using rule 161 (empty -> .)
    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    METHOD_A                       shift and go to state 67
    PARAMS                         shift and go to state 68
    empty                          shift and go to state 69
    TYPE                           shift and go to state 70

state 50

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK . PRINTQUADS
    (192) PRINTQUADS -> . empty
    (161) empty -> .

    $end            reduce using rule 161 (empty -> .)

    PRINTQUADS                     shift and go to state 71
    empty                          shift and go to state 72

state 51

    (60) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (61) BLOCK_A -> . STATEMENT BLOCK_A
    (62) BLOCK_A -> . empty
    (63) STATEMENT -> . ASSIGNMENT
    (64) STATEMENT -> . CONDITION
    (65) STATEMENT -> . WRITE
    (66) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (67) STATEMENT -> . POST_CONDITIONAL_LOOP
    (68) STATEMENT -> . METHODCALL
    (69) STATEMENT -> . READ
    (70) STATEMENT -> . STATMETHODS
    (71) STATEMENT -> . RETURN
    (161) empty -> .
    (72) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (82) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (85) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (99) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (100) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (101) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (73) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (107) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (108) STATMETHODS -> . LASSO
    (109) STATMETHODS -> . RIDGE
    (110) STATMETHODS -> . K_MEANS
    (111) STATMETHODS -> . MINI_BATCH_MEANS
    (112) STATMETHODS -> . TIME_SERIES_SPLIT
    (113) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (114) STATMETHODS -> . MEAN_SQUARED_ERROR
    (115) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (116) STATMETHODS -> . MEAN
    (117) STATMETHODS -> . MODE
    (118) STATMETHODS -> . MEDIAN
    (119) STATMETHODS -> . PROBABILITY
    (120) STATMETHODS -> . FREQUENCY
    (121) STATMETHODS -> . VARIANCE
    (122) STATMETHODS -> . STANDARD_DEVIATION
    (123) STATMETHODS -> . SKEWNESS
    (124) STATMETHODS -> . KURTOSI
    (104) RETURN -> . return EXPLOG semicolon
    (125) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (126) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (127) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (128) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (129) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (130) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (131) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (132) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (133) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (134) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (137) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (140) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (143) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (146) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (149) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (152) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (155) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (158) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 161 (empty -> .)
    id              shift and go to state 85
    if              shift and go to state 86
    print           shift and go to state 87
    while           shift and go to state 88
    do              shift and go to state 89
    scan            shift and go to state 90
    return          shift and go to state 109
    ols             shift and go to state 110
    las             shift and go to state 111
    rid             shift and go to state 112
    kmeans          shift and go to state 113
    mbm             shift and go to state 114
    tseries         shift and go to state 115
    mean_abs_err    shift and go to state 116
    mean_sqr_err    shift and go to state 117
    median_abs_err  shift and go to state 118
    mean            shift and go to state 119
    mode            shift and go to state 120
    median          shift and go to state 121
    prob            shift and go to state 122
    freq            shift and go to state 123
    variance        shift and go to state 124
    stddev          shift and go to state 125
    skew            shift and go to state 126
    kurt            shift and go to state 127

    BLOCK_A                        shift and go to state 73
    STATEMENT                      shift and go to state 74
    empty                          shift and go to state 75
    ASSIGNMENT                     shift and go to state 76
    CONDITION                      shift and go to state 77
    WRITE                          shift and go to state 78
    PRE_CONDITIONAL_LOOP           shift and go to state 79
    POST_CONDITIONAL_LOOP          shift and go to state 80
    METHODCALL                     shift and go to state 81
    READ                           shift and go to state 82
    STATMETHODS                    shift and go to state 83
    RETURN                         shift and go to state 84
    ORDINARY_LEAST_SQUARES         shift and go to state 91
    LASSO                          shift and go to state 92
    RIDGE                          shift and go to state 93
    K_MEANS                        shift and go to state 94
    MINI_BATCH_MEANS               shift and go to state 95
    TIME_SERIES_SPLIT              shift and go to state 96
    MEAN_ABSOLUTE_ERROR            shift and go to state 97
    MEAN_SQUARED_ERROR             shift and go to state 98
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 99
    MEAN                           shift and go to state 100
    MODE                           shift and go to state 101
    MEDIAN                         shift and go to state 102
    PROBABILITY                    shift and go to state 103
    FREQUENCY                      shift and go to state 104
    VARIANCE                       shift and go to state 105
    STANDARD_DEVIATION             shift and go to state 106
    SKEWNESS                       shift and go to state 107
    KURTOSI                        shift and go to state 108

state 52

    (7) VARS -> var TYPE colon VARS_A semicolon VARS_B .

    var             reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    func            reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)
    void            reduce using rule 7 (VARS -> var TYPE colon VARS_A semicolon VARS_B .)


state 53

    (12) VARS_B -> VARS .

    var             reduce using rule 12 (VARS_B -> VARS .)
    func            reduce using rule 12 (VARS_B -> VARS .)
    void            reduce using rule 12 (VARS_B -> VARS .)


state 54

    (13) VARS_B -> empty .

    var             reduce using rule 13 (VARS_B -> empty .)
    func            reduce using rule 13 (VARS_B -> empty .)
    void            reduce using rule 13 (VARS_B -> empty .)


state 55

    (20) VARCTE_AUX_VARS -> id . ISLIST
    (76) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (77) ISLIST -> . empty SOLVE_OFFSETS
    (161) empty -> .

    lSqrBracket     shift and go to state 129
    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    ISLIST                         shift and go to state 128
    empty                          shift and go to state 130

state 56

    (8) VARS_A -> id assign VARCTE_AUX_VARS . SIMPLE
    (14) SIMPLE -> . comma VARS_A
    (15) SIMPLE -> . empty
    (161) empty -> .

    comma           shift and go to state 64
    semicolon       reduce using rule 161 (empty -> .)

    SIMPLE                         shift and go to state 131
    empty                          shift and go to state 65

state 57

    (21) VARCTE_AUX_VARS -> cte_i . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 132
    empty                          shift and go to state 133

state 58

    (22) VARCTE_AUX_VARS -> cte_f . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 134
    empty                          shift and go to state 133

state 59

    (23) VARCTE_AUX_VARS -> cte_str . PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 135
    empty                          shift and go to state 133

state 60

    (24) VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .

    comma           reduce using rule 24 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)
    semicolon       reduce using rule 24 (VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS .)


state 61

    (25) BOOLEAN_AUX_VARS -> FALSE . SAVE_ASSIGNED_VAR
    (165) SAVE_ASSIGNED_VAR -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 136
    empty                          shift and go to state 137

state 62

    (26) BOOLEAN_AUX_VARS -> TRUE . SAVE_ASSIGNED_VAR
    (165) SAVE_ASSIGNED_VAR -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 138
    empty                          shift and go to state 137

state 63

    (9) VARS_A -> id SAVE_VAR SIMPLE .

    semicolon       reduce using rule 9 (VARS_A -> id SAVE_VAR SIMPLE .)


state 64

    (14) SIMPLE -> comma . VARS_A
    (8) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (9) VARS_A -> . id SAVE_VAR SIMPLE
    (10) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (11) VARS_A -> . empty
    (161) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 161 (empty -> .)

    VARS_A                         shift and go to state 139
    empty                          shift and go to state 41

state 65

    (15) SIMPLE -> empty .

    semicolon       reduce using rule 15 (SIMPLE -> empty .)


state 66

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A

    cte_i           shift and go to state 140


state 67

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A . SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (168) SAVE_COUNTER_PARAM -> . empty
    (161) empty -> .

    rParenthesis    reduce using rule 161 (empty -> .)

    SAVE_COUNTER_PARAM             shift and go to state 141
    empty                          shift and go to state 142

state 68

    (94) METHOD_A -> PARAMS .

    rParenthesis    reduce using rule 94 (METHOD_A -> PARAMS .)


state 69

    (95) METHOD_A -> empty .

    rParenthesis    reduce using rule 95 (METHOD_A -> empty .)


state 70

    (96) PARAMS -> TYPE . id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A

    id              shift and go to state 143


state 71

    (1) PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .

    $end            reduce using rule 1 (PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS .)


state 72

    (192) PRINTQUADS -> empty .

    $end            reduce using rule 192 (PRINTQUADS -> empty .)


state 73

    (60) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 144


state 74

    (61) BLOCK_A -> STATEMENT . BLOCK_A
    (61) BLOCK_A -> . STATEMENT BLOCK_A
    (62) BLOCK_A -> . empty
    (63) STATEMENT -> . ASSIGNMENT
    (64) STATEMENT -> . CONDITION
    (65) STATEMENT -> . WRITE
    (66) STATEMENT -> . PRE_CONDITIONAL_LOOP
    (67) STATEMENT -> . POST_CONDITIONAL_LOOP
    (68) STATEMENT -> . METHODCALL
    (69) STATEMENT -> . READ
    (70) STATEMENT -> . STATMETHODS
    (71) STATEMENT -> . RETURN
    (161) empty -> .
    (72) ASSIGNMENT -> . id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (82) CONDITION -> . if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (85) WRITE -> . print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (99) PRE_CONDITIONAL_LOOP -> . while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (100) POST_CONDITIONAL_LOOP -> . do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (101) METHODCALL -> . id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (73) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (107) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (108) STATMETHODS -> . LASSO
    (109) STATMETHODS -> . RIDGE
    (110) STATMETHODS -> . K_MEANS
    (111) STATMETHODS -> . MINI_BATCH_MEANS
    (112) STATMETHODS -> . TIME_SERIES_SPLIT
    (113) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (114) STATMETHODS -> . MEAN_SQUARED_ERROR
    (115) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (116) STATMETHODS -> . MEAN
    (117) STATMETHODS -> . MODE
    (118) STATMETHODS -> . MEDIAN
    (119) STATMETHODS -> . PROBABILITY
    (120) STATMETHODS -> . FREQUENCY
    (121) STATMETHODS -> . VARIANCE
    (122) STATMETHODS -> . STANDARD_DEVIATION
    (123) STATMETHODS -> . SKEWNESS
    (124) STATMETHODS -> . KURTOSI
    (104) RETURN -> . return EXPLOG semicolon
    (125) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (126) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (127) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (128) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (129) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (130) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (131) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (132) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (133) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (134) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (137) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (140) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (143) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (146) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (149) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (152) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (155) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (158) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 161 (empty -> .)
    id              shift and go to state 85
    if              shift and go to state 86
    print           shift and go to state 87
    while           shift and go to state 88
    do              shift and go to state 89
    scan            shift and go to state 90
    return          shift and go to state 109
    ols             shift and go to state 110
    las             shift and go to state 111
    rid             shift and go to state 112
    kmeans          shift and go to state 113
    mbm             shift and go to state 114
    tseries         shift and go to state 115
    mean_abs_err    shift and go to state 116
    mean_sqr_err    shift and go to state 117
    median_abs_err  shift and go to state 118
    mean            shift and go to state 119
    mode            shift and go to state 120
    median          shift and go to state 121
    prob            shift and go to state 122
    freq            shift and go to state 123
    variance        shift and go to state 124
    stddev          shift and go to state 125
    skew            shift and go to state 126
    kurt            shift and go to state 127

    STATEMENT                      shift and go to state 74
    BLOCK_A                        shift and go to state 145
    empty                          shift and go to state 75
    ASSIGNMENT                     shift and go to state 76
    CONDITION                      shift and go to state 77
    WRITE                          shift and go to state 78
    PRE_CONDITIONAL_LOOP           shift and go to state 79
    POST_CONDITIONAL_LOOP          shift and go to state 80
    METHODCALL                     shift and go to state 81
    READ                           shift and go to state 82
    STATMETHODS                    shift and go to state 83
    RETURN                         shift and go to state 84
    ORDINARY_LEAST_SQUARES         shift and go to state 91
    LASSO                          shift and go to state 92
    RIDGE                          shift and go to state 93
    K_MEANS                        shift and go to state 94
    MINI_BATCH_MEANS               shift and go to state 95
    TIME_SERIES_SPLIT              shift and go to state 96
    MEAN_ABSOLUTE_ERROR            shift and go to state 97
    MEAN_SQUARED_ERROR             shift and go to state 98
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 99
    MEAN                           shift and go to state 100
    MODE                           shift and go to state 101
    MEDIAN                         shift and go to state 102
    PROBABILITY                    shift and go to state 103
    FREQUENCY                      shift and go to state 104
    VARIANCE                       shift and go to state 105
    STANDARD_DEVIATION             shift and go to state 106
    SKEWNESS                       shift and go to state 107
    KURTOSI                        shift and go to state 108

state 75

    (62) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 62 (BLOCK_A -> empty .)


state 76

    (63) STATEMENT -> ASSIGNMENT .

    id              reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    if              reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    print           reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    while           reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    do              reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    scan            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    return          reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    ols             reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    las             reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    rid             reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    kmeans          reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    mbm             reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    tseries         reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    mean_abs_err    reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    mean_sqr_err    reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    median_abs_err  reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    mean            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    mode            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    median          reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    prob            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    freq            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    variance        reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    stddev          reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    skew            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    kurt            reduce using rule 63 (STATEMENT -> ASSIGNMENT .)
    rCurlyBracket   reduce using rule 63 (STATEMENT -> ASSIGNMENT .)


state 77

    (64) STATEMENT -> CONDITION .

    id              reduce using rule 64 (STATEMENT -> CONDITION .)
    if              reduce using rule 64 (STATEMENT -> CONDITION .)
    print           reduce using rule 64 (STATEMENT -> CONDITION .)
    while           reduce using rule 64 (STATEMENT -> CONDITION .)
    do              reduce using rule 64 (STATEMENT -> CONDITION .)
    scan            reduce using rule 64 (STATEMENT -> CONDITION .)
    return          reduce using rule 64 (STATEMENT -> CONDITION .)
    ols             reduce using rule 64 (STATEMENT -> CONDITION .)
    las             reduce using rule 64 (STATEMENT -> CONDITION .)
    rid             reduce using rule 64 (STATEMENT -> CONDITION .)
    kmeans          reduce using rule 64 (STATEMENT -> CONDITION .)
    mbm             reduce using rule 64 (STATEMENT -> CONDITION .)
    tseries         reduce using rule 64 (STATEMENT -> CONDITION .)
    mean_abs_err    reduce using rule 64 (STATEMENT -> CONDITION .)
    mean_sqr_err    reduce using rule 64 (STATEMENT -> CONDITION .)
    median_abs_err  reduce using rule 64 (STATEMENT -> CONDITION .)
    mean            reduce using rule 64 (STATEMENT -> CONDITION .)
    mode            reduce using rule 64 (STATEMENT -> CONDITION .)
    median          reduce using rule 64 (STATEMENT -> CONDITION .)
    prob            reduce using rule 64 (STATEMENT -> CONDITION .)
    freq            reduce using rule 64 (STATEMENT -> CONDITION .)
    variance        reduce using rule 64 (STATEMENT -> CONDITION .)
    stddev          reduce using rule 64 (STATEMENT -> CONDITION .)
    skew            reduce using rule 64 (STATEMENT -> CONDITION .)
    kurt            reduce using rule 64 (STATEMENT -> CONDITION .)
    rCurlyBracket   reduce using rule 64 (STATEMENT -> CONDITION .)


state 78

    (65) STATEMENT -> WRITE .

    id              reduce using rule 65 (STATEMENT -> WRITE .)
    if              reduce using rule 65 (STATEMENT -> WRITE .)
    print           reduce using rule 65 (STATEMENT -> WRITE .)
    while           reduce using rule 65 (STATEMENT -> WRITE .)
    do              reduce using rule 65 (STATEMENT -> WRITE .)
    scan            reduce using rule 65 (STATEMENT -> WRITE .)
    return          reduce using rule 65 (STATEMENT -> WRITE .)
    ols             reduce using rule 65 (STATEMENT -> WRITE .)
    las             reduce using rule 65 (STATEMENT -> WRITE .)
    rid             reduce using rule 65 (STATEMENT -> WRITE .)
    kmeans          reduce using rule 65 (STATEMENT -> WRITE .)
    mbm             reduce using rule 65 (STATEMENT -> WRITE .)
    tseries         reduce using rule 65 (STATEMENT -> WRITE .)
    mean_abs_err    reduce using rule 65 (STATEMENT -> WRITE .)
    mean_sqr_err    reduce using rule 65 (STATEMENT -> WRITE .)
    median_abs_err  reduce using rule 65 (STATEMENT -> WRITE .)
    mean            reduce using rule 65 (STATEMENT -> WRITE .)
    mode            reduce using rule 65 (STATEMENT -> WRITE .)
    median          reduce using rule 65 (STATEMENT -> WRITE .)
    prob            reduce using rule 65 (STATEMENT -> WRITE .)
    freq            reduce using rule 65 (STATEMENT -> WRITE .)
    variance        reduce using rule 65 (STATEMENT -> WRITE .)
    stddev          reduce using rule 65 (STATEMENT -> WRITE .)
    skew            reduce using rule 65 (STATEMENT -> WRITE .)
    kurt            reduce using rule 65 (STATEMENT -> WRITE .)
    rCurlyBracket   reduce using rule 65 (STATEMENT -> WRITE .)


state 79

    (66) STATEMENT -> PRE_CONDITIONAL_LOOP .

    id              reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 66 (STATEMENT -> PRE_CONDITIONAL_LOOP .)


state 80

    (67) STATEMENT -> POST_CONDITIONAL_LOOP .

    id              reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    if              reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    print           reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    while           reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    do              reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    return          reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    las             reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    median          reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 67 (STATEMENT -> POST_CONDITIONAL_LOOP .)


state 81

    (68) STATEMENT -> METHODCALL .

    id              reduce using rule 68 (STATEMENT -> METHODCALL .)
    if              reduce using rule 68 (STATEMENT -> METHODCALL .)
    print           reduce using rule 68 (STATEMENT -> METHODCALL .)
    while           reduce using rule 68 (STATEMENT -> METHODCALL .)
    do              reduce using rule 68 (STATEMENT -> METHODCALL .)
    scan            reduce using rule 68 (STATEMENT -> METHODCALL .)
    return          reduce using rule 68 (STATEMENT -> METHODCALL .)
    ols             reduce using rule 68 (STATEMENT -> METHODCALL .)
    las             reduce using rule 68 (STATEMENT -> METHODCALL .)
    rid             reduce using rule 68 (STATEMENT -> METHODCALL .)
    kmeans          reduce using rule 68 (STATEMENT -> METHODCALL .)
    mbm             reduce using rule 68 (STATEMENT -> METHODCALL .)
    tseries         reduce using rule 68 (STATEMENT -> METHODCALL .)
    mean_abs_err    reduce using rule 68 (STATEMENT -> METHODCALL .)
    mean_sqr_err    reduce using rule 68 (STATEMENT -> METHODCALL .)
    median_abs_err  reduce using rule 68 (STATEMENT -> METHODCALL .)
    mean            reduce using rule 68 (STATEMENT -> METHODCALL .)
    mode            reduce using rule 68 (STATEMENT -> METHODCALL .)
    median          reduce using rule 68 (STATEMENT -> METHODCALL .)
    prob            reduce using rule 68 (STATEMENT -> METHODCALL .)
    freq            reduce using rule 68 (STATEMENT -> METHODCALL .)
    variance        reduce using rule 68 (STATEMENT -> METHODCALL .)
    stddev          reduce using rule 68 (STATEMENT -> METHODCALL .)
    skew            reduce using rule 68 (STATEMENT -> METHODCALL .)
    kurt            reduce using rule 68 (STATEMENT -> METHODCALL .)
    rCurlyBracket   reduce using rule 68 (STATEMENT -> METHODCALL .)


state 82

    (69) STATEMENT -> READ .

    id              reduce using rule 69 (STATEMENT -> READ .)
    if              reduce using rule 69 (STATEMENT -> READ .)
    print           reduce using rule 69 (STATEMENT -> READ .)
    while           reduce using rule 69 (STATEMENT -> READ .)
    do              reduce using rule 69 (STATEMENT -> READ .)
    scan            reduce using rule 69 (STATEMENT -> READ .)
    return          reduce using rule 69 (STATEMENT -> READ .)
    ols             reduce using rule 69 (STATEMENT -> READ .)
    las             reduce using rule 69 (STATEMENT -> READ .)
    rid             reduce using rule 69 (STATEMENT -> READ .)
    kmeans          reduce using rule 69 (STATEMENT -> READ .)
    mbm             reduce using rule 69 (STATEMENT -> READ .)
    tseries         reduce using rule 69 (STATEMENT -> READ .)
    mean_abs_err    reduce using rule 69 (STATEMENT -> READ .)
    mean_sqr_err    reduce using rule 69 (STATEMENT -> READ .)
    median_abs_err  reduce using rule 69 (STATEMENT -> READ .)
    mean            reduce using rule 69 (STATEMENT -> READ .)
    mode            reduce using rule 69 (STATEMENT -> READ .)
    median          reduce using rule 69 (STATEMENT -> READ .)
    prob            reduce using rule 69 (STATEMENT -> READ .)
    freq            reduce using rule 69 (STATEMENT -> READ .)
    variance        reduce using rule 69 (STATEMENT -> READ .)
    stddev          reduce using rule 69 (STATEMENT -> READ .)
    skew            reduce using rule 69 (STATEMENT -> READ .)
    kurt            reduce using rule 69 (STATEMENT -> READ .)
    rCurlyBracket   reduce using rule 69 (STATEMENT -> READ .)


state 83

    (70) STATEMENT -> STATMETHODS .

    id              reduce using rule 70 (STATEMENT -> STATMETHODS .)
    if              reduce using rule 70 (STATEMENT -> STATMETHODS .)
    print           reduce using rule 70 (STATEMENT -> STATMETHODS .)
    while           reduce using rule 70 (STATEMENT -> STATMETHODS .)
    do              reduce using rule 70 (STATEMENT -> STATMETHODS .)
    scan            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    return          reduce using rule 70 (STATEMENT -> STATMETHODS .)
    ols             reduce using rule 70 (STATEMENT -> STATMETHODS .)
    las             reduce using rule 70 (STATEMENT -> STATMETHODS .)
    rid             reduce using rule 70 (STATEMENT -> STATMETHODS .)
    kmeans          reduce using rule 70 (STATEMENT -> STATMETHODS .)
    mbm             reduce using rule 70 (STATEMENT -> STATMETHODS .)
    tseries         reduce using rule 70 (STATEMENT -> STATMETHODS .)
    mean_abs_err    reduce using rule 70 (STATEMENT -> STATMETHODS .)
    mean_sqr_err    reduce using rule 70 (STATEMENT -> STATMETHODS .)
    median_abs_err  reduce using rule 70 (STATEMENT -> STATMETHODS .)
    mean            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    mode            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    median          reduce using rule 70 (STATEMENT -> STATMETHODS .)
    prob            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    freq            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    variance        reduce using rule 70 (STATEMENT -> STATMETHODS .)
    stddev          reduce using rule 70 (STATEMENT -> STATMETHODS .)
    skew            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    kurt            reduce using rule 70 (STATEMENT -> STATMETHODS .)
    rCurlyBracket   reduce using rule 70 (STATEMENT -> STATMETHODS .)


state 84

    (71) STATEMENT -> RETURN .

    id              reduce using rule 71 (STATEMENT -> RETURN .)
    if              reduce using rule 71 (STATEMENT -> RETURN .)
    print           reduce using rule 71 (STATEMENT -> RETURN .)
    while           reduce using rule 71 (STATEMENT -> RETURN .)
    do              reduce using rule 71 (STATEMENT -> RETURN .)
    scan            reduce using rule 71 (STATEMENT -> RETURN .)
    return          reduce using rule 71 (STATEMENT -> RETURN .)
    ols             reduce using rule 71 (STATEMENT -> RETURN .)
    las             reduce using rule 71 (STATEMENT -> RETURN .)
    rid             reduce using rule 71 (STATEMENT -> RETURN .)
    kmeans          reduce using rule 71 (STATEMENT -> RETURN .)
    mbm             reduce using rule 71 (STATEMENT -> RETURN .)
    tseries         reduce using rule 71 (STATEMENT -> RETURN .)
    mean_abs_err    reduce using rule 71 (STATEMENT -> RETURN .)
    mean_sqr_err    reduce using rule 71 (STATEMENT -> RETURN .)
    median_abs_err  reduce using rule 71 (STATEMENT -> RETURN .)
    mean            reduce using rule 71 (STATEMENT -> RETURN .)
    mode            reduce using rule 71 (STATEMENT -> RETURN .)
    median          reduce using rule 71 (STATEMENT -> RETURN .)
    prob            reduce using rule 71 (STATEMENT -> RETURN .)
    freq            reduce using rule 71 (STATEMENT -> RETURN .)
    variance        reduce using rule 71 (STATEMENT -> RETURN .)
    stddev          reduce using rule 71 (STATEMENT -> RETURN .)
    skew            reduce using rule 71 (STATEMENT -> RETURN .)
    kurt            reduce using rule 71 (STATEMENT -> RETURN .)
    rCurlyBracket   reduce using rule 71 (STATEMENT -> RETURN .)


state 85

    (72) ASSIGNMENT -> id . PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (101) METHODCALL -> id . VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (176) PUSH_STACK_OPERANDS -> . empty
    (172) VALIDATE_FUNCTION_NAME -> . empty
    (161) empty -> .

    lSqrBracket     reduce using rule 161 (empty -> .)
    assign          reduce using rule 161 (empty -> .)
    lParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 146
    VALIDATE_FUNCTION_NAME         shift and go to state 147
    empty                          shift and go to state 148

state 86

    (82) CONDITION -> if . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    lParenthesis    shift and go to state 149


state 87

    (85) WRITE -> print . lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 150


state 88

    (99) PRE_CONDITIONAL_LOOP -> while . PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (188) PUSH_STACK_JUMPS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 151
    empty                          shift and go to state 152

state 89

    (100) POST_CONDITIONAL_LOOP -> do . PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (188) PUSH_STACK_JUMPS -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    PUSH_STACK_JUMPS               shift and go to state 153
    empty                          shift and go to state 152

state 90

    (73) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 154


state 91

    (107) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    id              reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    if              reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    print           reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    while           reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    do              reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    scan            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    return          reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    ols             reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    las             reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rid             reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kmeans          reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mbm             reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    tseries         reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_abs_err    reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean_sqr_err    reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median_abs_err  reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mean            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    mode            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    median          reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    prob            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    freq            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    variance        reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    stddev          reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    skew            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    kurt            reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)
    rCurlyBracket   reduce using rule 107 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 92

    (108) STATMETHODS -> LASSO .

    id              reduce using rule 108 (STATMETHODS -> LASSO .)
    if              reduce using rule 108 (STATMETHODS -> LASSO .)
    print           reduce using rule 108 (STATMETHODS -> LASSO .)
    while           reduce using rule 108 (STATMETHODS -> LASSO .)
    do              reduce using rule 108 (STATMETHODS -> LASSO .)
    scan            reduce using rule 108 (STATMETHODS -> LASSO .)
    return          reduce using rule 108 (STATMETHODS -> LASSO .)
    ols             reduce using rule 108 (STATMETHODS -> LASSO .)
    las             reduce using rule 108 (STATMETHODS -> LASSO .)
    rid             reduce using rule 108 (STATMETHODS -> LASSO .)
    kmeans          reduce using rule 108 (STATMETHODS -> LASSO .)
    mbm             reduce using rule 108 (STATMETHODS -> LASSO .)
    tseries         reduce using rule 108 (STATMETHODS -> LASSO .)
    mean_abs_err    reduce using rule 108 (STATMETHODS -> LASSO .)
    mean_sqr_err    reduce using rule 108 (STATMETHODS -> LASSO .)
    median_abs_err  reduce using rule 108 (STATMETHODS -> LASSO .)
    mean            reduce using rule 108 (STATMETHODS -> LASSO .)
    mode            reduce using rule 108 (STATMETHODS -> LASSO .)
    median          reduce using rule 108 (STATMETHODS -> LASSO .)
    prob            reduce using rule 108 (STATMETHODS -> LASSO .)
    freq            reduce using rule 108 (STATMETHODS -> LASSO .)
    variance        reduce using rule 108 (STATMETHODS -> LASSO .)
    stddev          reduce using rule 108 (STATMETHODS -> LASSO .)
    skew            reduce using rule 108 (STATMETHODS -> LASSO .)
    kurt            reduce using rule 108 (STATMETHODS -> LASSO .)
    rCurlyBracket   reduce using rule 108 (STATMETHODS -> LASSO .)


state 93

    (109) STATMETHODS -> RIDGE .

    id              reduce using rule 109 (STATMETHODS -> RIDGE .)
    if              reduce using rule 109 (STATMETHODS -> RIDGE .)
    print           reduce using rule 109 (STATMETHODS -> RIDGE .)
    while           reduce using rule 109 (STATMETHODS -> RIDGE .)
    do              reduce using rule 109 (STATMETHODS -> RIDGE .)
    scan            reduce using rule 109 (STATMETHODS -> RIDGE .)
    return          reduce using rule 109 (STATMETHODS -> RIDGE .)
    ols             reduce using rule 109 (STATMETHODS -> RIDGE .)
    las             reduce using rule 109 (STATMETHODS -> RIDGE .)
    rid             reduce using rule 109 (STATMETHODS -> RIDGE .)
    kmeans          reduce using rule 109 (STATMETHODS -> RIDGE .)
    mbm             reduce using rule 109 (STATMETHODS -> RIDGE .)
    tseries         reduce using rule 109 (STATMETHODS -> RIDGE .)
    mean_abs_err    reduce using rule 109 (STATMETHODS -> RIDGE .)
    mean_sqr_err    reduce using rule 109 (STATMETHODS -> RIDGE .)
    median_abs_err  reduce using rule 109 (STATMETHODS -> RIDGE .)
    mean            reduce using rule 109 (STATMETHODS -> RIDGE .)
    mode            reduce using rule 109 (STATMETHODS -> RIDGE .)
    median          reduce using rule 109 (STATMETHODS -> RIDGE .)
    prob            reduce using rule 109 (STATMETHODS -> RIDGE .)
    freq            reduce using rule 109 (STATMETHODS -> RIDGE .)
    variance        reduce using rule 109 (STATMETHODS -> RIDGE .)
    stddev          reduce using rule 109 (STATMETHODS -> RIDGE .)
    skew            reduce using rule 109 (STATMETHODS -> RIDGE .)
    kurt            reduce using rule 109 (STATMETHODS -> RIDGE .)
    rCurlyBracket   reduce using rule 109 (STATMETHODS -> RIDGE .)


state 94

    (110) STATMETHODS -> K_MEANS .

    id              reduce using rule 110 (STATMETHODS -> K_MEANS .)
    if              reduce using rule 110 (STATMETHODS -> K_MEANS .)
    print           reduce using rule 110 (STATMETHODS -> K_MEANS .)
    while           reduce using rule 110 (STATMETHODS -> K_MEANS .)
    do              reduce using rule 110 (STATMETHODS -> K_MEANS .)
    scan            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    return          reduce using rule 110 (STATMETHODS -> K_MEANS .)
    ols             reduce using rule 110 (STATMETHODS -> K_MEANS .)
    las             reduce using rule 110 (STATMETHODS -> K_MEANS .)
    rid             reduce using rule 110 (STATMETHODS -> K_MEANS .)
    kmeans          reduce using rule 110 (STATMETHODS -> K_MEANS .)
    mbm             reduce using rule 110 (STATMETHODS -> K_MEANS .)
    tseries         reduce using rule 110 (STATMETHODS -> K_MEANS .)
    mean_abs_err    reduce using rule 110 (STATMETHODS -> K_MEANS .)
    mean_sqr_err    reduce using rule 110 (STATMETHODS -> K_MEANS .)
    median_abs_err  reduce using rule 110 (STATMETHODS -> K_MEANS .)
    mean            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    mode            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    median          reduce using rule 110 (STATMETHODS -> K_MEANS .)
    prob            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    freq            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    variance        reduce using rule 110 (STATMETHODS -> K_MEANS .)
    stddev          reduce using rule 110 (STATMETHODS -> K_MEANS .)
    skew            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    kurt            reduce using rule 110 (STATMETHODS -> K_MEANS .)
    rCurlyBracket   reduce using rule 110 (STATMETHODS -> K_MEANS .)


state 95

    (111) STATMETHODS -> MINI_BATCH_MEANS .

    id              reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    if              reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    print           reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    while           reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    do              reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    scan            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    return          reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    ols             reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    las             reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    rid             reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    kmeans          reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    mbm             reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    tseries         reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_abs_err    reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean_sqr_err    reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    median_abs_err  reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    mean            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    mode            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    median          reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    prob            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    freq            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    variance        reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    stddev          reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    skew            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    kurt            reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)
    rCurlyBracket   reduce using rule 111 (STATMETHODS -> MINI_BATCH_MEANS .)


state 96

    (112) STATMETHODS -> TIME_SERIES_SPLIT .

    id              reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    if              reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    print           reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    while           reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    do              reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    scan            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    return          reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    ols             reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    las             reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rid             reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kmeans          reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mbm             reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    tseries         reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_abs_err    reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean_sqr_err    reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median_abs_err  reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mean            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    mode            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    median          reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    prob            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    freq            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    variance        reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    stddev          reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    skew            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    kurt            reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)
    rCurlyBracket   reduce using rule 112 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 97

    (113) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    id              reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    if              reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    print           reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    while           reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    do              reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    return          reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    las             reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    median          reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 113 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 98

    (114) STATMETHODS -> MEAN_SQUARED_ERROR .

    id              reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    if              reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    print           reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    while           reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    do              reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    scan            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    return          reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    ols             reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    las             reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rid             reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kmeans          reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mbm             reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    tseries         reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_abs_err    reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean_sqr_err    reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median_abs_err  reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mean            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    mode            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    median          reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    prob            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    freq            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    variance        reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    stddev          reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    skew            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    kurt            reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)
    rCurlyBracket   reduce using rule 114 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 99

    (115) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    id              reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    if              reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    print           reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    while           reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    do              reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    scan            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    return          reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    ols             reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    las             reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rid             reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kmeans          reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mbm             reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    tseries         reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_abs_err    reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean_sqr_err    reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median_abs_err  reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mean            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    mode            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    median          reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    prob            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    freq            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    variance        reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    stddev          reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    skew            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    kurt            reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)
    rCurlyBracket   reduce using rule 115 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 100

    (116) STATMETHODS -> MEAN .

    id              reduce using rule 116 (STATMETHODS -> MEAN .)
    if              reduce using rule 116 (STATMETHODS -> MEAN .)
    print           reduce using rule 116 (STATMETHODS -> MEAN .)
    while           reduce using rule 116 (STATMETHODS -> MEAN .)
    do              reduce using rule 116 (STATMETHODS -> MEAN .)
    scan            reduce using rule 116 (STATMETHODS -> MEAN .)
    return          reduce using rule 116 (STATMETHODS -> MEAN .)
    ols             reduce using rule 116 (STATMETHODS -> MEAN .)
    las             reduce using rule 116 (STATMETHODS -> MEAN .)
    rid             reduce using rule 116 (STATMETHODS -> MEAN .)
    kmeans          reduce using rule 116 (STATMETHODS -> MEAN .)
    mbm             reduce using rule 116 (STATMETHODS -> MEAN .)
    tseries         reduce using rule 116 (STATMETHODS -> MEAN .)
    mean_abs_err    reduce using rule 116 (STATMETHODS -> MEAN .)
    mean_sqr_err    reduce using rule 116 (STATMETHODS -> MEAN .)
    median_abs_err  reduce using rule 116 (STATMETHODS -> MEAN .)
    mean            reduce using rule 116 (STATMETHODS -> MEAN .)
    mode            reduce using rule 116 (STATMETHODS -> MEAN .)
    median          reduce using rule 116 (STATMETHODS -> MEAN .)
    prob            reduce using rule 116 (STATMETHODS -> MEAN .)
    freq            reduce using rule 116 (STATMETHODS -> MEAN .)
    variance        reduce using rule 116 (STATMETHODS -> MEAN .)
    stddev          reduce using rule 116 (STATMETHODS -> MEAN .)
    skew            reduce using rule 116 (STATMETHODS -> MEAN .)
    kurt            reduce using rule 116 (STATMETHODS -> MEAN .)
    rCurlyBracket   reduce using rule 116 (STATMETHODS -> MEAN .)


state 101

    (117) STATMETHODS -> MODE .

    id              reduce using rule 117 (STATMETHODS -> MODE .)
    if              reduce using rule 117 (STATMETHODS -> MODE .)
    print           reduce using rule 117 (STATMETHODS -> MODE .)
    while           reduce using rule 117 (STATMETHODS -> MODE .)
    do              reduce using rule 117 (STATMETHODS -> MODE .)
    scan            reduce using rule 117 (STATMETHODS -> MODE .)
    return          reduce using rule 117 (STATMETHODS -> MODE .)
    ols             reduce using rule 117 (STATMETHODS -> MODE .)
    las             reduce using rule 117 (STATMETHODS -> MODE .)
    rid             reduce using rule 117 (STATMETHODS -> MODE .)
    kmeans          reduce using rule 117 (STATMETHODS -> MODE .)
    mbm             reduce using rule 117 (STATMETHODS -> MODE .)
    tseries         reduce using rule 117 (STATMETHODS -> MODE .)
    mean_abs_err    reduce using rule 117 (STATMETHODS -> MODE .)
    mean_sqr_err    reduce using rule 117 (STATMETHODS -> MODE .)
    median_abs_err  reduce using rule 117 (STATMETHODS -> MODE .)
    mean            reduce using rule 117 (STATMETHODS -> MODE .)
    mode            reduce using rule 117 (STATMETHODS -> MODE .)
    median          reduce using rule 117 (STATMETHODS -> MODE .)
    prob            reduce using rule 117 (STATMETHODS -> MODE .)
    freq            reduce using rule 117 (STATMETHODS -> MODE .)
    variance        reduce using rule 117 (STATMETHODS -> MODE .)
    stddev          reduce using rule 117 (STATMETHODS -> MODE .)
    skew            reduce using rule 117 (STATMETHODS -> MODE .)
    kurt            reduce using rule 117 (STATMETHODS -> MODE .)
    rCurlyBracket   reduce using rule 117 (STATMETHODS -> MODE .)


state 102

    (118) STATMETHODS -> MEDIAN .

    id              reduce using rule 118 (STATMETHODS -> MEDIAN .)
    if              reduce using rule 118 (STATMETHODS -> MEDIAN .)
    print           reduce using rule 118 (STATMETHODS -> MEDIAN .)
    while           reduce using rule 118 (STATMETHODS -> MEDIAN .)
    do              reduce using rule 118 (STATMETHODS -> MEDIAN .)
    scan            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    return          reduce using rule 118 (STATMETHODS -> MEDIAN .)
    ols             reduce using rule 118 (STATMETHODS -> MEDIAN .)
    las             reduce using rule 118 (STATMETHODS -> MEDIAN .)
    rid             reduce using rule 118 (STATMETHODS -> MEDIAN .)
    kmeans          reduce using rule 118 (STATMETHODS -> MEDIAN .)
    mbm             reduce using rule 118 (STATMETHODS -> MEDIAN .)
    tseries         reduce using rule 118 (STATMETHODS -> MEDIAN .)
    mean_abs_err    reduce using rule 118 (STATMETHODS -> MEDIAN .)
    mean_sqr_err    reduce using rule 118 (STATMETHODS -> MEDIAN .)
    median_abs_err  reduce using rule 118 (STATMETHODS -> MEDIAN .)
    mean            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    mode            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    median          reduce using rule 118 (STATMETHODS -> MEDIAN .)
    prob            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    freq            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    variance        reduce using rule 118 (STATMETHODS -> MEDIAN .)
    stddev          reduce using rule 118 (STATMETHODS -> MEDIAN .)
    skew            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    kurt            reduce using rule 118 (STATMETHODS -> MEDIAN .)
    rCurlyBracket   reduce using rule 118 (STATMETHODS -> MEDIAN .)


state 103

    (119) STATMETHODS -> PROBABILITY .

    id              reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    if              reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    print           reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    while           reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    do              reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    scan            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    return          reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    ols             reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    las             reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    rid             reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    kmeans          reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    mbm             reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    tseries         reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    mean_abs_err    reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    mean_sqr_err    reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    median_abs_err  reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    mean            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    mode            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    median          reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    prob            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    freq            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    variance        reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    stddev          reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    skew            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    kurt            reduce using rule 119 (STATMETHODS -> PROBABILITY .)
    rCurlyBracket   reduce using rule 119 (STATMETHODS -> PROBABILITY .)


state 104

    (120) STATMETHODS -> FREQUENCY .

    id              reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    if              reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    print           reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    while           reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    do              reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    scan            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    return          reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    ols             reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    las             reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    rid             reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    kmeans          reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    mbm             reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    tseries         reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    mean_abs_err    reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    mean_sqr_err    reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    median_abs_err  reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    mean            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    mode            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    median          reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    prob            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    freq            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    variance        reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    stddev          reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    skew            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    kurt            reduce using rule 120 (STATMETHODS -> FREQUENCY .)
    rCurlyBracket   reduce using rule 120 (STATMETHODS -> FREQUENCY .)


state 105

    (121) STATMETHODS -> VARIANCE .

    id              reduce using rule 121 (STATMETHODS -> VARIANCE .)
    if              reduce using rule 121 (STATMETHODS -> VARIANCE .)
    print           reduce using rule 121 (STATMETHODS -> VARIANCE .)
    while           reduce using rule 121 (STATMETHODS -> VARIANCE .)
    do              reduce using rule 121 (STATMETHODS -> VARIANCE .)
    scan            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    return          reduce using rule 121 (STATMETHODS -> VARIANCE .)
    ols             reduce using rule 121 (STATMETHODS -> VARIANCE .)
    las             reduce using rule 121 (STATMETHODS -> VARIANCE .)
    rid             reduce using rule 121 (STATMETHODS -> VARIANCE .)
    kmeans          reduce using rule 121 (STATMETHODS -> VARIANCE .)
    mbm             reduce using rule 121 (STATMETHODS -> VARIANCE .)
    tseries         reduce using rule 121 (STATMETHODS -> VARIANCE .)
    mean_abs_err    reduce using rule 121 (STATMETHODS -> VARIANCE .)
    mean_sqr_err    reduce using rule 121 (STATMETHODS -> VARIANCE .)
    median_abs_err  reduce using rule 121 (STATMETHODS -> VARIANCE .)
    mean            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    mode            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    median          reduce using rule 121 (STATMETHODS -> VARIANCE .)
    prob            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    freq            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    variance        reduce using rule 121 (STATMETHODS -> VARIANCE .)
    stddev          reduce using rule 121 (STATMETHODS -> VARIANCE .)
    skew            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    kurt            reduce using rule 121 (STATMETHODS -> VARIANCE .)
    rCurlyBracket   reduce using rule 121 (STATMETHODS -> VARIANCE .)


state 106

    (122) STATMETHODS -> STANDARD_DEVIATION .

    id              reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    if              reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    print           reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    while           reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    do              reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    scan            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    return          reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    ols             reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    las             reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    rid             reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    kmeans          reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    mbm             reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    tseries         reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_abs_err    reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    mean_sqr_err    reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    median_abs_err  reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    mean            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    mode            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    median          reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    prob            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    freq            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    variance        reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    stddev          reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    skew            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    kurt            reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)
    rCurlyBracket   reduce using rule 122 (STATMETHODS -> STANDARD_DEVIATION .)


state 107

    (123) STATMETHODS -> SKEWNESS .

    id              reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    if              reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    print           reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    while           reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    do              reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    scan            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    return          reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    ols             reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    las             reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    rid             reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    kmeans          reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    mbm             reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    tseries         reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    mean_abs_err    reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    mean_sqr_err    reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    median_abs_err  reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    mean            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    mode            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    median          reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    prob            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    freq            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    variance        reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    stddev          reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    skew            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    kurt            reduce using rule 123 (STATMETHODS -> SKEWNESS .)
    rCurlyBracket   reduce using rule 123 (STATMETHODS -> SKEWNESS .)


state 108

    (124) STATMETHODS -> KURTOSI .

    id              reduce using rule 124 (STATMETHODS -> KURTOSI .)
    if              reduce using rule 124 (STATMETHODS -> KURTOSI .)
    print           reduce using rule 124 (STATMETHODS -> KURTOSI .)
    while           reduce using rule 124 (STATMETHODS -> KURTOSI .)
    do              reduce using rule 124 (STATMETHODS -> KURTOSI .)
    scan            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    return          reduce using rule 124 (STATMETHODS -> KURTOSI .)
    ols             reduce using rule 124 (STATMETHODS -> KURTOSI .)
    las             reduce using rule 124 (STATMETHODS -> KURTOSI .)
    rid             reduce using rule 124 (STATMETHODS -> KURTOSI .)
    kmeans          reduce using rule 124 (STATMETHODS -> KURTOSI .)
    mbm             reduce using rule 124 (STATMETHODS -> KURTOSI .)
    tseries         reduce using rule 124 (STATMETHODS -> KURTOSI .)
    mean_abs_err    reduce using rule 124 (STATMETHODS -> KURTOSI .)
    mean_sqr_err    reduce using rule 124 (STATMETHODS -> KURTOSI .)
    median_abs_err  reduce using rule 124 (STATMETHODS -> KURTOSI .)
    mean            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    mode            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    median          reduce using rule 124 (STATMETHODS -> KURTOSI .)
    prob            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    freq            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    variance        reduce using rule 124 (STATMETHODS -> KURTOSI .)
    stddev          reduce using rule 124 (STATMETHODS -> KURTOSI .)
    skew            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    kurt            reduce using rule 124 (STATMETHODS -> KURTOSI .)
    rCurlyBracket   reduce using rule 124 (STATMETHODS -> KURTOSI .)


state 109

    (104) RETURN -> return . EXPLOG semicolon
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 155
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 110

    (125) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 166


state 111

    (126) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 167


state 112

    (127) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 168


state 113

    (128) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 169


state 114

    (129) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 170


state 115

    (130) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 171


state 116

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 172


state 117

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 173


state 118

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 174


state 119

    (134) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 175


state 120

    (137) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 176


state 121

    (140) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 177


state 122

    (143) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 178


state 123

    (146) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 179


state 124

    (149) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 180


state 125

    (152) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 181


state 126

    (155) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 182


state 127

    (158) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 183


state 128

    (20) VARCTE_AUX_VARS -> id ISLIST .

    comma           reduce using rule 20 (VARCTE_AUX_VARS -> id ISLIST .)
    semicolon       reduce using rule 20 (VARCTE_AUX_VARS -> id ISLIST .)


state 129

    (76) ISLIST -> lSqrBracket . EXP VALIDATE_INDEX rSqrBracket ISLIST
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 184
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 130

    (77) ISLIST -> empty . SOLVE_OFFSETS
    (79) SOLVE_OFFSETS -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    assign          reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)

    empty                          shift and go to state 185
    SOLVE_OFFSETS                  shift and go to state 186

state 131

    (8) VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .

    semicolon       reduce using rule 8 (VARS_A -> id assign VARCTE_AUX_VARS SIMPLE .)


state 132

    (21) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (165) SAVE_ASSIGNED_VAR -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 187
    empty                          shift and go to state 137

state 133

    (177) PUSH_STACK_OPERANDS_CONSTANT -> empty .

    comma           reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    semicolon       reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    times           reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    divide          reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    plus            reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    minus           reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greater         reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThan        reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    greaterEquals   reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    lessThanEquals  reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    equals          reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    notEquals       reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    and             reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    or              reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rSqrBracket     reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)
    rParenthesis    reduce using rule 177 (PUSH_STACK_OPERANDS_CONSTANT -> empty .)


state 134

    (22) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (165) SAVE_ASSIGNED_VAR -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 188
    empty                          shift and go to state 137

state 135

    (23) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT . SAVE_ASSIGNED_VAR
    (165) SAVE_ASSIGNED_VAR -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    SAVE_ASSIGNED_VAR              shift and go to state 189
    empty                          shift and go to state 137

state 136

    (25) BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 25 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 25 (BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR .)


state 137

    (165) SAVE_ASSIGNED_VAR -> empty .

    comma           reduce using rule 165 (SAVE_ASSIGNED_VAR -> empty .)
    semicolon       reduce using rule 165 (SAVE_ASSIGNED_VAR -> empty .)


state 138

    (26) BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .

    comma           reduce using rule 26 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 26 (BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR .)


state 139

    (14) SIMPLE -> comma VARS_A .

    semicolon       reduce using rule 14 (SIMPLE -> comma VARS_A .)


state 140

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (28) ACUMULATE_R -> . empty
    (161) empty -> .

    rSqrBracket     reduce using rule 161 (empty -> .)

    ACUMULATE_R                    shift and go to state 190
    empty                          shift and go to state 191

state 141

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM . rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE

    rParenthesis    shift and go to state 192


state 142

    (168) SAVE_COUNTER_PARAM -> empty .

    rParenthesis    reduce using rule 168 (SAVE_COUNTER_PARAM -> empty .)


state 143

    (96) PARAMS -> TYPE id . SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (166) SAVE_PARAM -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    SAVE_PARAM                     shift and go to state 193
    empty                          shift and go to state 194

state 144

    (60) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    while           reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    func            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    void            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    id              reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    if              reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    print           reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    do              reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    scan            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    return          reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    ols             reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    las             reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rid             reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kmeans          reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mbm             reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    tseries         reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_abs_err    reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean_sqr_err    reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median_abs_err  reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mean            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    mode            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    median          reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    prob            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    freq            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    variance        reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    stddev          reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    skew            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    kurt            reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 60 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 145

    (61) BLOCK_A -> STATEMENT BLOCK_A .

    rCurlyBracket   reduce using rule 61 (BLOCK_A -> STATEMENT BLOCK_A .)


state 146

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS . ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (76) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (77) ISLIST -> . empty SOLVE_OFFSETS
    (161) empty -> .

    lSqrBracket     shift and go to state 129
    assign          reduce using rule 161 (empty -> .)

    ISLIST                         shift and go to state 195
    empty                          shift and go to state 130

state 147

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME . ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (173) ERA -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)

    ERA                            shift and go to state 196
    empty                          shift and go to state 197

state 148

    (176) PUSH_STACK_OPERANDS -> empty .
    (172) VALIDATE_FUNCTION_NAME -> empty .

    lSqrBracket     reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    assign          reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    lParenthesis    reduce using rule 172 (VALIDATE_FUNCTION_NAME -> empty .)


state 149

    (82) CONDITION -> if lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 198
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 150

    (85) WRITE -> print lParenthesis . EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPRESSION                     shift and go to state 199
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 151

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS . lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 200


state 152

    (188) PUSH_STACK_JUMPS -> empty .

    lParenthesis    reduce using rule 188 (PUSH_STACK_JUMPS -> empty .)
    lCurlyBracket   reduce using rule 188 (PUSH_STACK_JUMPS -> empty .)


state 153

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS . BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 201

state 154

    (73) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (88) VARCTE -> . id ISLIST
    (89) VARCTE -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (90) VARCTE -> . cte_f PUSH_STACK_OPERANDS_CONSTANT
    (91) VARCTE -> . cte_str PUSH_STACK_OPERANDS_CONSTANT
    (92) VARCTE -> . BOOLEAN
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 203
    cte_i           shift and go to state 204
    cte_f           shift and go to state 205
    cte_str         shift and go to state 206
    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    VARCTE                         shift and go to state 202
    BOOLEAN                        shift and go to state 207

state 155

    (104) RETURN -> return EXPLOG . semicolon

    semicolon       shift and go to state 210


state 156

    (30) EXPLOG -> EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG_A -> . and EXPLOG
    (33) EXPLOG_A -> . or EXPLOG
    (34) EXPLOG_A -> . empty
    (161) empty -> .

    and             shift and go to state 212
    or              shift and go to state 213
    semicolon       reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    EXPLOG_A                       shift and go to state 211
    empty                          shift and go to state 214

state 157

    (31) EXPLOG -> not . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPRESSION                     shift and go to state 215
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 158

    (35) EXPRESSION -> EXP .
    (36) EXPRESSION -> EXP . EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (37) EXPRESSION_A -> . greater PUSH_STACK_OPERATORS
    (38) EXPRESSION_A -> . lessThan PUSH_STACK_OPERATORS
    (39) EXPRESSION_A -> . greaterEquals PUSH_STACK_OPERATORS
    (40) EXPRESSION_A -> . lessThanEquals PUSH_STACK_OPERATORS
    (41) EXPRESSION_A -> . equals PUSH_STACK_OPERATORS
    (42) EXPRESSION_A -> . notEquals PUSH_STACK_OPERATORS

    and             reduce using rule 35 (EXPRESSION -> EXP .)
    or              reduce using rule 35 (EXPRESSION -> EXP .)
    semicolon       reduce using rule 35 (EXPRESSION -> EXP .)
    rParenthesis    reduce using rule 35 (EXPRESSION -> EXP .)
    comma           reduce using rule 35 (EXPRESSION -> EXP .)
    greater         shift and go to state 217
    lessThan        shift and go to state 218
    greaterEquals   shift and go to state 219
    lessThanEquals  shift and go to state 220
    equals          shift and go to state 221
    notEquals       shift and go to state 222

    EXPRESSION_A                   shift and go to state 216

state 159

    (43) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> TERM . SOLVE_OPERATION_SUM_MINUS EXP_A
    (180) SOLVE_OPERATION_SUM_MINUS -> . empty
    (161) empty -> .

    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_SUM_MINUS      shift and go to state 223
    empty                          shift and go to state 224

state 160

    (47) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> FACTOR . SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (181) SOLVE_OPERATION_TIMES_DIVIDE -> . empty
    (161) empty -> .

    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_TIMES_DIVIDE   shift and go to state 225
    empty                          shift and go to state 226

state 161

    (51) FACTOR -> lParenthesis . PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    not             reduce using rule 161 (empty -> .)
    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 227
    empty                          shift and go to state 228

state 162

    (52) FACTOR -> VARCONSTAUX .

    times           reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 52 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 52 (FACTOR -> VARCONSTAUX .)


state 163

    (53) VARCONSTAUX -> id . PUSH_STACK_OPERANDS ISLIST
    (176) PUSH_STACK_OPERANDS -> . empty
    (161) empty -> .

    lSqrBracket     reduce using rule 161 (empty -> .)
    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS            shift and go to state 229
    empty                          shift and go to state 230

state 164

    (54) VARCONSTAUX -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 231
    empty                          shift and go to state 133

state 165

    (55) VARCONSTAUX -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 232
    empty                          shift and go to state 133

state 166

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 233


state 167

    (126) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 234


state 168

    (127) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 235


state 169

    (128) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 236

state 170

    (129) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 237

state 171

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 238

state 172

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 239


state 173

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 240


state 174

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 241


state 175

    (134) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 242


state 176

    (137) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 243


state 177

    (140) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 244


state 178

    (143) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 245


state 179

    (146) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 246


state 180

    (149) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 247


state 181

    (152) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 248


state 182

    (155) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 249


state 183

    (158) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 250


state 184

    (76) ISLIST -> lSqrBracket EXP . VALIDATE_INDEX rSqrBracket ISLIST
    (78) VALIDATE_INDEX -> . empty
    (161) empty -> .

    rSqrBracket     reduce using rule 161 (empty -> .)

    VALIDATE_INDEX                 shift and go to state 251
    empty                          shift and go to state 252

state 185

    (79) SOLVE_OFFSETS -> empty .

    comma           reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    semicolon       reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    assign          reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    rParenthesis    reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    times           reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    divide          reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    plus            reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    minus           reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    greater         reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    lessThan        reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    greaterEquals   reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    lessThanEquals  reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    equals          reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    notEquals       reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    and             reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    or              reduce using rule 79 (SOLVE_OFFSETS -> empty .)
    rSqrBracket     reduce using rule 79 (SOLVE_OFFSETS -> empty .)


state 186

    (77) ISLIST -> empty SOLVE_OFFSETS .

    comma           reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    semicolon       reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    assign          reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    rParenthesis    reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    times           reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    divide          reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    plus            reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    minus           reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    greater         reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThan        reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    greaterEquals   reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    lessThanEquals  reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    equals          reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    notEquals       reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    and             reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    or              reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)
    rSqrBracket     reduce using rule 77 (ISLIST -> empty SOLVE_OFFSETS .)


state 187

    (21) VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 21 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 21 (VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 188

    (22) VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 22 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 22 (VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 189

    (23) VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .

    comma           reduce using rule 23 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)
    semicolon       reduce using rule 23 (VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR .)


state 190

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST CALCULATE_ARRAY LIST_A

    rSqrBracket     shift and go to state 253


state 191

    (28) ACUMULATE_R -> empty .

    rSqrBracket     reduce using rule 28 (ACUMULATE_R -> empty .)


state 192

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis . SAVE_COUNTER_QUAD BLOCK END_PROCEDURE
    (169) SAVE_COUNTER_QUAD -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    SAVE_COUNTER_QUAD              shift and go to state 254
    empty                          shift and go to state 255

state 193

    (96) PARAMS -> TYPE id SAVE_PARAM . SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (171) SAVE_PARAM_TYPE -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    SAVE_PARAM_TYPE                shift and go to state 256
    empty                          shift and go to state 257

state 194

    (166) SAVE_PARAM -> empty .

    comma           reduce using rule 166 (SAVE_PARAM -> empty .)
    rParenthesis    reduce using rule 166 (SAVE_PARAM -> empty .)


state 195

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST . assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon

    assign          shift and go to state 258


state 196

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA . lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL

    lParenthesis    shift and go to state 259


state 197

    (173) ERA -> empty .

    lParenthesis    reduce using rule 173 (ERA -> empty .)


state 198

    (82) CONDITION -> if lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL

    rParenthesis    shift and go to state 260


state 199

    (85) WRITE -> print lParenthesis EXPRESSION . GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon
    (191) GENERATE_QUAD_PRINT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 261
    empty                          shift and go to state 262

state 200

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis . EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 263
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 201

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK . while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    while           shift and go to state 264


state 202

    (73) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (74) READ_A -> . comma
    (75) READ_A -> . empty
    (161) empty -> .

    comma           shift and go to state 266
    rParenthesis    reduce using rule 161 (empty -> .)

    READ_A                         shift and go to state 265
    empty                          shift and go to state 267

state 203

    (88) VARCTE -> id . ISLIST
    (76) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (77) ISLIST -> . empty SOLVE_OFFSETS
    (161) empty -> .

    lSqrBracket     shift and go to state 129
    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    ISLIST                         shift and go to state 268
    empty                          shift and go to state 130

state 204

    (89) VARCTE -> cte_i . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 269
    empty                          shift and go to state 133

state 205

    (90) VARCTE -> cte_f . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 270
    empty                          shift and go to state 133

state 206

    (91) VARCTE -> cte_str . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 271
    empty                          shift and go to state 133

state 207

    (92) VARCTE -> BOOLEAN .

    comma           reduce using rule 92 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 92 (VARCTE -> BOOLEAN .)


state 208

    (105) BOOLEAN -> FALSE . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 272
    empty                          shift and go to state 133

state 209

    (106) BOOLEAN -> TRUE . PUSH_STACK_OPERANDS_CONSTANT
    (177) PUSH_STACK_OPERANDS_CONSTANT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERANDS_CONSTANT   shift and go to state 273
    empty                          shift and go to state 133

state 210

    (104) RETURN -> return EXPLOG semicolon .

    id              reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    if              reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    print           reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    while           reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    do              reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    scan            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    return          reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    ols             reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    las             reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    rid             reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    kmeans          reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    mbm             reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    tseries         reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    mean_abs_err    reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    mean_sqr_err    reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    median_abs_err  reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    mean            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    mode            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    median          reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    prob            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    freq            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    variance        reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    stddev          reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    skew            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    kurt            reduce using rule 104 (RETURN -> return EXPLOG semicolon .)
    rCurlyBracket   reduce using rule 104 (RETURN -> return EXPLOG semicolon .)


state 211

    (30) EXPLOG -> EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (183) SOLVE_OPERATION_LOGIC -> . empty
    (161) empty -> .

    semicolon       reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 274
    empty                          shift and go to state 275

state 212

    (32) EXPLOG_A -> and . EXPLOG
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 276
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 213

    (33) EXPLOG_A -> or . EXPLOG
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 277
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 214

    (34) EXPLOG_A -> empty .

    semicolon       reduce using rule 34 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 34 (EXPLOG_A -> empty .)


state 215

    (31) EXPLOG -> not EXPRESSION . EXPLOG_A SOLVE_OPERATION_LOGIC
    (32) EXPLOG_A -> . and EXPLOG
    (33) EXPLOG_A -> . or EXPLOG
    (34) EXPLOG_A -> . empty
    (161) empty -> .

    and             shift and go to state 212
    or              shift and go to state 213
    semicolon       reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    EXPLOG_A                       shift and go to state 278
    empty                          shift and go to state 214

state 216

    (36) EXPRESSION -> EXP EXPRESSION_A . EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 279
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 217

    (37) EXPRESSION_A -> greater . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 280
    empty                          shift and go to state 228

state 218

    (38) EXPRESSION_A -> lessThan . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 281
    empty                          shift and go to state 228

state 219

    (39) EXPRESSION_A -> greaterEquals . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 282
    empty                          shift and go to state 228

state 220

    (40) EXPRESSION_A -> lessThanEquals . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 283
    empty                          shift and go to state 228

state 221

    (41) EXPRESSION_A -> equals . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 284
    empty                          shift and go to state 228

state 222

    (42) EXPRESSION_A -> notEquals . PUSH_STACK_OPERATORS
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 285
    empty                          shift and go to state 228

state 223

    (43) EXP -> TERM SOLVE_OPERATION_SUM_MINUS .
    (44) EXP -> TERM SOLVE_OPERATION_SUM_MINUS . EXP_A
    (45) EXP_A -> . plus PUSH_STACK_OPERATORS EXP
    (46) EXP_A -> . minus PUSH_STACK_OPERATORS EXP

    greater         reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThan        reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    greaterEquals   reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    lessThanEquals  reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    equals          reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    notEquals       reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    and             reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    or              reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    semicolon       reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rSqrBracket     reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    rParenthesis    reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    comma           reduce using rule 43 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS .)
    plus            shift and go to state 287
    minus           shift and go to state 288

    EXP_A                          shift and go to state 286

state 224

    (180) SOLVE_OPERATION_SUM_MINUS -> empty .

    plus            reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    minus           reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greater         reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThan        reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    greaterEquals   reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    lessThanEquals  reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    equals          reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    notEquals       reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    and             reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    or              reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    semicolon       reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rSqrBracket     reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    rParenthesis    reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)
    comma           reduce using rule 180 (SOLVE_OPERATION_SUM_MINUS -> empty .)


state 225

    (47) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .
    (48) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE . TERM_A
    (49) TERM_A -> . times PUSH_STACK_OPERATORS TERM
    (50) TERM_A -> . divide PUSH_STACK_OPERATORS TERM

    plus            reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    minus           reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greater         reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThan        reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    greaterEquals   reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    lessThanEquals  reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    equals          reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    notEquals       reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    and             reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    or              reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    semicolon       reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rSqrBracket     reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    rParenthesis    reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    comma           reduce using rule 47 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE .)
    times           shift and go to state 290
    divide          shift and go to state 291

    TERM_A                         shift and go to state 289

state 226

    (181) SOLVE_OPERATION_TIMES_DIVIDE -> empty .

    times           reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    divide          reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    plus            reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    minus           reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greater         reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThan        reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    greaterEquals   reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    lessThanEquals  reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    equals          reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    notEquals       reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    and             reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    or              reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    semicolon       reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rSqrBracket     reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    rParenthesis    reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)
    comma           reduce using rule 181 (SOLVE_OPERATION_TIMES_DIVIDE -> empty .)


state 227

    (51) FACTOR -> lParenthesis PUSH_STACK_OPERATORS . EXPLOG rParenthesis POP_STACK_OPERATORS
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 292
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 228

    (178) PUSH_STACK_OPERATORS -> empty .

    not             reduce using rule 178 (PUSH_STACK_OPERATORS -> empty .)
    lParenthesis    reduce using rule 178 (PUSH_STACK_OPERATORS -> empty .)
    id              reduce using rule 178 (PUSH_STACK_OPERATORS -> empty .)
    cte_i           reduce using rule 178 (PUSH_STACK_OPERATORS -> empty .)
    cte_f           reduce using rule 178 (PUSH_STACK_OPERATORS -> empty .)


state 229

    (53) VARCONSTAUX -> id PUSH_STACK_OPERANDS . ISLIST
    (76) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (77) ISLIST -> . empty SOLVE_OFFSETS
    (161) empty -> .

    lSqrBracket     shift and go to state 129
    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    ISLIST                         shift and go to state 293
    empty                          shift and go to state 130

state 230

    (176) PUSH_STACK_OPERANDS -> empty .

    lSqrBracket     reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    times           reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    divide          reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    plus            reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    minus           reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    greater         reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    lessThan        reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    greaterEquals   reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    lessThanEquals  reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    equals          reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    notEquals       reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    and             reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    or              reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    semicolon       reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    rSqrBracket     reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    rParenthesis    reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)
    comma           reduce using rule 176 (PUSH_STACK_OPERANDS -> empty .)


state 231

    (54) VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 54 (VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 232

    (55) VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    times           reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    divide          reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    plus            reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    minus           reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greater         reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThan        reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    greaterEquals   reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    lessThanEquals  reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    equals          reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    notEquals       reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    and             reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    or              reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    semicolon       reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rSqrBracket     reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    comma           reduce using rule 55 (VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 233

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 294


state 234

    (126) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 295


state 235

    (127) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 296


state 236

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 297


state 237

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 298


state 238

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 299


state 239

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 300


state 240

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 301


state 241

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 302


state 242

    (134) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (135) MEAN_A -> . comma id MEAN_A
    (136) MEAN_A -> . empty
    (161) empty -> .

    comma           shift and go to state 304
    rParenthesis    reduce using rule 161 (empty -> .)

    MEAN_A                         shift and go to state 303
    empty                          shift and go to state 305

state 243

    (137) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (138) MODE_A -> . comma id MODE_A
    (139) MODE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 307
    rParenthesis    reduce using rule 161 (empty -> .)

    MODE_A                         shift and go to state 306
    empty                          shift and go to state 308

state 244

    (140) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (141) MEDIAN_A -> . comma id MEDIAN_A
    (142) MEDIAN_A -> . empty
    (161) empty -> .

    comma           shift and go to state 310
    rParenthesis    reduce using rule 161 (empty -> .)

    MEDIAN_A                       shift and go to state 309
    empty                          shift and go to state 311

state 245

    (143) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (144) PROBABILITY_A -> . comma id PROBABILITY_A
    (145) PROBABILITY_A -> . empty
    (161) empty -> .

    comma           shift and go to state 313
    rParenthesis    reduce using rule 161 (empty -> .)

    PROBABILITY_A                  shift and go to state 312
    empty                          shift and go to state 314

state 246

    (146) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (147) FREQUENCY_A -> . comma id FREQUENCY_A
    (148) FREQUENCY_A -> . empty
    (161) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 161 (empty -> .)

    FREQUENCY_A                    shift and go to state 315
    empty                          shift and go to state 317

state 247

    (149) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (150) VARIANCE_A -> . comma id VARIANCE_A
    (151) VARIANCE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 319
    rParenthesis    reduce using rule 161 (empty -> .)

    VARIANCE_A                     shift and go to state 318
    empty                          shift and go to state 320

state 248

    (152) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (153) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (154) STANDARD_DEVIATION_A -> . empty
    (161) empty -> .

    comma           shift and go to state 322
    rParenthesis    reduce using rule 161 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 321
    empty                          shift and go to state 323

state 249

    (155) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (156) SKEWNESS_A -> . comma id SKEWNESS_A
    (157) SKEWNESS_A -> . empty
    (161) empty -> .

    comma           shift and go to state 325
    rParenthesis    reduce using rule 161 (empty -> .)

    SKEWNESS_A                     shift and go to state 324
    empty                          shift and go to state 326

state 250

    (158) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (159) KURTOSI_A -> . comma id KURTOSI_A
    (160) KURTOSI_A -> . empty
    (161) empty -> .

    comma           shift and go to state 328
    rParenthesis    reduce using rule 161 (empty -> .)

    KURTOSI_A                      shift and go to state 327
    empty                          shift and go to state 329

state 251

    (76) ISLIST -> lSqrBracket EXP VALIDATE_INDEX . rSqrBracket ISLIST

    rSqrBracket     shift and go to state 330


state 252

    (78) VALIDATE_INDEX -> empty .

    rSqrBracket     reduce using rule 78 (VALIDATE_INDEX -> empty .)


state 253

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST CALCULATE_ARRAY LIST_A
    (16) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (17) LIST -> . empty
    (161) empty -> .

    lSqrBracket     shift and go to state 331
    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    LIST                           shift and go to state 332
    empty                          shift and go to state 333

state 254

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD . BLOCK END_PROCEDURE
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 334

state 255

    (169) SAVE_COUNTER_QUAD -> empty .

    lCurlyBracket   reduce using rule 169 (SAVE_COUNTER_QUAD -> empty .)


state 256

    (96) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE . INCREMENT_PARAM_COUNTER PARAMS_A
    (167) INCREMENT_PARAM_COUNTER -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    INCREMENT_PARAM_COUNTER        shift and go to state 335
    empty                          shift and go to state 336

state 257

    (171) SAVE_PARAM_TYPE -> empty .

    comma           reduce using rule 171 (SAVE_PARAM_TYPE -> empty .)
    rParenthesis    reduce using rule 171 (SAVE_PARAM_TYPE -> empty .)


state 258

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign . PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    not             reduce using rule 161 (empty -> .)
    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 337
    empty                          shift and go to state 228

state 259

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis . EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 338
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 260

    (82) CONDITION -> if lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (185) GENERATE_GOTOF_CONDITIONAL -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 339
    empty                          shift and go to state 340

state 261

    (85) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT . WRITE_A rParenthesis semicolon
    (86) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (87) WRITE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 342
    rParenthesis    reduce using rule 161 (empty -> .)

    WRITE_A                        shift and go to state 341
    empty                          shift and go to state 343

state 262

    (191) GENERATE_QUAD_PRINT -> empty .

    comma           reduce using rule 191 (GENERATE_QUAD_PRINT -> empty .)
    rParenthesis    reduce using rule 191 (GENERATE_QUAD_PRINT -> empty .)


state 263

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG . rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 344


state 264

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while . lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    lParenthesis    shift and go to state 345


state 265

    (73) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 346


state 266

    (74) READ_A -> comma .

    rParenthesis    reduce using rule 74 (READ_A -> comma .)


state 267

    (75) READ_A -> empty .

    rParenthesis    reduce using rule 75 (READ_A -> empty .)


state 268

    (88) VARCTE -> id ISLIST .

    comma           reduce using rule 88 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 88 (VARCTE -> id ISLIST .)


state 269

    (89) VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 89 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 89 (VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT .)


state 270

    (90) VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 90 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 90 (VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT .)


state 271

    (91) VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 91 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 91 (VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT .)


state 272

    (105) BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 105 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 105 (BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT .)


state 273

    (106) BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .

    comma           reduce using rule 106 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)
    rParenthesis    reduce using rule 106 (BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT .)


state 274

    (30) EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 30 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 30 (EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 275

    (183) SOLVE_OPERATION_LOGIC -> empty .

    semicolon       reduce using rule 183 (SOLVE_OPERATION_LOGIC -> empty .)
    rParenthesis    reduce using rule 183 (SOLVE_OPERATION_LOGIC -> empty .)


state 276

    (32) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 32 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 32 (EXPLOG_A -> and EXPLOG .)


state 277

    (33) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 33 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 33 (EXPLOG_A -> or EXPLOG .)


state 278

    (31) EXPLOG -> not EXPRESSION EXPLOG_A . SOLVE_OPERATION_LOGIC
    (183) SOLVE_OPERATION_LOGIC -> . empty
    (161) empty -> .

    semicolon       reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_LOGIC          shift and go to state 347
    empty                          shift and go to state 275

state 279

    (36) EXPRESSION -> EXP EXPRESSION_A EXP . SOLVE_OPERATION_RELATIONSHIP
    (182) SOLVE_OPERATION_RELATIONSHIP -> . empty
    (161) empty -> .

    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_RELATIONSHIP   shift and go to state 348
    empty                          shift and go to state 349

state 280

    (37) EXPRESSION_A -> greater PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 37 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    id              reduce using rule 37 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 37 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 37 (EXPRESSION_A -> greater PUSH_STACK_OPERATORS .)


state 281

    (38) EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 38 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    id              reduce using rule 38 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 38 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 38 (EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS .)


state 282

    (39) EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 39 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 39 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 39 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 39 (EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS .)


state 283

    (40) EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 40 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 40 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 40 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 40 (EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS .)


state 284

    (41) EXPRESSION_A -> equals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 41 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    id              reduce using rule 41 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 41 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 41 (EXPRESSION_A -> equals PUSH_STACK_OPERATORS .)


state 285

    (42) EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .

    lParenthesis    reduce using rule 42 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    id              reduce using rule 42 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_i           reduce using rule 42 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)
    cte_f           reduce using rule 42 (EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS .)


state 286

    (44) EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .

    greater         reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThan        reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    greaterEquals   reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    lessThanEquals  reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    equals          reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    notEquals       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    and             reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    or              reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    semicolon       reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rSqrBracket     reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    rParenthesis    reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)
    comma           reduce using rule 44 (EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A .)


state 287

    (45) EXP_A -> plus . PUSH_STACK_OPERATORS EXP
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 350
    empty                          shift and go to state 228

state 288

    (46) EXP_A -> minus . PUSH_STACK_OPERATORS EXP
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 351
    empty                          shift and go to state 228

state 289

    (48) TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .

    plus            reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    minus           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greater         reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThan        reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    greaterEquals   reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    lessThanEquals  reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    equals          reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    notEquals       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    and             reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    or              reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    semicolon       reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rSqrBracket     reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    rParenthesis    reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)
    comma           reduce using rule 48 (TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A .)


state 290

    (49) TERM_A -> times . PUSH_STACK_OPERATORS TERM
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 352
    empty                          shift and go to state 228

state 291

    (50) TERM_A -> divide . PUSH_STACK_OPERATORS TERM
    (178) PUSH_STACK_OPERATORS -> . empty
    (161) empty -> .

    lParenthesis    reduce using rule 161 (empty -> .)
    id              reduce using rule 161 (empty -> .)
    cte_i           reduce using rule 161 (empty -> .)
    cte_f           reduce using rule 161 (empty -> .)

    PUSH_STACK_OPERATORS           shift and go to state 353
    empty                          shift and go to state 228

state 292

    (51) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG . rParenthesis POP_STACK_OPERATORS

    rParenthesis    shift and go to state 354


state 293

    (53) VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .

    times           reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    divide          reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    plus            reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    minus           reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greater         reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThan        reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    greaterEquals   reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    lessThanEquals  reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    equals          reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    notEquals       reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    and             reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    or              reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    semicolon       reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rSqrBracket     reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    rParenthesis    reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)
    comma           reduce using rule 53 (VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST .)


state 294

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 355


state 295

    (126) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 356


state 296

    (127) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 357


state 297

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 358


state 298

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 359


state 299

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 360

state 300

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 361


state 301

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 362


state 302

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 363


state 303

    (134) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 364


state 304

    (135) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 365


state 305

    (136) MEAN_A -> empty .

    rParenthesis    reduce using rule 136 (MEAN_A -> empty .)


state 306

    (137) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 366


state 307

    (138) MODE_A -> comma . id MODE_A

    id              shift and go to state 367


state 308

    (139) MODE_A -> empty .

    rParenthesis    reduce using rule 139 (MODE_A -> empty .)


state 309

    (140) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 368


state 310

    (141) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 369


state 311

    (142) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 142 (MEDIAN_A -> empty .)


state 312

    (143) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 370


state 313

    (144) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 371


state 314

    (145) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 145 (PROBABILITY_A -> empty .)


state 315

    (146) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 372


state 316

    (147) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 373


state 317

    (148) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 148 (FREQUENCY_A -> empty .)


state 318

    (149) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 374


state 319

    (150) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 375


state 320

    (151) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 151 (VARIANCE_A -> empty .)


state 321

    (152) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 376


state 322

    (153) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 377


state 323

    (154) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 154 (STANDARD_DEVIATION_A -> empty .)


state 324

    (155) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 378


state 325

    (156) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 379


state 326

    (157) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 157 (SKEWNESS_A -> empty .)


state 327

    (158) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 380


state 328

    (159) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 381


state 329

    (160) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 160 (KURTOSI_A -> empty .)


state 330

    (76) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket . ISLIST
    (76) ISLIST -> . lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST
    (77) ISLIST -> . empty SOLVE_OFFSETS
    (161) empty -> .

    lSqrBracket     shift and go to state 129
    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    assign          reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)

    ISLIST                         shift and go to state 382
    empty                          shift and go to state 130

state 331

    (16) LIST -> lSqrBracket . cte_i ACUMULATE_R rSqrBracket LIST

    cte_i           shift and go to state 383


state 332

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST . CALCULATE_ARRAY LIST_A
    (29) CALCULATE_ARRAY -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    CALCULATE_ARRAY                shift and go to state 384
    empty                          shift and go to state 385

state 333

    (17) LIST -> empty .

    comma           reduce using rule 17 (LIST -> empty .)
    semicolon       reduce using rule 17 (LIST -> empty .)


state 334

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK . END_PROCEDURE
    (170) END_PROCEDURE -> . empty
    (161) empty -> .

    func            reduce using rule 161 (empty -> .)
    void            reduce using rule 161 (empty -> .)

    END_PROCEDURE                  shift and go to state 386
    empty                          shift and go to state 387

state 335

    (96) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER . PARAMS_A
    (97) PARAMS_A -> . comma PARAMS
    (98) PARAMS_A -> . empty
    (161) empty -> .

    comma           shift and go to state 389
    rParenthesis    reduce using rule 161 (empty -> .)

    PARAMS_A                       shift and go to state 388
    empty                          shift and go to state 390

state 336

    (167) INCREMENT_PARAM_COUNTER -> empty .

    comma           reduce using rule 167 (INCREMENT_PARAM_COUNTER -> empty .)
    rParenthesis    reduce using rule 167 (INCREMENT_PARAM_COUNTER -> empty .)


state 337

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS . EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 391
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 338

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP . VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (174) VALIDATE_PARAMETER -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    VALIDATE_PARAMETER             shift and go to state 392
    empty                          shift and go to state 393

state 339

    (82) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 394

state 340

    (185) GENERATE_GOTOF_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 185 (GENERATE_GOTOF_CONDITIONAL -> empty .)


state 341

    (85) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 395


state 342

    (86) WRITE_A -> comma . EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPRESSION                     shift and go to state 396
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 343

    (87) WRITE_A -> empty .

    rParenthesis    reduce using rule 87 (WRITE_A -> empty .)


state 344

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis . GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (185) GENERATE_GOTOF_CONDITIONAL -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    GENERATE_GOTOF_CONDITIONAL     shift and go to state 397
    empty                          shift and go to state 340

state 345

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis . EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (30) EXPLOG -> . EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (31) EXPLOG -> . not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC
    (35) EXPRESSION -> . EXP
    (36) EXPRESSION -> . EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    not             shift and go to state 157
    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXPLOG                         shift and go to state 398
    EXPRESSION                     shift and go to state 156
    EXP                            shift and go to state 158
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 346

    (73) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    id              reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    if              reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    print           reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    while           reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    do              reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    scan            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    return          reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    ols             reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    las             reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rid             reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kmeans          reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mbm             reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    tseries         reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_abs_err    reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean_sqr_err    reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median_abs_err  reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mean            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    mode            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    median          reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    prob            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    freq            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    variance        reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    stddev          reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    skew            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    kurt            reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)
    rCurlyBracket   reduce using rule 73 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 347

    (31) EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .

    semicolon       reduce using rule 31 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)
    rParenthesis    reduce using rule 31 (EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC .)


state 348

    (36) EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .

    and             reduce using rule 36 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    or              reduce using rule 36 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    semicolon       reduce using rule 36 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    rParenthesis    reduce using rule 36 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)
    comma           reduce using rule 36 (EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP .)


state 349

    (182) SOLVE_OPERATION_RELATIONSHIP -> empty .

    and             reduce using rule 182 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    or              reduce using rule 182 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    semicolon       reduce using rule 182 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    rParenthesis    reduce using rule 182 (SOLVE_OPERATION_RELATIONSHIP -> empty .)
    comma           reduce using rule 182 (SOLVE_OPERATION_RELATIONSHIP -> empty .)


state 350

    (45) EXP_A -> plus PUSH_STACK_OPERATORS . EXP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 399
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 351

    (46) EXP_A -> minus PUSH_STACK_OPERATORS . EXP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 400
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 352

    (49) TERM_A -> times PUSH_STACK_OPERATORS . TERM
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    TERM                           shift and go to state 401
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 353

    (50) TERM_A -> divide PUSH_STACK_OPERATORS . TERM
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    TERM                           shift and go to state 402
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 354

    (51) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis . POP_STACK_OPERATORS
    (179) POP_STACK_OPERATORS -> . empty
    (161) empty -> .

    times           reduce using rule 161 (empty -> .)
    divide          reduce using rule 161 (empty -> .)
    plus            reduce using rule 161 (empty -> .)
    minus           reduce using rule 161 (empty -> .)
    greater         reduce using rule 161 (empty -> .)
    lessThan        reduce using rule 161 (empty -> .)
    greaterEquals   reduce using rule 161 (empty -> .)
    lessThanEquals  reduce using rule 161 (empty -> .)
    equals          reduce using rule 161 (empty -> .)
    notEquals       reduce using rule 161 (empty -> .)
    and             reduce using rule 161 (empty -> .)
    or              reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)
    rSqrBracket     reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)
    comma           reduce using rule 161 (empty -> .)

    POP_STACK_OPERATORS            shift and go to state 403
    empty                          shift and go to state 404

state 355

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 405


state 356

    (126) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 406


state 357

    (127) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 407


state 358

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 408


state 359

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 409


state 360

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 410


state 361

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 411


state 362

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 412


state 363

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 413


state 364

    (134) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 414


state 365

    (135) MEAN_A -> comma id . MEAN_A
    (135) MEAN_A -> . comma id MEAN_A
    (136) MEAN_A -> . empty
    (161) empty -> .

    comma           shift and go to state 304
    rParenthesis    reduce using rule 161 (empty -> .)

    MEAN_A                         shift and go to state 415
    empty                          shift and go to state 305

state 366

    (137) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 416


state 367

    (138) MODE_A -> comma id . MODE_A
    (138) MODE_A -> . comma id MODE_A
    (139) MODE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 307
    rParenthesis    reduce using rule 161 (empty -> .)

    MODE_A                         shift and go to state 417
    empty                          shift and go to state 308

state 368

    (140) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 418


state 369

    (141) MEDIAN_A -> comma id . MEDIAN_A
    (141) MEDIAN_A -> . comma id MEDIAN_A
    (142) MEDIAN_A -> . empty
    (161) empty -> .

    comma           shift and go to state 310
    rParenthesis    reduce using rule 161 (empty -> .)

    MEDIAN_A                       shift and go to state 419
    empty                          shift and go to state 311

state 370

    (143) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 420


state 371

    (144) PROBABILITY_A -> comma id . PROBABILITY_A
    (144) PROBABILITY_A -> . comma id PROBABILITY_A
    (145) PROBABILITY_A -> . empty
    (161) empty -> .

    comma           shift and go to state 313
    rParenthesis    reduce using rule 161 (empty -> .)

    PROBABILITY_A                  shift and go to state 421
    empty                          shift and go to state 314

state 372

    (146) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 422


state 373

    (147) FREQUENCY_A -> comma id . FREQUENCY_A
    (147) FREQUENCY_A -> . comma id FREQUENCY_A
    (148) FREQUENCY_A -> . empty
    (161) empty -> .

    comma           shift and go to state 316
    rParenthesis    reduce using rule 161 (empty -> .)

    FREQUENCY_A                    shift and go to state 423
    empty                          shift and go to state 317

state 374

    (149) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 424


state 375

    (150) VARIANCE_A -> comma id . VARIANCE_A
    (150) VARIANCE_A -> . comma id VARIANCE_A
    (151) VARIANCE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 319
    rParenthesis    reduce using rule 161 (empty -> .)

    VARIANCE_A                     shift and go to state 425
    empty                          shift and go to state 320

state 376

    (152) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 426


state 377

    (153) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (153) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (154) STANDARD_DEVIATION_A -> . empty
    (161) empty -> .

    comma           shift and go to state 322
    rParenthesis    reduce using rule 161 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 427
    empty                          shift and go to state 323

state 378

    (155) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 428


state 379

    (156) SKEWNESS_A -> comma id . SKEWNESS_A
    (156) SKEWNESS_A -> . comma id SKEWNESS_A
    (157) SKEWNESS_A -> . empty
    (161) empty -> .

    comma           shift and go to state 325
    rParenthesis    reduce using rule 161 (empty -> .)

    SKEWNESS_A                     shift and go to state 429
    empty                          shift and go to state 326

state 380

    (158) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 430


state 381

    (159) KURTOSI_A -> comma id . KURTOSI_A
    (159) KURTOSI_A -> . comma id KURTOSI_A
    (160) KURTOSI_A -> . empty
    (161) empty -> .

    comma           shift and go to state 328
    rParenthesis    reduce using rule 161 (empty -> .)

    KURTOSI_A                      shift and go to state 431
    empty                          shift and go to state 329

state 382

    (76) ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .

    comma           reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    semicolon       reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    assign          reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rParenthesis    reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    times           reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    divide          reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    plus            reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    minus           reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greater         reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThan        reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    greaterEquals   reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    lessThanEquals  reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    equals          reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    notEquals       reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    and             reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    or              reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)
    rSqrBracket     reduce using rule 76 (ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST .)


state 383

    (16) LIST -> lSqrBracket cte_i . ACUMULATE_R rSqrBracket LIST
    (28) ACUMULATE_R -> . empty
    (161) empty -> .

    rSqrBracket     reduce using rule 161 (empty -> .)

    ACUMULATE_R                    shift and go to state 432
    empty                          shift and go to state 191

state 384

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY . LIST_A
    (18) LIST_A -> . comma VARS_A
    (19) LIST_A -> . empty
    (161) empty -> .

    comma           shift and go to state 434
    semicolon       reduce using rule 161 (empty -> .)

    LIST_A                         shift and go to state 433
    empty                          shift and go to state 435

state 385

    (29) CALCULATE_ARRAY -> empty .

    comma           reduce using rule 29 (CALCULATE_ARRAY -> empty .)
    semicolon       reduce using rule 29 (CALCULATE_ARRAY -> empty .)


state 386

    (93) METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .

    func            reduce using rule 93 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)
    void            reduce using rule 93 (METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE .)


state 387

    (170) END_PROCEDURE -> empty .

    func            reduce using rule 170 (END_PROCEDURE -> empty .)
    void            reduce using rule 170 (END_PROCEDURE -> empty .)


state 388

    (96) PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .

    rParenthesis    reduce using rule 96 (PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A .)


state 389

    (97) PARAMS_A -> comma . PARAMS
    (96) PARAMS -> . TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A
    (56) TYPE -> . int SAVE_TYPE
    (57) TYPE -> . float SAVE_TYPE
    (58) TYPE -> . string SAVE_TYPE
    (59) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 22
    float           shift and go to state 23
    string          shift and go to state 24
    bool            shift and go to state 25

    PARAMS                         shift and go to state 436
    TYPE                           shift and go to state 70

state 390

    (98) PARAMS_A -> empty .

    rParenthesis    reduce using rule 98 (PARAMS_A -> empty .)


state 391

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG . SOLVE_OPERATION_ASSIGNMENT semicolon
    (184) SOLVE_OPERATION_ASSIGNMENT -> . empty
    (161) empty -> .

    semicolon       reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_ASSIGNMENT     shift and go to state 437
    empty                          shift and go to state 438

state 392

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER . METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL
    (102) METHODCALL_A -> . comma EXP
    (103) METHODCALL_A -> . empty
    (161) empty -> .

    comma           shift and go to state 440
    rParenthesis    reduce using rule 161 (empty -> .)

    METHODCALL_A                   shift and go to state 439
    empty                          shift and go to state 441

state 393

    (174) VALIDATE_PARAMETER -> empty .

    comma           reduce using rule 174 (VALIDATE_PARAMETER -> empty .)
    rParenthesis    reduce using rule 174 (VALIDATE_PARAMETER -> empty .)


state 394

    (82) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . CONDITION_A SOLVE_OPERATION_CONDITIONAL
    (83) CONDITION_A -> . else GENERATE_GOTO_CONDITIONAL BLOCK
    (84) CONDITION_A -> . empty
    (161) empty -> .

    else            shift and go to state 443
    id              reduce using rule 161 (empty -> .)
    if              reduce using rule 161 (empty -> .)
    print           reduce using rule 161 (empty -> .)
    while           reduce using rule 161 (empty -> .)
    do              reduce using rule 161 (empty -> .)
    scan            reduce using rule 161 (empty -> .)
    return          reduce using rule 161 (empty -> .)
    ols             reduce using rule 161 (empty -> .)
    las             reduce using rule 161 (empty -> .)
    rid             reduce using rule 161 (empty -> .)
    kmeans          reduce using rule 161 (empty -> .)
    mbm             reduce using rule 161 (empty -> .)
    tseries         reduce using rule 161 (empty -> .)
    mean_abs_err    reduce using rule 161 (empty -> .)
    mean_sqr_err    reduce using rule 161 (empty -> .)
    median_abs_err  reduce using rule 161 (empty -> .)
    mean            reduce using rule 161 (empty -> .)
    mode            reduce using rule 161 (empty -> .)
    median          reduce using rule 161 (empty -> .)
    prob            reduce using rule 161 (empty -> .)
    freq            reduce using rule 161 (empty -> .)
    variance        reduce using rule 161 (empty -> .)
    stddev          reduce using rule 161 (empty -> .)
    skew            reduce using rule 161 (empty -> .)
    kurt            reduce using rule 161 (empty -> .)
    rCurlyBracket   reduce using rule 161 (empty -> .)

    CONDITION_A                    shift and go to state 442
    empty                          shift and go to state 444

state 395

    (85) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 445


state 396

    (86) WRITE_A -> comma EXPRESSION . GENERATE_QUAD_PRINT WRITE_A
    (191) GENERATE_QUAD_PRINT -> . empty
    (161) empty -> .

    comma           reduce using rule 161 (empty -> .)
    rParenthesis    reduce using rule 161 (empty -> .)

    GENERATE_QUAD_PRINT            shift and go to state 446
    empty                          shift and go to state 262

state 397

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL . BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 447

state 398

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG . rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP

    rParenthesis    shift and go to state 448


state 399

    (45) EXP_A -> plus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 45 (EXP_A -> plus PUSH_STACK_OPERATORS EXP .)


state 400

    (46) EXP_A -> minus PUSH_STACK_OPERATORS EXP .

    greater         reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThan        reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    greaterEquals   reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    lessThanEquals  reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    equals          reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    notEquals       reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    and             reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    or              reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    semicolon       reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rSqrBracket     reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    rParenthesis    reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)
    comma           reduce using rule 46 (EXP_A -> minus PUSH_STACK_OPERATORS EXP .)


state 401

    (49) TERM_A -> times PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 49 (TERM_A -> times PUSH_STACK_OPERATORS TERM .)


state 402

    (50) TERM_A -> divide PUSH_STACK_OPERATORS TERM .

    plus            reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    minus           reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greater         reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThan        reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    greaterEquals   reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    lessThanEquals  reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    equals          reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    notEquals       reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    and             reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    or              reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    semicolon       reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rSqrBracket     reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    rParenthesis    reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)
    comma           reduce using rule 50 (TERM_A -> divide PUSH_STACK_OPERATORS TERM .)


state 403

    (51) FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .

    times           reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    divide          reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    plus            reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    minus           reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greater         reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThan        reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    greaterEquals   reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    lessThanEquals  reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    equals          reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    notEquals       reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    and             reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    or              reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    semicolon       reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rSqrBracket     reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    rParenthesis    reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)
    comma           reduce using rule 51 (FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS .)


state 404

    (179) POP_STACK_OPERATORS -> empty .

    times           reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    divide          reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    plus            reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    minus           reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    greater         reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    lessThan        reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    greaterEquals   reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    lessThanEquals  reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    equals          reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    notEquals       reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    and             reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    or              reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    semicolon       reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    rSqrBracket     reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    rParenthesis    reduce using rule 179 (POP_STACK_OPERATORS -> empty .)
    comma           reduce using rule 179 (POP_STACK_OPERATORS -> empty .)


state 405

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 449

state 406

    (126) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 450

state 407

    (127) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 451

state 408

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 452

state 409

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 453

state 410

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 454


state 411

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 455


state 412

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 456


state 413

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 457


state 414

    (134) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    id              reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    if              reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    print           reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    while           reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    do              reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    scan            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    return          reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    ols             reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    las             reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rid             reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mbm             reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    tseries         reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mean            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    mode            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    median          reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    prob            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    freq            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    variance        reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    stddev          reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    skew            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    kurt            reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 134 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 415

    (135) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 135 (MEAN_A -> comma id MEAN_A .)


state 416

    (137) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    id              reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    if              reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    print           reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    while           reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    do              reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    scan            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    return          reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    ols             reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    las             reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rid             reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kmeans          reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mbm             reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    tseries         reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mean            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    mode            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    median          reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    prob            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    freq            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    variance        reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    stddev          reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    skew            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    kurt            reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 137 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 417

    (138) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 138 (MODE_A -> comma id MODE_A .)


state 418

    (140) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    id              reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    if              reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    print           reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    while           reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    do              reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    scan            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    return          reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    ols             reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    las             reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rid             reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kmeans          reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mbm             reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    tseries         reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mean            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    mode            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    median          reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    prob            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    freq            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    variance        reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    stddev          reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    skew            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    kurt            reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 140 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 419

    (141) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 141 (MEDIAN_A -> comma id MEDIAN_A .)


state 420

    (143) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    id              reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    if              reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    print           reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    while           reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    do              reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    scan            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    return          reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    ols             reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    las             reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rid             reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kmeans          reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mbm             reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    tseries         reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mean            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    mode            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    median          reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    prob            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    freq            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    variance        reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    stddev          reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    skew            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    kurt            reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 143 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 421

    (144) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 144 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 422

    (146) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    id              reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    if              reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    print           reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    while           reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    do              reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    scan            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    return          reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    ols             reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    las             reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rid             reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kmeans          reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mbm             reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    tseries         reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mean            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    mode            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    median          reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    prob            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    freq            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    variance        reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    stddev          reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    skew            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    kurt            reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 146 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 423

    (147) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 147 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 424

    (149) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    id              reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    if              reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    print           reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    while           reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    do              reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    scan            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    return          reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    ols             reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    las             reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rid             reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kmeans          reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mbm             reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    tseries         reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mean            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    mode            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    median          reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    prob            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    freq            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    variance        reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    stddev          reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    skew            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    kurt            reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 149 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 425

    (150) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 150 (VARIANCE_A -> comma id VARIANCE_A .)


state 426

    (152) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    id              reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    if              reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    print           reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    while           reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    do              reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    scan            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    return          reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    ols             reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    las             reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rid             reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kmeans          reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mbm             reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    tseries         reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mean            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    mode            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    median          reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    prob            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    freq            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    variance        reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    stddev          reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    skew            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    kurt            reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 152 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 427

    (153) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 153 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 428

    (155) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    id              reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    if              reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    print           reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    while           reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    do              reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    scan            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    return          reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    ols             reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    las             reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rid             reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kmeans          reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mbm             reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    tseries         reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mean            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    mode            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    median          reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    prob            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    freq            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    variance        reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    stddev          reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    skew            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    kurt            reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 155 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 429

    (156) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 156 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 430

    (158) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    id              reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    if              reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    print           reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    while           reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    do              reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    scan            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    return          reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    ols             reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    las             reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rid             reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kmeans          reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mbm             reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    tseries         reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mean            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    mode            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    median          reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    prob            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    freq            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    variance        reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    stddev          reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    skew            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    kurt            reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 158 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 431

    (159) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 159 (KURTOSI_A -> comma id KURTOSI_A .)


state 432

    (16) LIST -> lSqrBracket cte_i ACUMULATE_R . rSqrBracket LIST

    rSqrBracket     shift and go to state 458


state 433

    (10) VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .

    semicolon       reduce using rule 10 (VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A .)


state 434

    (18) LIST_A -> comma . VARS_A
    (8) VARS_A -> . id assign VARCTE_AUX_VARS SIMPLE
    (9) VARS_A -> . id SAVE_VAR SIMPLE
    (10) VARS_A -> . id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A
    (11) VARS_A -> . empty
    (161) empty -> .

    id              shift and go to state 40
    semicolon       reduce using rule 161 (empty -> .)

    VARS_A                         shift and go to state 459
    empty                          shift and go to state 41

state 435

    (19) LIST_A -> empty .

    semicolon       reduce using rule 19 (LIST_A -> empty .)


state 436

    (97) PARAMS_A -> comma PARAMS .

    rParenthesis    reduce using rule 97 (PARAMS_A -> comma PARAMS .)


state 437

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT . semicolon

    semicolon       shift and go to state 460


state 438

    (184) SOLVE_OPERATION_ASSIGNMENT -> empty .

    semicolon       reduce using rule 184 (SOLVE_OPERATION_ASSIGNMENT -> empty .)


state 439

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A . rParenthesis semicolon VALIDATE_METHOD_CALL

    rParenthesis    shift and go to state 461


state 440

    (102) METHODCALL_A -> comma . EXP
    (43) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS
    (44) EXP -> . TERM SOLVE_OPERATION_SUM_MINUS EXP_A
    (47) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE
    (48) TERM -> . FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A
    (51) FACTOR -> . lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS
    (52) FACTOR -> . VARCONSTAUX
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    lParenthesis    shift and go to state 161
    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    EXP                            shift and go to state 462
    TERM                           shift and go to state 159
    FACTOR                         shift and go to state 160
    VARCONSTAUX                    shift and go to state 162

state 441

    (103) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 103 (METHODCALL_A -> empty .)


state 442

    (82) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A . SOLVE_OPERATION_CONDITIONAL
    (186) SOLVE_OPERATION_CONDITIONAL -> . empty
    (161) empty -> .

    id              reduce using rule 161 (empty -> .)
    if              reduce using rule 161 (empty -> .)
    print           reduce using rule 161 (empty -> .)
    while           reduce using rule 161 (empty -> .)
    do              reduce using rule 161 (empty -> .)
    scan            reduce using rule 161 (empty -> .)
    return          reduce using rule 161 (empty -> .)
    ols             reduce using rule 161 (empty -> .)
    las             reduce using rule 161 (empty -> .)
    rid             reduce using rule 161 (empty -> .)
    kmeans          reduce using rule 161 (empty -> .)
    mbm             reduce using rule 161 (empty -> .)
    tseries         reduce using rule 161 (empty -> .)
    mean_abs_err    reduce using rule 161 (empty -> .)
    mean_sqr_err    reduce using rule 161 (empty -> .)
    median_abs_err  reduce using rule 161 (empty -> .)
    mean            reduce using rule 161 (empty -> .)
    mode            reduce using rule 161 (empty -> .)
    median          reduce using rule 161 (empty -> .)
    prob            reduce using rule 161 (empty -> .)
    freq            reduce using rule 161 (empty -> .)
    variance        reduce using rule 161 (empty -> .)
    stddev          reduce using rule 161 (empty -> .)
    skew            reduce using rule 161 (empty -> .)
    kurt            reduce using rule 161 (empty -> .)
    rCurlyBracket   reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_CONDITIONAL    shift and go to state 463
    empty                          shift and go to state 464

state 443

    (83) CONDITION_A -> else . GENERATE_GOTO_CONDITIONAL BLOCK
    (187) GENERATE_GOTO_CONDITIONAL -> . empty
    (161) empty -> .

    lCurlyBracket   reduce using rule 161 (empty -> .)

    GENERATE_GOTO_CONDITIONAL      shift and go to state 465
    empty                          shift and go to state 466

state 444

    (84) CONDITION_A -> empty .

    id              reduce using rule 84 (CONDITION_A -> empty .)
    if              reduce using rule 84 (CONDITION_A -> empty .)
    print           reduce using rule 84 (CONDITION_A -> empty .)
    while           reduce using rule 84 (CONDITION_A -> empty .)
    do              reduce using rule 84 (CONDITION_A -> empty .)
    scan            reduce using rule 84 (CONDITION_A -> empty .)
    return          reduce using rule 84 (CONDITION_A -> empty .)
    ols             reduce using rule 84 (CONDITION_A -> empty .)
    las             reduce using rule 84 (CONDITION_A -> empty .)
    rid             reduce using rule 84 (CONDITION_A -> empty .)
    kmeans          reduce using rule 84 (CONDITION_A -> empty .)
    mbm             reduce using rule 84 (CONDITION_A -> empty .)
    tseries         reduce using rule 84 (CONDITION_A -> empty .)
    mean_abs_err    reduce using rule 84 (CONDITION_A -> empty .)
    mean_sqr_err    reduce using rule 84 (CONDITION_A -> empty .)
    median_abs_err  reduce using rule 84 (CONDITION_A -> empty .)
    mean            reduce using rule 84 (CONDITION_A -> empty .)
    mode            reduce using rule 84 (CONDITION_A -> empty .)
    median          reduce using rule 84 (CONDITION_A -> empty .)
    prob            reduce using rule 84 (CONDITION_A -> empty .)
    freq            reduce using rule 84 (CONDITION_A -> empty .)
    variance        reduce using rule 84 (CONDITION_A -> empty .)
    stddev          reduce using rule 84 (CONDITION_A -> empty .)
    skew            reduce using rule 84 (CONDITION_A -> empty .)
    kurt            reduce using rule 84 (CONDITION_A -> empty .)
    rCurlyBracket   reduce using rule 84 (CONDITION_A -> empty .)


state 445

    (85) WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .

    id              reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    if              reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    print           reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    while           reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    do              reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    scan            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    return          reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    ols             reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    las             reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rid             reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kmeans          reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mbm             reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    tseries         reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_abs_err    reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median_abs_err  reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mean            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    mode            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    median          reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    prob            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    freq            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    variance        reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    stddev          reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    skew            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    kurt            reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 85 (WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon .)


state 446

    (86) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT . WRITE_A
    (86) WRITE_A -> . comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A
    (87) WRITE_A -> . empty
    (161) empty -> .

    comma           shift and go to state 342
    rParenthesis    reduce using rule 161 (empty -> .)

    WRITE_A                        shift and go to state 467
    empty                          shift and go to state 343

state 447

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK . SOLVE_OPERATION_PRE_CONDITIONAL_LOOP
    (189) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> . empty
    (161) empty -> .

    id              reduce using rule 161 (empty -> .)
    if              reduce using rule 161 (empty -> .)
    print           reduce using rule 161 (empty -> .)
    while           reduce using rule 161 (empty -> .)
    do              reduce using rule 161 (empty -> .)
    scan            reduce using rule 161 (empty -> .)
    return          reduce using rule 161 (empty -> .)
    ols             reduce using rule 161 (empty -> .)
    las             reduce using rule 161 (empty -> .)
    rid             reduce using rule 161 (empty -> .)
    kmeans          reduce using rule 161 (empty -> .)
    mbm             reduce using rule 161 (empty -> .)
    tseries         reduce using rule 161 (empty -> .)
    mean_abs_err    reduce using rule 161 (empty -> .)
    mean_sqr_err    reduce using rule 161 (empty -> .)
    median_abs_err  reduce using rule 161 (empty -> .)
    mean            reduce using rule 161 (empty -> .)
    mode            reduce using rule 161 (empty -> .)
    median          reduce using rule 161 (empty -> .)
    prob            reduce using rule 161 (empty -> .)
    freq            reduce using rule 161 (empty -> .)
    variance        reduce using rule 161 (empty -> .)
    stddev          reduce using rule 161 (empty -> .)
    skew            reduce using rule 161 (empty -> .)
    kurt            reduce using rule 161 (empty -> .)
    rCurlyBracket   reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_PRE_CONDITIONAL_LOOP shift and go to state 468
    empty                          shift and go to state 469

state 448

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis . SOLVE_OPERATION_POST_CONDITIONAL_LOOP
    (190) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> . empty
    (161) empty -> .

    id              reduce using rule 161 (empty -> .)
    if              reduce using rule 161 (empty -> .)
    print           reduce using rule 161 (empty -> .)
    while           reduce using rule 161 (empty -> .)
    do              reduce using rule 161 (empty -> .)
    scan            reduce using rule 161 (empty -> .)
    return          reduce using rule 161 (empty -> .)
    ols             reduce using rule 161 (empty -> .)
    las             reduce using rule 161 (empty -> .)
    rid             reduce using rule 161 (empty -> .)
    kmeans          reduce using rule 161 (empty -> .)
    mbm             reduce using rule 161 (empty -> .)
    tseries         reduce using rule 161 (empty -> .)
    mean_abs_err    reduce using rule 161 (empty -> .)
    mean_sqr_err    reduce using rule 161 (empty -> .)
    median_abs_err  reduce using rule 161 (empty -> .)
    mean            reduce using rule 161 (empty -> .)
    mode            reduce using rule 161 (empty -> .)
    median          reduce using rule 161 (empty -> .)
    prob            reduce using rule 161 (empty -> .)
    freq            reduce using rule 161 (empty -> .)
    variance        reduce using rule 161 (empty -> .)
    stddev          reduce using rule 161 (empty -> .)
    skew            reduce using rule 161 (empty -> .)
    kurt            reduce using rule 161 (empty -> .)
    rCurlyBracket   reduce using rule 161 (empty -> .)

    SOLVE_OPERATION_POST_CONDITIONAL_LOOP shift and go to state 470
    empty                          shift and go to state 471

state 449

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 472


state 450

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 473


state 451

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 474


state 452

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 475


state 453

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 476


state 454

    (130) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 130 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 455

    (131) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 131 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 456

    (132) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 132 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 457

    (133) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    id              reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    if              reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    print           reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    while           reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    do              reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    scan            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    return          reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    ols             reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    las             reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rid             reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kmeans          reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mbm             reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    tseries         reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_abs_err    reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median_abs_err  reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mean            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    mode            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    median          reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    prob            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    freq            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    variance        reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    stddev          reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    skew            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    kurt            reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 133 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 458

    (16) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket . LIST
    (16) LIST -> . lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST
    (17) LIST -> . empty
    (161) empty -> .

    lSqrBracket     shift and go to state 331
    comma           reduce using rule 161 (empty -> .)
    semicolon       reduce using rule 161 (empty -> .)

    LIST                           shift and go to state 477
    empty                          shift and go to state 333

state 459

    (18) LIST_A -> comma VARS_A .

    semicolon       reduce using rule 18 (LIST_A -> comma VARS_A .)


state 460

    (72) ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .

    id              reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    if              reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    print           reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    while           reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    do              reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    scan            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    return          reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    ols             reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    las             reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rid             reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kmeans          reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mbm             reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    tseries         reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_abs_err    reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean_sqr_err    reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median_abs_err  reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mean            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    mode            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    median          reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    prob            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    freq            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    variance        reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    stddev          reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    skew            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    kurt            reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)
    rCurlyBracket   reduce using rule 72 (ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon .)


state 461

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis . semicolon VALIDATE_METHOD_CALL

    semicolon       shift and go to state 478


state 462

    (102) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 102 (METHODCALL_A -> comma EXP .)


state 463

    (82) CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .

    id              reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    if              reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    print           reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    while           reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    do              reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    scan            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    return          reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    ols             reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    las             reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rid             reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kmeans          reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mbm             reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    tseries         reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_abs_err    reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean_sqr_err    reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median_abs_err  reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mean            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    mode            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    median          reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    prob            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    freq            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    variance        reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    stddev          reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    skew            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    kurt            reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)
    rCurlyBracket   reduce using rule 82 (CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL .)


state 464

    (186) SOLVE_OPERATION_CONDITIONAL -> empty .

    id              reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    if              reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    print           reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    while           reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    do              reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    scan            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    return          reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    ols             reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    las             reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rid             reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kmeans          reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mbm             reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    tseries         reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_abs_err    reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean_sqr_err    reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median_abs_err  reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mean            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    mode            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    median          reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    prob            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    freq            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    variance        reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    stddev          reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    skew            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    kurt            reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)
    rCurlyBracket   reduce using rule 186 (SOLVE_OPERATION_CONDITIONAL -> empty .)


state 465

    (83) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL . BLOCK
    (60) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 51

    BLOCK                          shift and go to state 479

state 466

    (187) GENERATE_GOTO_CONDITIONAL -> empty .

    lCurlyBracket   reduce using rule 187 (GENERATE_GOTO_CONDITIONAL -> empty .)


state 467

    (86) WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .

    rParenthesis    reduce using rule 86 (WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A .)


state 468

    (99) PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .

    id              reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    if              reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    print           reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    while           reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    do              reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    scan            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    return          reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    ols             reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    las             reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rid             reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mbm             reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    tseries         reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mean            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    mode            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    median          reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    prob            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    freq            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    variance        reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    stddev          reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    skew            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    kurt            reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 99 (PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP .)


state 469

    (189) SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 189 (SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty .)


state 470

    (100) POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .

    id              reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    if              reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    print           reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    while           reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    do              reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    scan            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    return          reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    ols             reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    las             reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rid             reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kmeans          reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mbm             reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    tseries         reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_abs_err    reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean_sqr_err    reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median_abs_err  reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mean            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    mode            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    median          reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    prob            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    freq            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    variance        reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    stddev          reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    skew            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    kurt            reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)
    rCurlyBracket   reduce using rule 100 (POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP .)


state 471

    (190) SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .

    id              reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    if              reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    print           reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    while           reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    do              reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    scan            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    return          reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    ols             reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    las             reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rid             reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kmeans          reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mbm             reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    tseries         reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_abs_err    reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean_sqr_err    reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median_abs_err  reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mean            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    mode            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    median          reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    prob            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    freq            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    variance        reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    stddev          reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    skew            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    kurt            reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)
    rCurlyBracket   reduce using rule 190 (SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty .)


state 472

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 480

state 473

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 481

state 474

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 482

state 475

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 483

state 476

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 484

state 477

    (16) LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .

    comma           reduce using rule 16 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)
    semicolon       reduce using rule 16 (LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST .)


state 478

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon . VALIDATE_METHOD_CALL
    (175) VALIDATE_METHOD_CALL -> . empty
    (161) empty -> .

    id              reduce using rule 161 (empty -> .)
    if              reduce using rule 161 (empty -> .)
    print           reduce using rule 161 (empty -> .)
    while           reduce using rule 161 (empty -> .)
    do              reduce using rule 161 (empty -> .)
    scan            reduce using rule 161 (empty -> .)
    return          reduce using rule 161 (empty -> .)
    ols             reduce using rule 161 (empty -> .)
    las             reduce using rule 161 (empty -> .)
    rid             reduce using rule 161 (empty -> .)
    kmeans          reduce using rule 161 (empty -> .)
    mbm             reduce using rule 161 (empty -> .)
    tseries         reduce using rule 161 (empty -> .)
    mean_abs_err    reduce using rule 161 (empty -> .)
    mean_sqr_err    reduce using rule 161 (empty -> .)
    median_abs_err  reduce using rule 161 (empty -> .)
    mean            reduce using rule 161 (empty -> .)
    mode            reduce using rule 161 (empty -> .)
    median          reduce using rule 161 (empty -> .)
    prob            reduce using rule 161 (empty -> .)
    freq            reduce using rule 161 (empty -> .)
    variance        reduce using rule 161 (empty -> .)
    stddev          reduce using rule 161 (empty -> .)
    skew            reduce using rule 161 (empty -> .)
    kurt            reduce using rule 161 (empty -> .)
    rCurlyBracket   reduce using rule 161 (empty -> .)

    VALIDATE_METHOD_CALL           shift and go to state 485
    empty                          shift and go to state 486

state 479

    (83) CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .

    id              reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    if              reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    print           reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    while           reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    do              reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    scan            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    return          reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    ols             reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    las             reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rid             reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kmeans          reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mbm             reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    tseries         reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_abs_err    reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean_sqr_err    reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median_abs_err  reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mean            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    mode            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    median          reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    prob            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    freq            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    variance        reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    stddev          reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    skew            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    kurt            reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)
    rCurlyBracket   reduce using rule 83 (CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK .)


state 480

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 487


state 481

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 488


state 482

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 489


state 483

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 490


state 484

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 491


state 485

    (101) METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .

    id              reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    if              reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    print           reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    while           reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    do              reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    scan            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    return          reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    ols             reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    las             reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rid             reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kmeans          reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mbm             reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    tseries         reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_abs_err    reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean_sqr_err    reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median_abs_err  reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mean            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    mode            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    median          reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    prob            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    freq            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    variance        reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    stddev          reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    skew            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    kurt            reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)
    rCurlyBracket   reduce using rule 101 (METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL .)


state 486

    (175) VALIDATE_METHOD_CALL -> empty .

    id              reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    if              reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    print           reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    while           reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    do              reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    scan            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    return          reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    ols             reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    las             reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    rid             reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    kmeans          reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    mbm             reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    tseries         reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    mean_abs_err    reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    mean_sqr_err    reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    median_abs_err  reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    mean            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    mode            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    median          reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    prob            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    freq            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    variance        reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    stddev          reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    skew            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    kurt            reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)
    rCurlyBracket   reduce using rule 175 (VALIDATE_METHOD_CALL -> empty .)


state 487

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 492

state 488

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 493

state 489

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 494

state 490

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 495

state 491

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 496

state 492

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 497


state 493

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 498


state 494

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 499


state 495

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 500


state 496

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 501


state 497

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 502

state 498

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 503

state 499

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 504

state 500

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 505


state 501

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 506

state 502

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 507


state 503

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 508


state 504

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 509


state 505

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 510


state 506

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 511


state 507

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 512


state 508

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 513

state 509

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 514

state 510

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 515

state 511

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 516

state 512

    (125) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 125 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 513

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 517


state 514

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 518


state 515

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 519


state 516

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 520


state 517

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 521

state 518

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 522

state 519

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 523

state 520

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 524

state 521

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 525


state 522

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 526


state 523

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 527


state 524

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 528


state 525

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 529

state 526

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 530


state 527

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 531

state 528

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 532

state 529

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 533


state 530

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 534


state 531

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 535


state 532

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 536


state 533

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 537

state 534

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 538

state 535

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 539

state 536

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 540

state 537

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 541


state 538

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 542


state 539

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 543


state 540

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 544


state 541

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 545


state 542

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 546


state 543

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 547


state 544

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 548

state 545

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 549


state 546

    (127) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 127 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 547

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 550


state 548

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 551


state 549

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 552


state 550

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 553


state 551

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (53) VARCONSTAUX -> . id PUSH_STACK_OPERANDS ISLIST
    (54) VARCONSTAUX -> . cte_i PUSH_STACK_OPERANDS_CONSTANT
    (55) VARCONSTAUX -> . cte_f PUSH_STACK_OPERANDS_CONSTANT

    id              shift and go to state 163
    cte_i           shift and go to state 164
    cte_f           shift and go to state 165

    VARCONSTAUX                    shift and go to state 554

state 552

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 555


state 553

    (128) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    id              reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    if              reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    print           reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    while           reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    do              reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    scan            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    return          reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    ols             reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    las             reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rid             reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kmeans          reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mbm             reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    tseries         reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_abs_err    reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median_abs_err  reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mean            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    mode            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    median          reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    prob            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    freq            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    variance        reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    stddev          reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    skew            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    kurt            reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 128 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 554

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 556


state 555

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (105) BOOLEAN -> . FALSE PUSH_STACK_OPERANDS_CONSTANT
    (106) BOOLEAN -> . TRUE PUSH_STACK_OPERANDS_CONSTANT

    FALSE           shift and go to state 208
    TRUE            shift and go to state 209

    BOOLEAN                        shift and go to state 557

state 556

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 558


state 557

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 559


state 558

    (129) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    id              reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    if              reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    print           reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    while           reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    do              reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    scan            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    return          reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    ols             reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    las             reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rid             reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kmeans          reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mbm             reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    tseries         reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_abs_err    reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median_abs_err  reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mean            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    mode            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    median          reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    prob            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    freq            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    variance        reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    stddev          reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    skew            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    kurt            reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 129 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 559

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 560


state 560

    (126) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    id              reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    if              reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    print           reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    while           reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    do              reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    scan            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    return          reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    ols             reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    las             reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rid             reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kmeans          reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mbm             reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    tseries         reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_abs_err    reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean_sqr_err    reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median_abs_err  reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mean            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    mode            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    median          reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    prob            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    freq            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    variance        reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    stddev          reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    skew            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    kurt            reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)
    rCurlyBracket   reduce using rule 126 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for var in state 44 resolved as shift
