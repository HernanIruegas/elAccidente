Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK
Rule 2     PROGRAM_A -> VARS PROGRAM_A
Rule 3     PROGRAM_A -> METHOD PROGRAM_A
Rule 4     PROGRAM_A -> empty
Rule 5     VARS -> var VARS_A
Rule 6     VARS_A -> TYPE colon VARS_B semicolon VARS_C
Rule 7     VARS_B -> SIMPLE
Rule 8     VARS_B -> LIST
Rule 9     VARS_C -> VARS_A
Rule 10    VARS_C -> empty
Rule 11    SIMPLE -> id SAVE_VAR SIMPLE_A
Rule 12    SIMPLE_A -> comma SIMPLE
Rule 13    SIMPLE_A -> empty
Rule 14    LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
Rule 15    LIST_A -> comma LIST
Rule 16    LIST_A -> empty
Rule 17    EXPLOG -> EXPRESSION EXPLOG_A
Rule 18    EXPLOG -> not EXPRESSION EXPLOG_A
Rule 19    EXPLOG_A -> and EXPLOG
Rule 20    EXPLOG_A -> or EXPLOG
Rule 21    EXPLOG_A -> empty
Rule 22    EXPRESSION -> EXP EXPRESSION_A EXP
Rule 23    EXPRESSION_A -> greater
Rule 24    EXPRESSION_A -> lessThan
Rule 25    EXPRESSION_A -> greaterEquals
Rule 26    EXPRESSION_A -> lessThanEquals
Rule 27    EXPRESSION_A -> equals
Rule 28    EXPRESSION_A -> notEquals
Rule 29    EXP -> TERM EXP_A
Rule 30    EXP_A -> plus EXP
Rule 31    EXP_A -> minus EXP
Rule 32    EXP_A -> empty
Rule 33    TERM -> FACTOR TERM_A
Rule 34    TERM_A -> times TERM
Rule 35    TERM_A -> divide TERM
Rule 36    TERM_A -> empty
Rule 37    FACTOR -> lParenthesis EXPLOG rParenthesis
Rule 38    FACTOR -> VARCONSTAUX
Rule 39    VARCONSTAUX -> id ISLIST
Rule 40    VARCONSTAUX -> cte_i
Rule 41    VARCONSTAUX -> cte_f
Rule 42    TYPE -> int SAVE_TYPE
Rule 43    TYPE -> float SAVE_TYPE
Rule 44    TYPE -> string SAVE_TYPE
Rule 45    TYPE -> bool SAVE_TYPE
Rule 46    BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket
Rule 47    BLOCK_A -> STATEMENT
Rule 48    BLOCK_A -> empty
Rule 49    STATEMENT -> ASSIGNMENT
Rule 50    STATEMENT -> CONDITION
Rule 51    STATEMENT -> WRITE
Rule 52    STATEMENT -> LOOP
Rule 53    STATEMENT -> METHODCALL
Rule 54    STATEMENT -> READ
Rule 55    STATEMENT -> STATMETHODS
Rule 56    STATEMENT -> RETURN
Rule 57    ASSIGNMENT -> id ISLIST equals EXPRESSION semicolon
Rule 58    READ -> scan lParenthesis VARCTE READ_A rParenthesis
Rule 59    READ_A -> comma
Rule 60    READ_A -> empty
Rule 61    ISLIST -> lSqrBracket EXP rSqrBracket
Rule 62    ISLIST -> empty
Rule 63    TYPEMETHOD -> TYPE
Rule 64    TYPEMETHOD -> void
Rule 65    CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon
Rule 66    CONDITION_A -> else BLOCK
Rule 67    CONDITION_A -> empty
Rule 68    WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon
Rule 69    WRITE_A -> comma EXPRESSION WRITE_A
Rule 70    WRITE_A -> empty
Rule 71    VARCTE -> id ISLIST
Rule 72    VARCTE -> cte_i
Rule 73    VARCTE -> cte_f
Rule 74    VARCTE -> cte_str
Rule 75    VARCTE -> BOOLEAN
Rule 76    METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
Rule 77    PARAMS -> EXP PARAMS_A
Rule 78    PARAMS_A -> comma EXP PARAMS_A
Rule 79    PARAMS_A -> empty
Rule 80    LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK
Rule 81    METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon
Rule 82    METHODCALL_A -> comma EXP
Rule 83    METHODCALL_A -> empty
Rule 84    RETURN -> return EXPLOG semicolon
Rule 85    BOOLEAN -> FALSE
Rule 86    BOOLEAN -> TRUE
Rule 87    STATMETHODS -> ORDINARY_LEAST_SQUARES
Rule 88    STATMETHODS -> LASSO
Rule 89    STATMETHODS -> RIDGE
Rule 90    STATMETHODS -> K_MEANS
Rule 91    STATMETHODS -> MINI_BATCH_MEANS
Rule 92    STATMETHODS -> TIME_SERIES_SPLIT
Rule 93    STATMETHODS -> MEAN_ABSOLUTE_ERROR
Rule 94    STATMETHODS -> MEAN_SQUARED_ERROR
Rule 95    STATMETHODS -> MEDIAN_ABSOLUTE_ERROR
Rule 96    STATMETHODS -> MEAN
Rule 97    STATMETHODS -> MODE
Rule 98    STATMETHODS -> MEDIAN
Rule 99    STATMETHODS -> PROBABILITY
Rule 100   STATMETHODS -> FREQUENCY
Rule 101   STATMETHODS -> VARIANCE
Rule 102   STATMETHODS -> STANDARD_DEVIATION
Rule 103   STATMETHODS -> SKEWNESS
Rule 104   STATMETHODS -> KURTOSI
Rule 105   ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
Rule 106   LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
Rule 107   RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
Rule 108   K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
Rule 109   MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 110   TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
Rule 111   MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 112   MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon
Rule 113   MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon
Rule 114   MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon
Rule 115   MEAN_A -> comma id MEAN_A
Rule 116   MEAN_A -> empty
Rule 117   MODE -> mode lParenthesis id MODE_A rParenthesis semicolon
Rule 118   MODE_A -> comma id MODE_A
Rule 119   MODE_A -> empty
Rule 120   MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon
Rule 121   MEDIAN_A -> comma id MEDIAN_A
Rule 122   MEDIAN_A -> empty
Rule 123   PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon
Rule 124   PROBABILITY_A -> comma id PROBABILITY_A
Rule 125   PROBABILITY_A -> empty
Rule 126   FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon
Rule 127   FREQUENCY_A -> comma id FREQUENCY_A
Rule 128   FREQUENCY_A -> empty
Rule 129   VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon
Rule 130   VARIANCE_A -> comma id VARIANCE_A
Rule 131   VARIANCE_A -> empty
Rule 132   STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
Rule 133   STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A
Rule 134   STANDARD_DEVIATION_A -> empty
Rule 135   SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon
Rule 136   SKEWNESS_A -> comma id SKEWNESS_A
Rule 137   SKEWNESS_A -> empty
Rule 138   KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon
Rule 139   KURTOSI_A -> comma id KURTOSI_A
Rule 140   KURTOSI_A -> empty
Rule 141   empty -> <empty>
Rule 142   START_GLOBAL_FUNCTION -> empty
Rule 143   SAVE_TYPE -> empty
Rule 144   SAVE_VAR -> empty
Rule 145   SAVE_ARRAY -> empty

Terminals, with rules where they appear

FALSE                : 85
TRUE                 : 86
and                  : 19
bool                 : 45
colon                : 6
comma                : 12 15 59 69 78 82 105 105 105 105 105 106 106 106 106 106 106 106 106 106 106 106 106 107 107 107 107 107 107 107 107 107 108 108 108 108 108 108 108 108 108 108 109 109 109 109 109 109 109 109 109 109 109 110 111 112 113 115 118 121 124 127 130 133 136 139
cte_f                : 41 73
cte_i                : 40 72
cte_str              : 74
divide               : 35
else                 : 66
equals               : 27 57
error                : 
float                : 43 106
freq                 : 126
func                 : 76
globalFunc           : 1
greater              : 23
greaterEquals        : 25
id                   : 11 14 39 57 71 76 81 105 105 106 106 107 107 111 111 112 112 113 113 114 115 117 118 120 121 123 124 126 127 129 130 132 133 135 136 138 139
if                   : 65
int                  : 42
kmeans               : 108
kurt                 : 138
lCurlyBracket        : 46
lParenthesis         : 37 58 65 68 76 80 81 105 106 107 108 109 110 111 112 113 114 117 120 123 126 129 132 135 138
lSqrBracket          : 14 61
las                  : 106
lessThan             : 24
lessThanEquals       : 26
mbm                  : 109
mean                 : 114
mean_abs_err         : 111
mean_sqr_err         : 112
median               : 120
median_abs_err       : 113
minus                : 31
mode                 : 117
not                  : 18
notEquals            : 28
ols                  : 105
or                   : 20
plus                 : 30
print                : 68
prob                 : 123
program              : 1
rCurlyBracket        : 46
rParenthesis         : 37 58 65 68 76 80 81 105 106 107 108 109 110 111 112 113 114 117 120 123 126 129 132 135 138
rSqrBracket          : 14 61
return               : 84
rid                  : 107
scan                 : 58
semicolon            : 1 6 57 65 68 76 81 84 105 106 107 108 109 110 111 112 113 114 117 120 123 126 129 132 135 138
skew                 : 135
start                : 1
stddev               : 132
string               : 44 106 107 108 108 108 109
times                : 34
tseries              : 110
var                  : 5
variance             : 129
void                 : 64
while                : 80

Nonterminals, with rules where they appear

ASSIGNMENT           : 49
BLOCK                : 1 65 66 76 80
BLOCK_A              : 46
BOOLEAN              : 75 105 105 105 106 106 106 106 106 106 107 107 107 108 109 109
CONDITION            : 50
CONDITION_A          : 65
EXP                  : 22 22 30 31 61 77 78 81 82
EXPLOG               : 19 20 37 65 80 84
EXPLOG_A             : 17 18
EXPRESSION           : 17 18 57 68 69
EXPRESSION_A         : 22
EXP_A                : 29
FACTOR               : 33
FREQUENCY            : 100
FREQUENCY_A          : 126 127
ISLIST               : 39 57 71
KURTOSI              : 104
KURTOSI_A            : 138 139
K_MEANS              : 90
LASSO                : 88
LIST                 : 8 15
LIST_A               : 14
LOOP                 : 52
MEAN                 : 96
MEAN_A               : 114 115
MEAN_ABSOLUTE_ERROR  : 93
MEAN_SQUARED_ERROR   : 94
MEDIAN               : 98
MEDIAN_A             : 120 121
MEDIAN_ABSOLUTE_ERROR : 95
METHOD               : 3
METHODCALL           : 53
METHODCALL_A         : 81
MINI_BATCH_MEANS     : 91
MODE                 : 97
MODE_A               : 117 118
ORDINARY_LEAST_SQUARES : 87
PARAMS               : 76
PARAMS_A             : 77 78
PROBABILITY          : 99
PROBABILITY_A        : 123 124
PROGRAM              : 0
PROGRAM_A            : 1 2 3
READ                 : 54
READ_A               : 58
RETURN               : 56
RIDGE                : 89
SAVE_ARRAY           : 14
SAVE_TYPE            : 42 43 44 45
SAVE_VAR             : 11
SIMPLE               : 7 12
SIMPLE_A             : 11
SKEWNESS             : 103
SKEWNESS_A           : 135 136
STANDARD_DEVIATION   : 102
STANDARD_DEVIATION_A : 132 133
START_GLOBAL_FUNCTION : 1
STATEMENT            : 47
STATMETHODS          : 55
TERM                 : 29 34 35
TERM_A               : 33
TIME_SERIES_SPLIT    : 92
TYPE                 : 6 63
TYPEMETHOD           : 76
VARCONSTAUX          : 14 38 105 106 106 106 107 107 107 107 108 108 108 108 108 108 108 109 109 109 109 109 109 109 109 109 110 110
VARCTE               : 58
VARIANCE             : 101
VARIANCE_A           : 129 130
VARS                 : 2
VARS_A               : 5 9
VARS_B               : 6
VARS_C               : 6
WRITE                : 51
WRITE_A              : 68 69
empty                : 4 10 13 16 21 32 36 48 60 62 67 70 79 83 116 119 122 125 128 131 134 137 140 142 143 144 145

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK

    program         shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> program . globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK

    globalFunc      shift and go to state 3


state 3

    (1) PROGRAM -> program globalFunc . START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK
    (142) START_GLOBAL_FUNCTION -> . empty
    (141) empty -> .

    semicolon       reduce using rule 141 (empty -> .)

    START_GLOBAL_FUNCTION          shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION . semicolon PROGRAM_A start BLOCK

    semicolon       shift and go to state 6


state 5

    (142) START_GLOBAL_FUNCTION -> empty .

    semicolon       reduce using rule 142 (START_GLOBAL_FUNCTION -> empty .)


state 6

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon . PROGRAM_A start BLOCK
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (76) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (141) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 141 (empty -> .)

    PROGRAM_A                      shift and go to state 7
    VARS                           shift and go to state 8
    METHOD                         shift and go to state 9
    empty                          shift and go to state 10

state 7

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A . start BLOCK

    start           shift and go to state 13


state 8

    (2) PROGRAM_A -> VARS . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (76) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (141) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 141 (empty -> .)

    VARS                           shift and go to state 8
    PROGRAM_A                      shift and go to state 14
    METHOD                         shift and go to state 9
    empty                          shift and go to state 10

state 9

    (3) PROGRAM_A -> METHOD . PROGRAM_A
    (2) PROGRAM_A -> . VARS PROGRAM_A
    (3) PROGRAM_A -> . METHOD PROGRAM_A
    (4) PROGRAM_A -> . empty
    (5) VARS -> . var VARS_A
    (76) METHOD -> . func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (141) empty -> .

    var             shift and go to state 11
    func            shift and go to state 12
    start           reduce using rule 141 (empty -> .)

    METHOD                         shift and go to state 9
    PROGRAM_A                      shift and go to state 15
    VARS                           shift and go to state 8
    empty                          shift and go to state 10

state 10

    (4) PROGRAM_A -> empty .

    start           reduce using rule 4 (PROGRAM_A -> empty .)


state 11

    (5) VARS -> var . VARS_A
    (6) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (42) TYPE -> . int SAVE_TYPE
    (43) TYPE -> . float SAVE_TYPE
    (44) TYPE -> . string SAVE_TYPE
    (45) TYPE -> . bool SAVE_TYPE

    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    VARS_A                         shift and go to state 16
    TYPE                           shift and go to state 17

state 12

    (76) METHOD -> func . TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon
    (63) TYPEMETHOD -> . TYPE
    (64) TYPEMETHOD -> . void
    (42) TYPE -> . int SAVE_TYPE
    (43) TYPE -> . float SAVE_TYPE
    (44) TYPE -> . string SAVE_TYPE
    (45) TYPE -> . bool SAVE_TYPE

    void            shift and go to state 24
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    TYPEMETHOD                     shift and go to state 22
    TYPE                           shift and go to state 23

state 13

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start . BLOCK
    (46) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 25

state 14

    (2) PROGRAM_A -> VARS PROGRAM_A .

    start           reduce using rule 2 (PROGRAM_A -> VARS PROGRAM_A .)


state 15

    (3) PROGRAM_A -> METHOD PROGRAM_A .

    start           reduce using rule 3 (PROGRAM_A -> METHOD PROGRAM_A .)


state 16

    (5) VARS -> var VARS_A .

    var             reduce using rule 5 (VARS -> var VARS_A .)
    func            reduce using rule 5 (VARS -> var VARS_A .)
    start           reduce using rule 5 (VARS -> var VARS_A .)


state 17

    (6) VARS_A -> TYPE . colon VARS_B semicolon VARS_C

    colon           shift and go to state 27


state 18

    (42) TYPE -> int . SAVE_TYPE
    (143) SAVE_TYPE -> . empty
    (141) empty -> .

    colon           reduce using rule 141 (empty -> .)
    id              reduce using rule 141 (empty -> .)

    SAVE_TYPE                      shift and go to state 28
    empty                          shift and go to state 29

state 19

    (43) TYPE -> float . SAVE_TYPE
    (143) SAVE_TYPE -> . empty
    (141) empty -> .

    colon           reduce using rule 141 (empty -> .)
    id              reduce using rule 141 (empty -> .)

    SAVE_TYPE                      shift and go to state 30
    empty                          shift and go to state 29

state 20

    (44) TYPE -> string . SAVE_TYPE
    (143) SAVE_TYPE -> . empty
    (141) empty -> .

    colon           reduce using rule 141 (empty -> .)
    id              reduce using rule 141 (empty -> .)

    SAVE_TYPE                      shift and go to state 31
    empty                          shift and go to state 29

state 21

    (45) TYPE -> bool . SAVE_TYPE
    (143) SAVE_TYPE -> . empty
    (141) empty -> .

    colon           reduce using rule 141 (empty -> .)
    id              reduce using rule 141 (empty -> .)

    SAVE_TYPE                      shift and go to state 32
    empty                          shift and go to state 29

state 22

    (76) METHOD -> func TYPEMETHOD . id lParenthesis PARAMS rParenthesis BLOCK semicolon

    id              shift and go to state 33


state 23

    (63) TYPEMETHOD -> TYPE .

    id              reduce using rule 63 (TYPEMETHOD -> TYPE .)


state 24

    (64) TYPEMETHOD -> void .

    id              reduce using rule 64 (TYPEMETHOD -> void .)


state 25

    (1) PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK .

    $end            reduce using rule 1 (PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK .)


state 26

    (46) BLOCK -> lCurlyBracket . BLOCK_A rCurlyBracket
    (47) BLOCK_A -> . STATEMENT
    (48) BLOCK_A -> . empty
    (49) STATEMENT -> . ASSIGNMENT
    (50) STATEMENT -> . CONDITION
    (51) STATEMENT -> . WRITE
    (52) STATEMENT -> . LOOP
    (53) STATEMENT -> . METHODCALL
    (54) STATEMENT -> . READ
    (55) STATEMENT -> . STATMETHODS
    (56) STATEMENT -> . RETURN
    (141) empty -> .
    (57) ASSIGNMENT -> . id ISLIST equals EXPRESSION semicolon
    (65) CONDITION -> . if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon
    (68) WRITE -> . print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon
    (80) LOOP -> . while lParenthesis EXPLOG rParenthesis BLOCK
    (81) METHODCALL -> . id lParenthesis EXP METHODCALL_A rParenthesis semicolon
    (58) READ -> . scan lParenthesis VARCTE READ_A rParenthesis
    (87) STATMETHODS -> . ORDINARY_LEAST_SQUARES
    (88) STATMETHODS -> . LASSO
    (89) STATMETHODS -> . RIDGE
    (90) STATMETHODS -> . K_MEANS
    (91) STATMETHODS -> . MINI_BATCH_MEANS
    (92) STATMETHODS -> . TIME_SERIES_SPLIT
    (93) STATMETHODS -> . MEAN_ABSOLUTE_ERROR
    (94) STATMETHODS -> . MEAN_SQUARED_ERROR
    (95) STATMETHODS -> . MEDIAN_ABSOLUTE_ERROR
    (96) STATMETHODS -> . MEAN
    (97) STATMETHODS -> . MODE
    (98) STATMETHODS -> . MEDIAN
    (99) STATMETHODS -> . PROBABILITY
    (100) STATMETHODS -> . FREQUENCY
    (101) STATMETHODS -> . VARIANCE
    (102) STATMETHODS -> . STANDARD_DEVIATION
    (103) STATMETHODS -> . SKEWNESS
    (104) STATMETHODS -> . KURTOSI
    (84) RETURN -> . return EXPLOG semicolon
    (105) ORDINARY_LEAST_SQUARES -> . ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (106) LASSO -> . las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (107) RIDGE -> . rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (108) K_MEANS -> . kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (109) MINI_BATCH_MEANS -> . mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (110) TIME_SERIES_SPLIT -> . tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (111) MEAN_ABSOLUTE_ERROR -> . mean_abs_err lParenthesis id comma id rParenthesis semicolon
    (112) MEAN_SQUARED_ERROR -> . mean_sqr_err lParenthesis id comma id rParenthesis semicolon
    (113) MEDIAN_ABSOLUTE_ERROR -> . median_abs_err lParenthesis id comma id rParenthesis semicolon
    (114) MEAN -> . mean lParenthesis id MEAN_A rParenthesis semicolon
    (117) MODE -> . mode lParenthesis id MODE_A rParenthesis semicolon
    (120) MEDIAN -> . median lParenthesis id MEDIAN_A rParenthesis semicolon
    (123) PROBABILITY -> . prob lParenthesis id PROBABILITY_A rParenthesis semicolon
    (126) FREQUENCY -> . freq lParenthesis id FREQUENCY_A rParenthesis semicolon
    (129) VARIANCE -> . variance lParenthesis id VARIANCE_A rParenthesis semicolon
    (132) STANDARD_DEVIATION -> . stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon
    (135) SKEWNESS -> . skew lParenthesis id SKEWNESS_A rParenthesis semicolon
    (138) KURTOSI -> . kurt lParenthesis id KURTOSI_A rParenthesis semicolon

    rCurlyBracket   reduce using rule 141 (empty -> .)
    id              shift and go to state 45
    if              shift and go to state 46
    print           shift and go to state 47
    while           shift and go to state 48
    scan            shift and go to state 49
    return          shift and go to state 68
    ols             shift and go to state 69
    las             shift and go to state 70
    rid             shift and go to state 71
    kmeans          shift and go to state 72
    mbm             shift and go to state 73
    tseries         shift and go to state 74
    mean_abs_err    shift and go to state 75
    mean_sqr_err    shift and go to state 76
    median_abs_err  shift and go to state 77
    mean            shift and go to state 78
    mode            shift and go to state 79
    median          shift and go to state 80
    prob            shift and go to state 81
    freq            shift and go to state 82
    variance        shift and go to state 83
    stddev          shift and go to state 84
    skew            shift and go to state 85
    kurt            shift and go to state 86

    BLOCK_A                        shift and go to state 34
    STATEMENT                      shift and go to state 35
    empty                          shift and go to state 36
    ASSIGNMENT                     shift and go to state 37
    CONDITION                      shift and go to state 38
    WRITE                          shift and go to state 39
    LOOP                           shift and go to state 40
    METHODCALL                     shift and go to state 41
    READ                           shift and go to state 42
    STATMETHODS                    shift and go to state 43
    RETURN                         shift and go to state 44
    ORDINARY_LEAST_SQUARES         shift and go to state 50
    LASSO                          shift and go to state 51
    RIDGE                          shift and go to state 52
    K_MEANS                        shift and go to state 53
    MINI_BATCH_MEANS               shift and go to state 54
    TIME_SERIES_SPLIT              shift and go to state 55
    MEAN_ABSOLUTE_ERROR            shift and go to state 56
    MEAN_SQUARED_ERROR             shift and go to state 57
    MEDIAN_ABSOLUTE_ERROR          shift and go to state 58
    MEAN                           shift and go to state 59
    MODE                           shift and go to state 60
    MEDIAN                         shift and go to state 61
    PROBABILITY                    shift and go to state 62
    FREQUENCY                      shift and go to state 63
    VARIANCE                       shift and go to state 64
    STANDARD_DEVIATION             shift and go to state 65
    SKEWNESS                       shift and go to state 66
    KURTOSI                        shift and go to state 67

state 27

    (6) VARS_A -> TYPE colon . VARS_B semicolon VARS_C
    (7) VARS_B -> . SIMPLE
    (8) VARS_B -> . LIST
    (11) SIMPLE -> . id SAVE_VAR SIMPLE_A
    (14) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 90

    VARS_B                         shift and go to state 87
    SIMPLE                         shift and go to state 88
    LIST                           shift and go to state 89

state 28

    (42) TYPE -> int SAVE_TYPE .

    colon           reduce using rule 42 (TYPE -> int SAVE_TYPE .)
    id              reduce using rule 42 (TYPE -> int SAVE_TYPE .)


state 29

    (143) SAVE_TYPE -> empty .

    colon           reduce using rule 143 (SAVE_TYPE -> empty .)
    id              reduce using rule 143 (SAVE_TYPE -> empty .)


state 30

    (43) TYPE -> float SAVE_TYPE .

    colon           reduce using rule 43 (TYPE -> float SAVE_TYPE .)
    id              reduce using rule 43 (TYPE -> float SAVE_TYPE .)


state 31

    (44) TYPE -> string SAVE_TYPE .

    colon           reduce using rule 44 (TYPE -> string SAVE_TYPE .)
    id              reduce using rule 44 (TYPE -> string SAVE_TYPE .)


state 32

    (45) TYPE -> bool SAVE_TYPE .

    colon           reduce using rule 45 (TYPE -> bool SAVE_TYPE .)
    id              reduce using rule 45 (TYPE -> bool SAVE_TYPE .)


state 33

    (76) METHOD -> func TYPEMETHOD id . lParenthesis PARAMS rParenthesis BLOCK semicolon

    lParenthesis    shift and go to state 91


state 34

    (46) BLOCK -> lCurlyBracket BLOCK_A . rCurlyBracket

    rCurlyBracket   shift and go to state 92


state 35

    (47) BLOCK_A -> STATEMENT .

    rCurlyBracket   reduce using rule 47 (BLOCK_A -> STATEMENT .)


state 36

    (48) BLOCK_A -> empty .

    rCurlyBracket   reduce using rule 48 (BLOCK_A -> empty .)


state 37

    (49) STATEMENT -> ASSIGNMENT .

    rCurlyBracket   reduce using rule 49 (STATEMENT -> ASSIGNMENT .)


state 38

    (50) STATEMENT -> CONDITION .

    rCurlyBracket   reduce using rule 50 (STATEMENT -> CONDITION .)


state 39

    (51) STATEMENT -> WRITE .

    rCurlyBracket   reduce using rule 51 (STATEMENT -> WRITE .)


state 40

    (52) STATEMENT -> LOOP .

    rCurlyBracket   reduce using rule 52 (STATEMENT -> LOOP .)


state 41

    (53) STATEMENT -> METHODCALL .

    rCurlyBracket   reduce using rule 53 (STATEMENT -> METHODCALL .)


state 42

    (54) STATEMENT -> READ .

    rCurlyBracket   reduce using rule 54 (STATEMENT -> READ .)


state 43

    (55) STATEMENT -> STATMETHODS .

    rCurlyBracket   reduce using rule 55 (STATEMENT -> STATMETHODS .)


state 44

    (56) STATEMENT -> RETURN .

    rCurlyBracket   reduce using rule 56 (STATEMENT -> RETURN .)


state 45

    (57) ASSIGNMENT -> id . ISLIST equals EXPRESSION semicolon
    (81) METHODCALL -> id . lParenthesis EXP METHODCALL_A rParenthesis semicolon
    (61) ISLIST -> . lSqrBracket EXP rSqrBracket
    (62) ISLIST -> . empty
    (141) empty -> .

    lParenthesis    shift and go to state 94
    lSqrBracket     shift and go to state 95
    equals          reduce using rule 141 (empty -> .)

    ISLIST                         shift and go to state 93
    empty                          shift and go to state 96

state 46

    (65) CONDITION -> if . lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon

    lParenthesis    shift and go to state 97


state 47

    (68) WRITE -> print . lParenthesis EXPRESSION WRITE_A rParenthesis semicolon

    lParenthesis    shift and go to state 98


state 48

    (80) LOOP -> while . lParenthesis EXPLOG rParenthesis BLOCK

    lParenthesis    shift and go to state 99


state 49

    (58) READ -> scan . lParenthesis VARCTE READ_A rParenthesis

    lParenthesis    shift and go to state 100


state 50

    (87) STATMETHODS -> ORDINARY_LEAST_SQUARES .

    rCurlyBracket   reduce using rule 87 (STATMETHODS -> ORDINARY_LEAST_SQUARES .)


state 51

    (88) STATMETHODS -> LASSO .

    rCurlyBracket   reduce using rule 88 (STATMETHODS -> LASSO .)


state 52

    (89) STATMETHODS -> RIDGE .

    rCurlyBracket   reduce using rule 89 (STATMETHODS -> RIDGE .)


state 53

    (90) STATMETHODS -> K_MEANS .

    rCurlyBracket   reduce using rule 90 (STATMETHODS -> K_MEANS .)


state 54

    (91) STATMETHODS -> MINI_BATCH_MEANS .

    rCurlyBracket   reduce using rule 91 (STATMETHODS -> MINI_BATCH_MEANS .)


state 55

    (92) STATMETHODS -> TIME_SERIES_SPLIT .

    rCurlyBracket   reduce using rule 92 (STATMETHODS -> TIME_SERIES_SPLIT .)


state 56

    (93) STATMETHODS -> MEAN_ABSOLUTE_ERROR .

    rCurlyBracket   reduce using rule 93 (STATMETHODS -> MEAN_ABSOLUTE_ERROR .)


state 57

    (94) STATMETHODS -> MEAN_SQUARED_ERROR .

    rCurlyBracket   reduce using rule 94 (STATMETHODS -> MEAN_SQUARED_ERROR .)


state 58

    (95) STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .

    rCurlyBracket   reduce using rule 95 (STATMETHODS -> MEDIAN_ABSOLUTE_ERROR .)


state 59

    (96) STATMETHODS -> MEAN .

    rCurlyBracket   reduce using rule 96 (STATMETHODS -> MEAN .)


state 60

    (97) STATMETHODS -> MODE .

    rCurlyBracket   reduce using rule 97 (STATMETHODS -> MODE .)


state 61

    (98) STATMETHODS -> MEDIAN .

    rCurlyBracket   reduce using rule 98 (STATMETHODS -> MEDIAN .)


state 62

    (99) STATMETHODS -> PROBABILITY .

    rCurlyBracket   reduce using rule 99 (STATMETHODS -> PROBABILITY .)


state 63

    (100) STATMETHODS -> FREQUENCY .

    rCurlyBracket   reduce using rule 100 (STATMETHODS -> FREQUENCY .)


state 64

    (101) STATMETHODS -> VARIANCE .

    rCurlyBracket   reduce using rule 101 (STATMETHODS -> VARIANCE .)


state 65

    (102) STATMETHODS -> STANDARD_DEVIATION .

    rCurlyBracket   reduce using rule 102 (STATMETHODS -> STANDARD_DEVIATION .)


state 66

    (103) STATMETHODS -> SKEWNESS .

    rCurlyBracket   reduce using rule 103 (STATMETHODS -> SKEWNESS .)


state 67

    (104) STATMETHODS -> KURTOSI .

    rCurlyBracket   reduce using rule 104 (STATMETHODS -> KURTOSI .)


state 68

    (84) RETURN -> return . EXPLOG semicolon
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 101
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 69

    (105) ORDINARY_LEAST_SQUARES -> ols . lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 112


state 70

    (106) LASSO -> las . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    lParenthesis    shift and go to state 113


state 71

    (107) RIDGE -> rid . lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 114


state 72

    (108) K_MEANS -> kmeans . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    lParenthesis    shift and go to state 115


state 73

    (109) MINI_BATCH_MEANS -> mbm . lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 116


state 74

    (110) TIME_SERIES_SPLIT -> tseries . lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    lParenthesis    shift and go to state 117


state 75

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 118


state 76

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 119


state 77

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err . lParenthesis id comma id rParenthesis semicolon

    lParenthesis    shift and go to state 120


state 78

    (114) MEAN -> mean . lParenthesis id MEAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 121


state 79

    (117) MODE -> mode . lParenthesis id MODE_A rParenthesis semicolon

    lParenthesis    shift and go to state 122


state 80

    (120) MEDIAN -> median . lParenthesis id MEDIAN_A rParenthesis semicolon

    lParenthesis    shift and go to state 123


state 81

    (123) PROBABILITY -> prob . lParenthesis id PROBABILITY_A rParenthesis semicolon

    lParenthesis    shift and go to state 124


state 82

    (126) FREQUENCY -> freq . lParenthesis id FREQUENCY_A rParenthesis semicolon

    lParenthesis    shift and go to state 125


state 83

    (129) VARIANCE -> variance . lParenthesis id VARIANCE_A rParenthesis semicolon

    lParenthesis    shift and go to state 126


state 84

    (132) STANDARD_DEVIATION -> stddev . lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon

    lParenthesis    shift and go to state 127


state 85

    (135) SKEWNESS -> skew . lParenthesis id SKEWNESS_A rParenthesis semicolon

    lParenthesis    shift and go to state 128


state 86

    (138) KURTOSI -> kurt . lParenthesis id KURTOSI_A rParenthesis semicolon

    lParenthesis    shift and go to state 129


state 87

    (6) VARS_A -> TYPE colon VARS_B . semicolon VARS_C

    semicolon       shift and go to state 130


state 88

    (7) VARS_B -> SIMPLE .

    semicolon       reduce using rule 7 (VARS_B -> SIMPLE .)


state 89

    (8) VARS_B -> LIST .

    semicolon       reduce using rule 8 (VARS_B -> LIST .)


state 90

    (11) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (14) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (144) SAVE_VAR -> . empty
    (141) empty -> .

    lSqrBracket     shift and go to state 132
    comma           reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    SAVE_VAR                       shift and go to state 131
    empty                          shift and go to state 133

state 91

    (76) METHOD -> func TYPEMETHOD id lParenthesis . PARAMS rParenthesis BLOCK semicolon
    (77) PARAMS -> . EXP PARAMS_A
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    PARAMS                         shift and go to state 134
    EXP                            shift and go to state 135
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 92

    (46) BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .

    $end            reduce using rule 46 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    semicolon       reduce using rule 46 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    else            reduce using rule 46 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)
    rCurlyBracket   reduce using rule 46 (BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket .)


state 93

    (57) ASSIGNMENT -> id ISLIST . equals EXPRESSION semicolon

    equals          shift and go to state 136


state 94

    (81) METHODCALL -> id lParenthesis . EXP METHODCALL_A rParenthesis semicolon
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 137
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 95

    (61) ISLIST -> lSqrBracket . EXP rSqrBracket
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 138
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 96

    (62) ISLIST -> empty .

    equals          reduce using rule 62 (ISLIST -> empty .)
    times           reduce using rule 62 (ISLIST -> empty .)
    divide          reduce using rule 62 (ISLIST -> empty .)
    plus            reduce using rule 62 (ISLIST -> empty .)
    minus           reduce using rule 62 (ISLIST -> empty .)
    greater         reduce using rule 62 (ISLIST -> empty .)
    lessThan        reduce using rule 62 (ISLIST -> empty .)
    greaterEquals   reduce using rule 62 (ISLIST -> empty .)
    lessThanEquals  reduce using rule 62 (ISLIST -> empty .)
    notEquals       reduce using rule 62 (ISLIST -> empty .)
    comma           reduce using rule 62 (ISLIST -> empty .)
    rParenthesis    reduce using rule 62 (ISLIST -> empty .)
    rSqrBracket     reduce using rule 62 (ISLIST -> empty .)
    and             reduce using rule 62 (ISLIST -> empty .)
    or              reduce using rule 62 (ISLIST -> empty .)
    semicolon       reduce using rule 62 (ISLIST -> empty .)


state 97

    (65) CONDITION -> if lParenthesis . EXPLOG rParenthesis BLOCK CONDITION_A semicolon
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 139
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 98

    (68) WRITE -> print lParenthesis . EXPRESSION WRITE_A rParenthesis semicolon
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 140
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 99

    (80) LOOP -> while lParenthesis . EXPLOG rParenthesis BLOCK
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 141
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 100

    (58) READ -> scan lParenthesis . VARCTE READ_A rParenthesis
    (71) VARCTE -> . id ISLIST
    (72) VARCTE -> . cte_i
    (73) VARCTE -> . cte_f
    (74) VARCTE -> . cte_str
    (75) VARCTE -> . BOOLEAN
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    id              shift and go to state 143
    cte_i           shift and go to state 144
    cte_f           shift and go to state 145
    cte_str         shift and go to state 146
    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    VARCTE                         shift and go to state 142
    BOOLEAN                        shift and go to state 147

state 101

    (84) RETURN -> return EXPLOG . semicolon

    semicolon       shift and go to state 150


state 102

    (17) EXPLOG -> EXPRESSION . EXPLOG_A
    (19) EXPLOG_A -> . and EXPLOG
    (20) EXPLOG_A -> . or EXPLOG
    (21) EXPLOG_A -> . empty
    (141) empty -> .

    and             shift and go to state 152
    or              shift and go to state 153
    semicolon       reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)

    EXPLOG_A                       shift and go to state 151
    empty                          shift and go to state 154

state 103

    (18) EXPLOG -> not . EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 155
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 104

    (22) EXPRESSION -> EXP . EXPRESSION_A EXP
    (23) EXPRESSION_A -> . greater
    (24) EXPRESSION_A -> . lessThan
    (25) EXPRESSION_A -> . greaterEquals
    (26) EXPRESSION_A -> . lessThanEquals
    (27) EXPRESSION_A -> . equals
    (28) EXPRESSION_A -> . notEquals

    greater         shift and go to state 157
    lessThan        shift and go to state 158
    greaterEquals   shift and go to state 159
    lessThanEquals  shift and go to state 160
    equals          shift and go to state 161
    notEquals       shift and go to state 162

    EXPRESSION_A                   shift and go to state 156

state 105

    (29) EXP -> TERM . EXP_A
    (30) EXP_A -> . plus EXP
    (31) EXP_A -> . minus EXP
    (32) EXP_A -> . empty
    (141) empty -> .

    plus            shift and go to state 164
    minus           shift and go to state 165
    greater         reduce using rule 141 (empty -> .)
    lessThan        reduce using rule 141 (empty -> .)
    greaterEquals   reduce using rule 141 (empty -> .)
    lessThanEquals  reduce using rule 141 (empty -> .)
    equals          reduce using rule 141 (empty -> .)
    notEquals       reduce using rule 141 (empty -> .)
    comma           reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)
    rSqrBracket     reduce using rule 141 (empty -> .)
    and             reduce using rule 141 (empty -> .)
    or              reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    EXP_A                          shift and go to state 163
    empty                          shift and go to state 166

state 106

    (33) TERM -> FACTOR . TERM_A
    (34) TERM_A -> . times TERM
    (35) TERM_A -> . divide TERM
    (36) TERM_A -> . empty
    (141) empty -> .

    times           shift and go to state 168
    divide          shift and go to state 169
    plus            reduce using rule 141 (empty -> .)
    minus           reduce using rule 141 (empty -> .)
    greater         reduce using rule 141 (empty -> .)
    lessThan        reduce using rule 141 (empty -> .)
    greaterEquals   reduce using rule 141 (empty -> .)
    lessThanEquals  reduce using rule 141 (empty -> .)
    equals          reduce using rule 141 (empty -> .)
    notEquals       reduce using rule 141 (empty -> .)
    comma           reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)
    rSqrBracket     reduce using rule 141 (empty -> .)
    and             reduce using rule 141 (empty -> .)
    or              reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    TERM_A                         shift and go to state 167
    empty                          shift and go to state 170

state 107

    (37) FACTOR -> lParenthesis . EXPLOG rParenthesis
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 171
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 108

    (38) FACTOR -> VARCONSTAUX .

    times           reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    divide          reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    plus            reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    minus           reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    greater         reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    lessThan        reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    greaterEquals   reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    lessThanEquals  reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    equals          reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    notEquals       reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    comma           reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    rParenthesis    reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    rSqrBracket     reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    and             reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    or              reduce using rule 38 (FACTOR -> VARCONSTAUX .)
    semicolon       reduce using rule 38 (FACTOR -> VARCONSTAUX .)


state 109

    (39) VARCONSTAUX -> id . ISLIST
    (61) ISLIST -> . lSqrBracket EXP rSqrBracket
    (62) ISLIST -> . empty
    (141) empty -> .

    lSqrBracket     shift and go to state 95
    times           reduce using rule 141 (empty -> .)
    divide          reduce using rule 141 (empty -> .)
    plus            reduce using rule 141 (empty -> .)
    minus           reduce using rule 141 (empty -> .)
    greater         reduce using rule 141 (empty -> .)
    lessThan        reduce using rule 141 (empty -> .)
    greaterEquals   reduce using rule 141 (empty -> .)
    lessThanEquals  reduce using rule 141 (empty -> .)
    equals          reduce using rule 141 (empty -> .)
    notEquals       reduce using rule 141 (empty -> .)
    comma           reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)
    rSqrBracket     reduce using rule 141 (empty -> .)
    and             reduce using rule 141 (empty -> .)
    or              reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    ISLIST                         shift and go to state 172
    empty                          shift and go to state 96

state 110

    (40) VARCONSTAUX -> cte_i .

    times           reduce using rule 40 (VARCONSTAUX -> cte_i .)
    divide          reduce using rule 40 (VARCONSTAUX -> cte_i .)
    plus            reduce using rule 40 (VARCONSTAUX -> cte_i .)
    minus           reduce using rule 40 (VARCONSTAUX -> cte_i .)
    greater         reduce using rule 40 (VARCONSTAUX -> cte_i .)
    lessThan        reduce using rule 40 (VARCONSTAUX -> cte_i .)
    greaterEquals   reduce using rule 40 (VARCONSTAUX -> cte_i .)
    lessThanEquals  reduce using rule 40 (VARCONSTAUX -> cte_i .)
    equals          reduce using rule 40 (VARCONSTAUX -> cte_i .)
    notEquals       reduce using rule 40 (VARCONSTAUX -> cte_i .)
    comma           reduce using rule 40 (VARCONSTAUX -> cte_i .)
    rParenthesis    reduce using rule 40 (VARCONSTAUX -> cte_i .)
    rSqrBracket     reduce using rule 40 (VARCONSTAUX -> cte_i .)
    and             reduce using rule 40 (VARCONSTAUX -> cte_i .)
    or              reduce using rule 40 (VARCONSTAUX -> cte_i .)
    semicolon       reduce using rule 40 (VARCONSTAUX -> cte_i .)


state 111

    (41) VARCONSTAUX -> cte_f .

    times           reduce using rule 41 (VARCONSTAUX -> cte_f .)
    divide          reduce using rule 41 (VARCONSTAUX -> cte_f .)
    plus            reduce using rule 41 (VARCONSTAUX -> cte_f .)
    minus           reduce using rule 41 (VARCONSTAUX -> cte_f .)
    greater         reduce using rule 41 (VARCONSTAUX -> cte_f .)
    lessThan        reduce using rule 41 (VARCONSTAUX -> cte_f .)
    greaterEquals   reduce using rule 41 (VARCONSTAUX -> cte_f .)
    lessThanEquals  reduce using rule 41 (VARCONSTAUX -> cte_f .)
    equals          reduce using rule 41 (VARCONSTAUX -> cte_f .)
    notEquals       reduce using rule 41 (VARCONSTAUX -> cte_f .)
    comma           reduce using rule 41 (VARCONSTAUX -> cte_f .)
    rParenthesis    reduce using rule 41 (VARCONSTAUX -> cte_f .)
    rSqrBracket     reduce using rule 41 (VARCONSTAUX -> cte_f .)
    and             reduce using rule 41 (VARCONSTAUX -> cte_f .)
    or              reduce using rule 41 (VARCONSTAUX -> cte_f .)
    semicolon       reduce using rule 41 (VARCONSTAUX -> cte_f .)


state 112

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis . id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 173


state 113

    (106) LASSO -> las lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 174


state 114

    (107) RIDGE -> rid lParenthesis . id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 175


state 115

    (108) K_MEANS -> kmeans lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 176

state 116

    (109) MINI_BATCH_MEANS -> mbm lParenthesis . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 177

state 117

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 178

state 118

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 179


state 119

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 180


state 120

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis . id comma id rParenthesis semicolon

    id              shift and go to state 181


state 121

    (114) MEAN -> mean lParenthesis . id MEAN_A rParenthesis semicolon

    id              shift and go to state 182


state 122

    (117) MODE -> mode lParenthesis . id MODE_A rParenthesis semicolon

    id              shift and go to state 183


state 123

    (120) MEDIAN -> median lParenthesis . id MEDIAN_A rParenthesis semicolon

    id              shift and go to state 184


state 124

    (123) PROBABILITY -> prob lParenthesis . id PROBABILITY_A rParenthesis semicolon

    id              shift and go to state 185


state 125

    (126) FREQUENCY -> freq lParenthesis . id FREQUENCY_A rParenthesis semicolon

    id              shift and go to state 186


state 126

    (129) VARIANCE -> variance lParenthesis . id VARIANCE_A rParenthesis semicolon

    id              shift and go to state 187


state 127

    (132) STANDARD_DEVIATION -> stddev lParenthesis . id STANDARD_DEVIATION_A rParenthesis semicolon

    id              shift and go to state 188


state 128

    (135) SKEWNESS -> skew lParenthesis . id SKEWNESS_A rParenthesis semicolon

    id              shift and go to state 189


state 129

    (138) KURTOSI -> kurt lParenthesis . id KURTOSI_A rParenthesis semicolon

    id              shift and go to state 190


state 130

    (6) VARS_A -> TYPE colon VARS_B semicolon . VARS_C
    (9) VARS_C -> . VARS_A
    (10) VARS_C -> . empty
    (6) VARS_A -> . TYPE colon VARS_B semicolon VARS_C
    (141) empty -> .
    (42) TYPE -> . int SAVE_TYPE
    (43) TYPE -> . float SAVE_TYPE
    (44) TYPE -> . string SAVE_TYPE
    (45) TYPE -> . bool SAVE_TYPE

    var             reduce using rule 141 (empty -> .)
    func            reduce using rule 141 (empty -> .)
    start           reduce using rule 141 (empty -> .)
    int             shift and go to state 18
    float           shift and go to state 19
    string          shift and go to state 20
    bool            shift and go to state 21

    TYPE                           shift and go to state 17
    VARS_C                         shift and go to state 191
    VARS_A                         shift and go to state 192
    empty                          shift and go to state 193

state 131

    (11) SIMPLE -> id SAVE_VAR . SIMPLE_A
    (12) SIMPLE_A -> . comma SIMPLE
    (13) SIMPLE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 195
    semicolon       reduce using rule 141 (empty -> .)

    SIMPLE_A                       shift and go to state 194
    empty                          shift and go to state 196

state 132

    (14) LIST -> id lSqrBracket . VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 197

state 133

    (144) SAVE_VAR -> empty .

    comma           reduce using rule 144 (SAVE_VAR -> empty .)
    semicolon       reduce using rule 144 (SAVE_VAR -> empty .)


state 134

    (76) METHOD -> func TYPEMETHOD id lParenthesis PARAMS . rParenthesis BLOCK semicolon

    rParenthesis    shift and go to state 198


state 135

    (77) PARAMS -> EXP . PARAMS_A
    (78) PARAMS_A -> . comma EXP PARAMS_A
    (79) PARAMS_A -> . empty
    (141) empty -> .

    comma           shift and go to state 200
    rParenthesis    reduce using rule 141 (empty -> .)

    PARAMS_A                       shift and go to state 199
    empty                          shift and go to state 201

state 136

    (57) ASSIGNMENT -> id ISLIST equals . EXPRESSION semicolon
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 202
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 137

    (81) METHODCALL -> id lParenthesis EXP . METHODCALL_A rParenthesis semicolon
    (82) METHODCALL_A -> . comma EXP
    (83) METHODCALL_A -> . empty
    (141) empty -> .

    comma           shift and go to state 204
    rParenthesis    reduce using rule 141 (empty -> .)

    METHODCALL_A                   shift and go to state 203
    empty                          shift and go to state 205

state 138

    (61) ISLIST -> lSqrBracket EXP . rSqrBracket

    rSqrBracket     shift and go to state 206


state 139

    (65) CONDITION -> if lParenthesis EXPLOG . rParenthesis BLOCK CONDITION_A semicolon

    rParenthesis    shift and go to state 207


state 140

    (68) WRITE -> print lParenthesis EXPRESSION . WRITE_A rParenthesis semicolon
    (69) WRITE_A -> . comma EXPRESSION WRITE_A
    (70) WRITE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 209
    rParenthesis    reduce using rule 141 (empty -> .)

    WRITE_A                        shift and go to state 208
    empty                          shift and go to state 210

state 141

    (80) LOOP -> while lParenthesis EXPLOG . rParenthesis BLOCK

    rParenthesis    shift and go to state 211


state 142

    (58) READ -> scan lParenthesis VARCTE . READ_A rParenthesis
    (59) READ_A -> . comma
    (60) READ_A -> . empty
    (141) empty -> .

    comma           shift and go to state 213
    rParenthesis    reduce using rule 141 (empty -> .)

    READ_A                         shift and go to state 212
    empty                          shift and go to state 214

state 143

    (71) VARCTE -> id . ISLIST
    (61) ISLIST -> . lSqrBracket EXP rSqrBracket
    (62) ISLIST -> . empty
    (141) empty -> .

    lSqrBracket     shift and go to state 95
    comma           reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)

    ISLIST                         shift and go to state 215
    empty                          shift and go to state 96

state 144

    (72) VARCTE -> cte_i .

    comma           reduce using rule 72 (VARCTE -> cte_i .)
    rParenthesis    reduce using rule 72 (VARCTE -> cte_i .)


state 145

    (73) VARCTE -> cte_f .

    comma           reduce using rule 73 (VARCTE -> cte_f .)
    rParenthesis    reduce using rule 73 (VARCTE -> cte_f .)


state 146

    (74) VARCTE -> cte_str .

    comma           reduce using rule 74 (VARCTE -> cte_str .)
    rParenthesis    reduce using rule 74 (VARCTE -> cte_str .)


state 147

    (75) VARCTE -> BOOLEAN .

    comma           reduce using rule 75 (VARCTE -> BOOLEAN .)
    rParenthesis    reduce using rule 75 (VARCTE -> BOOLEAN .)


state 148

    (85) BOOLEAN -> FALSE .

    comma           reduce using rule 85 (BOOLEAN -> FALSE .)
    rParenthesis    reduce using rule 85 (BOOLEAN -> FALSE .)


state 149

    (86) BOOLEAN -> TRUE .

    comma           reduce using rule 86 (BOOLEAN -> TRUE .)
    rParenthesis    reduce using rule 86 (BOOLEAN -> TRUE .)


state 150

    (84) RETURN -> return EXPLOG semicolon .

    rCurlyBracket   reduce using rule 84 (RETURN -> return EXPLOG semicolon .)


state 151

    (17) EXPLOG -> EXPRESSION EXPLOG_A .

    semicolon       reduce using rule 17 (EXPLOG -> EXPRESSION EXPLOG_A .)
    rParenthesis    reduce using rule 17 (EXPLOG -> EXPRESSION EXPLOG_A .)


state 152

    (19) EXPLOG_A -> and . EXPLOG
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 216
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 153

    (20) EXPLOG_A -> or . EXPLOG
    (17) EXPLOG -> . EXPRESSION EXPLOG_A
    (18) EXPLOG -> . not EXPRESSION EXPLOG_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    not             shift and go to state 103
    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPLOG                         shift and go to state 217
    EXPRESSION                     shift and go to state 102
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 154

    (21) EXPLOG_A -> empty .

    semicolon       reduce using rule 21 (EXPLOG_A -> empty .)
    rParenthesis    reduce using rule 21 (EXPLOG_A -> empty .)


state 155

    (18) EXPLOG -> not EXPRESSION . EXPLOG_A
    (19) EXPLOG_A -> . and EXPLOG
    (20) EXPLOG_A -> . or EXPLOG
    (21) EXPLOG_A -> . empty
    (141) empty -> .

    and             shift and go to state 152
    or              shift and go to state 153
    semicolon       reduce using rule 141 (empty -> .)
    rParenthesis    reduce using rule 141 (empty -> .)

    EXPLOG_A                       shift and go to state 218
    empty                          shift and go to state 154

state 156

    (22) EXPRESSION -> EXP EXPRESSION_A . EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 219
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 157

    (23) EXPRESSION_A -> greater .

    lParenthesis    reduce using rule 23 (EXPRESSION_A -> greater .)
    id              reduce using rule 23 (EXPRESSION_A -> greater .)
    cte_i           reduce using rule 23 (EXPRESSION_A -> greater .)
    cte_f           reduce using rule 23 (EXPRESSION_A -> greater .)


state 158

    (24) EXPRESSION_A -> lessThan .

    lParenthesis    reduce using rule 24 (EXPRESSION_A -> lessThan .)
    id              reduce using rule 24 (EXPRESSION_A -> lessThan .)
    cte_i           reduce using rule 24 (EXPRESSION_A -> lessThan .)
    cte_f           reduce using rule 24 (EXPRESSION_A -> lessThan .)


state 159

    (25) EXPRESSION_A -> greaterEquals .

    lParenthesis    reduce using rule 25 (EXPRESSION_A -> greaterEquals .)
    id              reduce using rule 25 (EXPRESSION_A -> greaterEquals .)
    cte_i           reduce using rule 25 (EXPRESSION_A -> greaterEquals .)
    cte_f           reduce using rule 25 (EXPRESSION_A -> greaterEquals .)


state 160

    (26) EXPRESSION_A -> lessThanEquals .

    lParenthesis    reduce using rule 26 (EXPRESSION_A -> lessThanEquals .)
    id              reduce using rule 26 (EXPRESSION_A -> lessThanEquals .)
    cte_i           reduce using rule 26 (EXPRESSION_A -> lessThanEquals .)
    cte_f           reduce using rule 26 (EXPRESSION_A -> lessThanEquals .)


state 161

    (27) EXPRESSION_A -> equals .

    lParenthesis    reduce using rule 27 (EXPRESSION_A -> equals .)
    id              reduce using rule 27 (EXPRESSION_A -> equals .)
    cte_i           reduce using rule 27 (EXPRESSION_A -> equals .)
    cte_f           reduce using rule 27 (EXPRESSION_A -> equals .)


state 162

    (28) EXPRESSION_A -> notEquals .

    lParenthesis    reduce using rule 28 (EXPRESSION_A -> notEquals .)
    id              reduce using rule 28 (EXPRESSION_A -> notEquals .)
    cte_i           reduce using rule 28 (EXPRESSION_A -> notEquals .)
    cte_f           reduce using rule 28 (EXPRESSION_A -> notEquals .)


state 163

    (29) EXP -> TERM EXP_A .

    greater         reduce using rule 29 (EXP -> TERM EXP_A .)
    lessThan        reduce using rule 29 (EXP -> TERM EXP_A .)
    greaterEquals   reduce using rule 29 (EXP -> TERM EXP_A .)
    lessThanEquals  reduce using rule 29 (EXP -> TERM EXP_A .)
    equals          reduce using rule 29 (EXP -> TERM EXP_A .)
    notEquals       reduce using rule 29 (EXP -> TERM EXP_A .)
    comma           reduce using rule 29 (EXP -> TERM EXP_A .)
    rParenthesis    reduce using rule 29 (EXP -> TERM EXP_A .)
    rSqrBracket     reduce using rule 29 (EXP -> TERM EXP_A .)
    and             reduce using rule 29 (EXP -> TERM EXP_A .)
    or              reduce using rule 29 (EXP -> TERM EXP_A .)
    semicolon       reduce using rule 29 (EXP -> TERM EXP_A .)


state 164

    (30) EXP_A -> plus . EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 220
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 165

    (31) EXP_A -> minus . EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 221
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 166

    (32) EXP_A -> empty .

    greater         reduce using rule 32 (EXP_A -> empty .)
    lessThan        reduce using rule 32 (EXP_A -> empty .)
    greaterEquals   reduce using rule 32 (EXP_A -> empty .)
    lessThanEquals  reduce using rule 32 (EXP_A -> empty .)
    equals          reduce using rule 32 (EXP_A -> empty .)
    notEquals       reduce using rule 32 (EXP_A -> empty .)
    comma           reduce using rule 32 (EXP_A -> empty .)
    rParenthesis    reduce using rule 32 (EXP_A -> empty .)
    rSqrBracket     reduce using rule 32 (EXP_A -> empty .)
    and             reduce using rule 32 (EXP_A -> empty .)
    or              reduce using rule 32 (EXP_A -> empty .)
    semicolon       reduce using rule 32 (EXP_A -> empty .)


state 167

    (33) TERM -> FACTOR TERM_A .

    plus            reduce using rule 33 (TERM -> FACTOR TERM_A .)
    minus           reduce using rule 33 (TERM -> FACTOR TERM_A .)
    greater         reduce using rule 33 (TERM -> FACTOR TERM_A .)
    lessThan        reduce using rule 33 (TERM -> FACTOR TERM_A .)
    greaterEquals   reduce using rule 33 (TERM -> FACTOR TERM_A .)
    lessThanEquals  reduce using rule 33 (TERM -> FACTOR TERM_A .)
    equals          reduce using rule 33 (TERM -> FACTOR TERM_A .)
    notEquals       reduce using rule 33 (TERM -> FACTOR TERM_A .)
    comma           reduce using rule 33 (TERM -> FACTOR TERM_A .)
    rParenthesis    reduce using rule 33 (TERM -> FACTOR TERM_A .)
    rSqrBracket     reduce using rule 33 (TERM -> FACTOR TERM_A .)
    and             reduce using rule 33 (TERM -> FACTOR TERM_A .)
    or              reduce using rule 33 (TERM -> FACTOR TERM_A .)
    semicolon       reduce using rule 33 (TERM -> FACTOR TERM_A .)


state 168

    (34) TERM_A -> times . TERM
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    TERM                           shift and go to state 222
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 169

    (35) TERM_A -> divide . TERM
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    TERM                           shift and go to state 223
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 170

    (36) TERM_A -> empty .

    plus            reduce using rule 36 (TERM_A -> empty .)
    minus           reduce using rule 36 (TERM_A -> empty .)
    greater         reduce using rule 36 (TERM_A -> empty .)
    lessThan        reduce using rule 36 (TERM_A -> empty .)
    greaterEquals   reduce using rule 36 (TERM_A -> empty .)
    lessThanEquals  reduce using rule 36 (TERM_A -> empty .)
    equals          reduce using rule 36 (TERM_A -> empty .)
    notEquals       reduce using rule 36 (TERM_A -> empty .)
    comma           reduce using rule 36 (TERM_A -> empty .)
    rParenthesis    reduce using rule 36 (TERM_A -> empty .)
    rSqrBracket     reduce using rule 36 (TERM_A -> empty .)
    and             reduce using rule 36 (TERM_A -> empty .)
    or              reduce using rule 36 (TERM_A -> empty .)
    semicolon       reduce using rule 36 (TERM_A -> empty .)


state 171

    (37) FACTOR -> lParenthesis EXPLOG . rParenthesis

    rParenthesis    shift and go to state 224


state 172

    (39) VARCONSTAUX -> id ISLIST .

    times           reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    divide          reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    plus            reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    minus           reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    greater         reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    lessThan        reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    greaterEquals   reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    lessThanEquals  reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    equals          reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    notEquals       reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    comma           reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    rParenthesis    reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    rSqrBracket     reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    and             reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    or              reduce using rule 39 (VARCONSTAUX -> id ISLIST .)
    semicolon       reduce using rule 39 (VARCONSTAUX -> id ISLIST .)


state 173

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id . comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 225


state 174

    (106) LASSO -> las lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 226


state 175

    (107) RIDGE -> rid lParenthesis id . comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 227


state 176

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 228


state 177

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 229


state 178

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 230


state 179

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 231


state 180

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 232


state 181

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id . comma id rParenthesis semicolon

    comma           shift and go to state 233


state 182

    (114) MEAN -> mean lParenthesis id . MEAN_A rParenthesis semicolon
    (115) MEAN_A -> . comma id MEAN_A
    (116) MEAN_A -> . empty
    (141) empty -> .

    comma           shift and go to state 235
    rParenthesis    reduce using rule 141 (empty -> .)

    MEAN_A                         shift and go to state 234
    empty                          shift and go to state 236

state 183

    (117) MODE -> mode lParenthesis id . MODE_A rParenthesis semicolon
    (118) MODE_A -> . comma id MODE_A
    (119) MODE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 238
    rParenthesis    reduce using rule 141 (empty -> .)

    MODE_A                         shift and go to state 237
    empty                          shift and go to state 239

state 184

    (120) MEDIAN -> median lParenthesis id . MEDIAN_A rParenthesis semicolon
    (121) MEDIAN_A -> . comma id MEDIAN_A
    (122) MEDIAN_A -> . empty
    (141) empty -> .

    comma           shift and go to state 241
    rParenthesis    reduce using rule 141 (empty -> .)

    MEDIAN_A                       shift and go to state 240
    empty                          shift and go to state 242

state 185

    (123) PROBABILITY -> prob lParenthesis id . PROBABILITY_A rParenthesis semicolon
    (124) PROBABILITY_A -> . comma id PROBABILITY_A
    (125) PROBABILITY_A -> . empty
    (141) empty -> .

    comma           shift and go to state 244
    rParenthesis    reduce using rule 141 (empty -> .)

    PROBABILITY_A                  shift and go to state 243
    empty                          shift and go to state 245

state 186

    (126) FREQUENCY -> freq lParenthesis id . FREQUENCY_A rParenthesis semicolon
    (127) FREQUENCY_A -> . comma id FREQUENCY_A
    (128) FREQUENCY_A -> . empty
    (141) empty -> .

    comma           shift and go to state 247
    rParenthesis    reduce using rule 141 (empty -> .)

    FREQUENCY_A                    shift and go to state 246
    empty                          shift and go to state 248

state 187

    (129) VARIANCE -> variance lParenthesis id . VARIANCE_A rParenthesis semicolon
    (130) VARIANCE_A -> . comma id VARIANCE_A
    (131) VARIANCE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 250
    rParenthesis    reduce using rule 141 (empty -> .)

    VARIANCE_A                     shift and go to state 249
    empty                          shift and go to state 251

state 188

    (132) STANDARD_DEVIATION -> stddev lParenthesis id . STANDARD_DEVIATION_A rParenthesis semicolon
    (133) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (134) STANDARD_DEVIATION_A -> . empty
    (141) empty -> .

    comma           shift and go to state 253
    rParenthesis    reduce using rule 141 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 252
    empty                          shift and go to state 254

state 189

    (135) SKEWNESS -> skew lParenthesis id . SKEWNESS_A rParenthesis semicolon
    (136) SKEWNESS_A -> . comma id SKEWNESS_A
    (137) SKEWNESS_A -> . empty
    (141) empty -> .

    comma           shift and go to state 256
    rParenthesis    reduce using rule 141 (empty -> .)

    SKEWNESS_A                     shift and go to state 255
    empty                          shift and go to state 257

state 190

    (138) KURTOSI -> kurt lParenthesis id . KURTOSI_A rParenthesis semicolon
    (139) KURTOSI_A -> . comma id KURTOSI_A
    (140) KURTOSI_A -> . empty
    (141) empty -> .

    comma           shift and go to state 259
    rParenthesis    reduce using rule 141 (empty -> .)

    KURTOSI_A                      shift and go to state 258
    empty                          shift and go to state 260

state 191

    (6) VARS_A -> TYPE colon VARS_B semicolon VARS_C .

    var             reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    func            reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)
    start           reduce using rule 6 (VARS_A -> TYPE colon VARS_B semicolon VARS_C .)


state 192

    (9) VARS_C -> VARS_A .

    var             reduce using rule 9 (VARS_C -> VARS_A .)
    func            reduce using rule 9 (VARS_C -> VARS_A .)
    start           reduce using rule 9 (VARS_C -> VARS_A .)


state 193

    (10) VARS_C -> empty .

    var             reduce using rule 10 (VARS_C -> empty .)
    func            reduce using rule 10 (VARS_C -> empty .)
    start           reduce using rule 10 (VARS_C -> empty .)


state 194

    (11) SIMPLE -> id SAVE_VAR SIMPLE_A .

    semicolon       reduce using rule 11 (SIMPLE -> id SAVE_VAR SIMPLE_A .)


state 195

    (12) SIMPLE_A -> comma . SIMPLE
    (11) SIMPLE -> . id SAVE_VAR SIMPLE_A

    id              shift and go to state 262

    SIMPLE                         shift and go to state 261

state 196

    (13) SIMPLE_A -> empty .

    semicolon       reduce using rule 13 (SIMPLE_A -> empty .)


state 197

    (14) LIST -> id lSqrBracket VARCONSTAUX . rSqrBracket SAVE_ARRAY LIST_A

    rSqrBracket     shift and go to state 263


state 198

    (76) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis . BLOCK semicolon
    (46) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 264

state 199

    (77) PARAMS -> EXP PARAMS_A .

    rParenthesis    reduce using rule 77 (PARAMS -> EXP PARAMS_A .)


state 200

    (78) PARAMS_A -> comma . EXP PARAMS_A
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 265
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 201

    (79) PARAMS_A -> empty .

    rParenthesis    reduce using rule 79 (PARAMS_A -> empty .)


state 202

    (57) ASSIGNMENT -> id ISLIST equals EXPRESSION . semicolon

    semicolon       shift and go to state 266


state 203

    (81) METHODCALL -> id lParenthesis EXP METHODCALL_A . rParenthesis semicolon

    rParenthesis    shift and go to state 267


state 204

    (82) METHODCALL_A -> comma . EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXP                            shift and go to state 268
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 205

    (83) METHODCALL_A -> empty .

    rParenthesis    reduce using rule 83 (METHODCALL_A -> empty .)


state 206

    (61) ISLIST -> lSqrBracket EXP rSqrBracket .

    equals          reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    times           reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    divide          reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    plus            reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    minus           reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greater         reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThan        reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    greaterEquals   reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    lessThanEquals  reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    notEquals       reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    comma           reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rParenthesis    reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    rSqrBracket     reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    and             reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    or              reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)
    semicolon       reduce using rule 61 (ISLIST -> lSqrBracket EXP rSqrBracket .)


state 207

    (65) CONDITION -> if lParenthesis EXPLOG rParenthesis . BLOCK CONDITION_A semicolon
    (46) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 269

state 208

    (68) WRITE -> print lParenthesis EXPRESSION WRITE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 270


state 209

    (69) WRITE_A -> comma . EXPRESSION WRITE_A
    (22) EXPRESSION -> . EXP EXPRESSION_A EXP
    (29) EXP -> . TERM EXP_A
    (33) TERM -> . FACTOR TERM_A
    (37) FACTOR -> . lParenthesis EXPLOG rParenthesis
    (38) FACTOR -> . VARCONSTAUX
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    lParenthesis    shift and go to state 107
    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    EXPRESSION                     shift and go to state 271
    EXP                            shift and go to state 104
    TERM                           shift and go to state 105
    FACTOR                         shift and go to state 106
    VARCONSTAUX                    shift and go to state 108

state 210

    (70) WRITE_A -> empty .

    rParenthesis    reduce using rule 70 (WRITE_A -> empty .)


state 211

    (80) LOOP -> while lParenthesis EXPLOG rParenthesis . BLOCK
    (46) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 272

state 212

    (58) READ -> scan lParenthesis VARCTE READ_A . rParenthesis

    rParenthesis    shift and go to state 273


state 213

    (59) READ_A -> comma .

    rParenthesis    reduce using rule 59 (READ_A -> comma .)


state 214

    (60) READ_A -> empty .

    rParenthesis    reduce using rule 60 (READ_A -> empty .)


state 215

    (71) VARCTE -> id ISLIST .

    comma           reduce using rule 71 (VARCTE -> id ISLIST .)
    rParenthesis    reduce using rule 71 (VARCTE -> id ISLIST .)


state 216

    (19) EXPLOG_A -> and EXPLOG .

    semicolon       reduce using rule 19 (EXPLOG_A -> and EXPLOG .)
    rParenthesis    reduce using rule 19 (EXPLOG_A -> and EXPLOG .)


state 217

    (20) EXPLOG_A -> or EXPLOG .

    semicolon       reduce using rule 20 (EXPLOG_A -> or EXPLOG .)
    rParenthesis    reduce using rule 20 (EXPLOG_A -> or EXPLOG .)


state 218

    (18) EXPLOG -> not EXPRESSION EXPLOG_A .

    semicolon       reduce using rule 18 (EXPLOG -> not EXPRESSION EXPLOG_A .)
    rParenthesis    reduce using rule 18 (EXPLOG -> not EXPRESSION EXPLOG_A .)


state 219

    (22) EXPRESSION -> EXP EXPRESSION_A EXP .

    and             reduce using rule 22 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    or              reduce using rule 22 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    semicolon       reduce using rule 22 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    rParenthesis    reduce using rule 22 (EXPRESSION -> EXP EXPRESSION_A EXP .)
    comma           reduce using rule 22 (EXPRESSION -> EXP EXPRESSION_A EXP .)


state 220

    (30) EXP_A -> plus EXP .

    greater         reduce using rule 30 (EXP_A -> plus EXP .)
    lessThan        reduce using rule 30 (EXP_A -> plus EXP .)
    greaterEquals   reduce using rule 30 (EXP_A -> plus EXP .)
    lessThanEquals  reduce using rule 30 (EXP_A -> plus EXP .)
    equals          reduce using rule 30 (EXP_A -> plus EXP .)
    notEquals       reduce using rule 30 (EXP_A -> plus EXP .)
    comma           reduce using rule 30 (EXP_A -> plus EXP .)
    rParenthesis    reduce using rule 30 (EXP_A -> plus EXP .)
    rSqrBracket     reduce using rule 30 (EXP_A -> plus EXP .)
    and             reduce using rule 30 (EXP_A -> plus EXP .)
    or              reduce using rule 30 (EXP_A -> plus EXP .)
    semicolon       reduce using rule 30 (EXP_A -> plus EXP .)


state 221

    (31) EXP_A -> minus EXP .

    greater         reduce using rule 31 (EXP_A -> minus EXP .)
    lessThan        reduce using rule 31 (EXP_A -> minus EXP .)
    greaterEquals   reduce using rule 31 (EXP_A -> minus EXP .)
    lessThanEquals  reduce using rule 31 (EXP_A -> minus EXP .)
    equals          reduce using rule 31 (EXP_A -> minus EXP .)
    notEquals       reduce using rule 31 (EXP_A -> minus EXP .)
    comma           reduce using rule 31 (EXP_A -> minus EXP .)
    rParenthesis    reduce using rule 31 (EXP_A -> minus EXP .)
    rSqrBracket     reduce using rule 31 (EXP_A -> minus EXP .)
    and             reduce using rule 31 (EXP_A -> minus EXP .)
    or              reduce using rule 31 (EXP_A -> minus EXP .)
    semicolon       reduce using rule 31 (EXP_A -> minus EXP .)


state 222

    (34) TERM_A -> times TERM .

    plus            reduce using rule 34 (TERM_A -> times TERM .)
    minus           reduce using rule 34 (TERM_A -> times TERM .)
    greater         reduce using rule 34 (TERM_A -> times TERM .)
    lessThan        reduce using rule 34 (TERM_A -> times TERM .)
    greaterEquals   reduce using rule 34 (TERM_A -> times TERM .)
    lessThanEquals  reduce using rule 34 (TERM_A -> times TERM .)
    equals          reduce using rule 34 (TERM_A -> times TERM .)
    notEquals       reduce using rule 34 (TERM_A -> times TERM .)
    comma           reduce using rule 34 (TERM_A -> times TERM .)
    rParenthesis    reduce using rule 34 (TERM_A -> times TERM .)
    rSqrBracket     reduce using rule 34 (TERM_A -> times TERM .)
    and             reduce using rule 34 (TERM_A -> times TERM .)
    or              reduce using rule 34 (TERM_A -> times TERM .)
    semicolon       reduce using rule 34 (TERM_A -> times TERM .)


state 223

    (35) TERM_A -> divide TERM .

    plus            reduce using rule 35 (TERM_A -> divide TERM .)
    minus           reduce using rule 35 (TERM_A -> divide TERM .)
    greater         reduce using rule 35 (TERM_A -> divide TERM .)
    lessThan        reduce using rule 35 (TERM_A -> divide TERM .)
    greaterEquals   reduce using rule 35 (TERM_A -> divide TERM .)
    lessThanEquals  reduce using rule 35 (TERM_A -> divide TERM .)
    equals          reduce using rule 35 (TERM_A -> divide TERM .)
    notEquals       reduce using rule 35 (TERM_A -> divide TERM .)
    comma           reduce using rule 35 (TERM_A -> divide TERM .)
    rParenthesis    reduce using rule 35 (TERM_A -> divide TERM .)
    rSqrBracket     reduce using rule 35 (TERM_A -> divide TERM .)
    and             reduce using rule 35 (TERM_A -> divide TERM .)
    or              reduce using rule 35 (TERM_A -> divide TERM .)
    semicolon       reduce using rule 35 (TERM_A -> divide TERM .)


state 224

    (37) FACTOR -> lParenthesis EXPLOG rParenthesis .

    times           reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    divide          reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    plus            reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    minus           reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    greater         reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    lessThan        reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    greaterEquals   reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    lessThanEquals  reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    equals          reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    notEquals       reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    comma           reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    rParenthesis    reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    rSqrBracket     reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    and             reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    or              reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)
    semicolon       reduce using rule 37 (FACTOR -> lParenthesis EXPLOG rParenthesis .)


state 225

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma . id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 274


state 226

    (106) LASSO -> las lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    id              shift and go to state 275


state 227

    (107) RIDGE -> rid lParenthesis id comma . id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    id              shift and go to state 276


state 228

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 277


state 229

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 278


state 230

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 279

state 231

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 280


state 232

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 281


state 233

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma . id rParenthesis semicolon

    id              shift and go to state 282


state 234

    (114) MEAN -> mean lParenthesis id MEAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 283


state 235

    (115) MEAN_A -> comma . id MEAN_A

    id              shift and go to state 284


state 236

    (116) MEAN_A -> empty .

    rParenthesis    reduce using rule 116 (MEAN_A -> empty .)


state 237

    (117) MODE -> mode lParenthesis id MODE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 285


state 238

    (118) MODE_A -> comma . id MODE_A

    id              shift and go to state 286


state 239

    (119) MODE_A -> empty .

    rParenthesis    reduce using rule 119 (MODE_A -> empty .)


state 240

    (120) MEDIAN -> median lParenthesis id MEDIAN_A . rParenthesis semicolon

    rParenthesis    shift and go to state 287


state 241

    (121) MEDIAN_A -> comma . id MEDIAN_A

    id              shift and go to state 288


state 242

    (122) MEDIAN_A -> empty .

    rParenthesis    reduce using rule 122 (MEDIAN_A -> empty .)


state 243

    (123) PROBABILITY -> prob lParenthesis id PROBABILITY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 289


state 244

    (124) PROBABILITY_A -> comma . id PROBABILITY_A

    id              shift and go to state 290


state 245

    (125) PROBABILITY_A -> empty .

    rParenthesis    reduce using rule 125 (PROBABILITY_A -> empty .)


state 246

    (126) FREQUENCY -> freq lParenthesis id FREQUENCY_A . rParenthesis semicolon

    rParenthesis    shift and go to state 291


state 247

    (127) FREQUENCY_A -> comma . id FREQUENCY_A

    id              shift and go to state 292


state 248

    (128) FREQUENCY_A -> empty .

    rParenthesis    reduce using rule 128 (FREQUENCY_A -> empty .)


state 249

    (129) VARIANCE -> variance lParenthesis id VARIANCE_A . rParenthesis semicolon

    rParenthesis    shift and go to state 293


state 250

    (130) VARIANCE_A -> comma . id VARIANCE_A

    id              shift and go to state 294


state 251

    (131) VARIANCE_A -> empty .

    rParenthesis    reduce using rule 131 (VARIANCE_A -> empty .)


state 252

    (132) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A . rParenthesis semicolon

    rParenthesis    shift and go to state 295


state 253

    (133) STANDARD_DEVIATION_A -> comma . id STANDARD_DEVIATION_A

    id              shift and go to state 296


state 254

    (134) STANDARD_DEVIATION_A -> empty .

    rParenthesis    reduce using rule 134 (STANDARD_DEVIATION_A -> empty .)


state 255

    (135) SKEWNESS -> skew lParenthesis id SKEWNESS_A . rParenthesis semicolon

    rParenthesis    shift and go to state 297


state 256

    (136) SKEWNESS_A -> comma . id SKEWNESS_A

    id              shift and go to state 298


state 257

    (137) SKEWNESS_A -> empty .

    rParenthesis    reduce using rule 137 (SKEWNESS_A -> empty .)


state 258

    (138) KURTOSI -> kurt lParenthesis id KURTOSI_A . rParenthesis semicolon

    rParenthesis    shift and go to state 299


state 259

    (139) KURTOSI_A -> comma . id KURTOSI_A

    id              shift and go to state 300


state 260

    (140) KURTOSI_A -> empty .

    rParenthesis    reduce using rule 140 (KURTOSI_A -> empty .)


state 261

    (12) SIMPLE_A -> comma SIMPLE .

    semicolon       reduce using rule 12 (SIMPLE_A -> comma SIMPLE .)


state 262

    (11) SIMPLE -> id . SAVE_VAR SIMPLE_A
    (144) SAVE_VAR -> . empty
    (141) empty -> .

    comma           reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    SAVE_VAR                       shift and go to state 131
    empty                          shift and go to state 133

state 263

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket . SAVE_ARRAY LIST_A
    (145) SAVE_ARRAY -> . empty
    (141) empty -> .

    comma           reduce using rule 141 (empty -> .)
    semicolon       reduce using rule 141 (empty -> .)

    SAVE_ARRAY                     shift and go to state 301
    empty                          shift and go to state 302

state 264

    (76) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK . semicolon

    semicolon       shift and go to state 303


state 265

    (78) PARAMS_A -> comma EXP . PARAMS_A
    (78) PARAMS_A -> . comma EXP PARAMS_A
    (79) PARAMS_A -> . empty
    (141) empty -> .

    comma           shift and go to state 200
    rParenthesis    reduce using rule 141 (empty -> .)

    PARAMS_A                       shift and go to state 304
    empty                          shift and go to state 201

state 266

    (57) ASSIGNMENT -> id ISLIST equals EXPRESSION semicolon .

    rCurlyBracket   reduce using rule 57 (ASSIGNMENT -> id ISLIST equals EXPRESSION semicolon .)


state 267

    (81) METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis . semicolon

    semicolon       shift and go to state 305


state 268

    (82) METHODCALL_A -> comma EXP .

    rParenthesis    reduce using rule 82 (METHODCALL_A -> comma EXP .)


state 269

    (65) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK . CONDITION_A semicolon
    (66) CONDITION_A -> . else BLOCK
    (67) CONDITION_A -> . empty
    (141) empty -> .

    else            shift and go to state 307
    semicolon       reduce using rule 141 (empty -> .)

    CONDITION_A                    shift and go to state 306
    empty                          shift and go to state 308

state 270

    (68) WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis . semicolon

    semicolon       shift and go to state 309


state 271

    (69) WRITE_A -> comma EXPRESSION . WRITE_A
    (69) WRITE_A -> . comma EXPRESSION WRITE_A
    (70) WRITE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 209
    rParenthesis    reduce using rule 141 (empty -> .)

    WRITE_A                        shift and go to state 310
    empty                          shift and go to state 210

state 272

    (80) LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK .

    rCurlyBracket   reduce using rule 80 (LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK .)


state 273

    (58) READ -> scan lParenthesis VARCTE READ_A rParenthesis .

    rCurlyBracket   reduce using rule 58 (READ -> scan lParenthesis VARCTE READ_A rParenthesis .)


state 274

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 311


state 275

    (106) LASSO -> las lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 312


state 276

    (107) RIDGE -> rid lParenthesis id comma id . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 313


state 277

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 314


state 278

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 315


state 279

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 316


state 280

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 317


state 281

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 318


state 282

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id . rParenthesis semicolon

    rParenthesis    shift and go to state 319


state 283

    (114) MEAN -> mean lParenthesis id MEAN_A rParenthesis . semicolon

    semicolon       shift and go to state 320


state 284

    (115) MEAN_A -> comma id . MEAN_A
    (115) MEAN_A -> . comma id MEAN_A
    (116) MEAN_A -> . empty
    (141) empty -> .

    comma           shift and go to state 235
    rParenthesis    reduce using rule 141 (empty -> .)

    MEAN_A                         shift and go to state 321
    empty                          shift and go to state 236

state 285

    (117) MODE -> mode lParenthesis id MODE_A rParenthesis . semicolon

    semicolon       shift and go to state 322


state 286

    (118) MODE_A -> comma id . MODE_A
    (118) MODE_A -> . comma id MODE_A
    (119) MODE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 238
    rParenthesis    reduce using rule 141 (empty -> .)

    MODE_A                         shift and go to state 323
    empty                          shift and go to state 239

state 287

    (120) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis . semicolon

    semicolon       shift and go to state 324


state 288

    (121) MEDIAN_A -> comma id . MEDIAN_A
    (121) MEDIAN_A -> . comma id MEDIAN_A
    (122) MEDIAN_A -> . empty
    (141) empty -> .

    comma           shift and go to state 241
    rParenthesis    reduce using rule 141 (empty -> .)

    MEDIAN_A                       shift and go to state 325
    empty                          shift and go to state 242

state 289

    (123) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis . semicolon

    semicolon       shift and go to state 326


state 290

    (124) PROBABILITY_A -> comma id . PROBABILITY_A
    (124) PROBABILITY_A -> . comma id PROBABILITY_A
    (125) PROBABILITY_A -> . empty
    (141) empty -> .

    comma           shift and go to state 244
    rParenthesis    reduce using rule 141 (empty -> .)

    PROBABILITY_A                  shift and go to state 327
    empty                          shift and go to state 245

state 291

    (126) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis . semicolon

    semicolon       shift and go to state 328


state 292

    (127) FREQUENCY_A -> comma id . FREQUENCY_A
    (127) FREQUENCY_A -> . comma id FREQUENCY_A
    (128) FREQUENCY_A -> . empty
    (141) empty -> .

    comma           shift and go to state 247
    rParenthesis    reduce using rule 141 (empty -> .)

    FREQUENCY_A                    shift and go to state 329
    empty                          shift and go to state 248

state 293

    (129) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis . semicolon

    semicolon       shift and go to state 330


state 294

    (130) VARIANCE_A -> comma id . VARIANCE_A
    (130) VARIANCE_A -> . comma id VARIANCE_A
    (131) VARIANCE_A -> . empty
    (141) empty -> .

    comma           shift and go to state 250
    rParenthesis    reduce using rule 141 (empty -> .)

    VARIANCE_A                     shift and go to state 331
    empty                          shift and go to state 251

state 295

    (132) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis . semicolon

    semicolon       shift and go to state 332


state 296

    (133) STANDARD_DEVIATION_A -> comma id . STANDARD_DEVIATION_A
    (133) STANDARD_DEVIATION_A -> . comma id STANDARD_DEVIATION_A
    (134) STANDARD_DEVIATION_A -> . empty
    (141) empty -> .

    comma           shift and go to state 253
    rParenthesis    reduce using rule 141 (empty -> .)

    STANDARD_DEVIATION_A           shift and go to state 333
    empty                          shift and go to state 254

state 297

    (135) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis . semicolon

    semicolon       shift and go to state 334


state 298

    (136) SKEWNESS_A -> comma id . SKEWNESS_A
    (136) SKEWNESS_A -> . comma id SKEWNESS_A
    (137) SKEWNESS_A -> . empty
    (141) empty -> .

    comma           shift and go to state 256
    rParenthesis    reduce using rule 141 (empty -> .)

    SKEWNESS_A                     shift and go to state 335
    empty                          shift and go to state 257

state 299

    (138) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis . semicolon

    semicolon       shift and go to state 336


state 300

    (139) KURTOSI_A -> comma id . KURTOSI_A
    (139) KURTOSI_A -> . comma id KURTOSI_A
    (140) KURTOSI_A -> . empty
    (141) empty -> .

    comma           shift and go to state 259
    rParenthesis    reduce using rule 141 (empty -> .)

    KURTOSI_A                      shift and go to state 337
    empty                          shift and go to state 260

state 301

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY . LIST_A
    (15) LIST_A -> . comma LIST
    (16) LIST_A -> . empty
    (141) empty -> .

    comma           shift and go to state 339
    semicolon       reduce using rule 141 (empty -> .)

    LIST_A                         shift and go to state 338
    empty                          shift and go to state 340

state 302

    (145) SAVE_ARRAY -> empty .

    comma           reduce using rule 145 (SAVE_ARRAY -> empty .)
    semicolon       reduce using rule 145 (SAVE_ARRAY -> empty .)


state 303

    (76) METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .

    var             reduce using rule 76 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)
    func            reduce using rule 76 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)
    start           reduce using rule 76 (METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon .)


state 304

    (78) PARAMS_A -> comma EXP PARAMS_A .

    rParenthesis    reduce using rule 78 (PARAMS_A -> comma EXP PARAMS_A .)


state 305

    (81) METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 81 (METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon .)


state 306

    (65) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A . semicolon

    semicolon       shift and go to state 341


state 307

    (66) CONDITION_A -> else . BLOCK
    (46) BLOCK -> . lCurlyBracket BLOCK_A rCurlyBracket

    lCurlyBracket   shift and go to state 26

    BLOCK                          shift and go to state 342

state 308

    (67) CONDITION_A -> empty .

    semicolon       reduce using rule 67 (CONDITION_A -> empty .)


state 309

    (68) WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 68 (WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon .)


state 310

    (69) WRITE_A -> comma EXPRESSION WRITE_A .

    rParenthesis    reduce using rule 69 (WRITE_A -> comma EXPRESSION WRITE_A .)


state 311

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 343

state 312

    (106) LASSO -> las lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 344

state 313

    (107) RIDGE -> rid lParenthesis id comma id comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 345

state 314

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 346

state 315

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 347

state 316

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 348


state 317

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 349


state 318

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 350


state 319

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis . semicolon

    semicolon       shift and go to state 351


state 320

    (114) MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 114 (MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon .)


state 321

    (115) MEAN_A -> comma id MEAN_A .

    rParenthesis    reduce using rule 115 (MEAN_A -> comma id MEAN_A .)


state 322

    (117) MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 117 (MODE -> mode lParenthesis id MODE_A rParenthesis semicolon .)


state 323

    (118) MODE_A -> comma id MODE_A .

    rParenthesis    reduce using rule 118 (MODE_A -> comma id MODE_A .)


state 324

    (120) MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 120 (MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon .)


state 325

    (121) MEDIAN_A -> comma id MEDIAN_A .

    rParenthesis    reduce using rule 121 (MEDIAN_A -> comma id MEDIAN_A .)


state 326

    (123) PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 123 (PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon .)


state 327

    (124) PROBABILITY_A -> comma id PROBABILITY_A .

    rParenthesis    reduce using rule 124 (PROBABILITY_A -> comma id PROBABILITY_A .)


state 328

    (126) FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 126 (FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon .)


state 329

    (127) FREQUENCY_A -> comma id FREQUENCY_A .

    rParenthesis    reduce using rule 127 (FREQUENCY_A -> comma id FREQUENCY_A .)


state 330

    (129) VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 129 (VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon .)


state 331

    (130) VARIANCE_A -> comma id VARIANCE_A .

    rParenthesis    reduce using rule 130 (VARIANCE_A -> comma id VARIANCE_A .)


state 332

    (132) STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 132 (STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon .)


state 333

    (133) STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .

    rParenthesis    reduce using rule 133 (STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A .)


state 334

    (135) SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 135 (SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon .)


state 335

    (136) SKEWNESS_A -> comma id SKEWNESS_A .

    rParenthesis    reduce using rule 136 (SKEWNESS_A -> comma id SKEWNESS_A .)


state 336

    (138) KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .

    rCurlyBracket   reduce using rule 138 (KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon .)


state 337

    (139) KURTOSI_A -> comma id KURTOSI_A .

    rParenthesis    reduce using rule 139 (KURTOSI_A -> comma id KURTOSI_A .)


state 338

    (14) LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .

    semicolon       reduce using rule 14 (LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A .)


state 339

    (15) LIST_A -> comma . LIST
    (14) LIST -> . id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    id              shift and go to state 353

    LIST                           shift and go to state 352

state 340

    (16) LIST_A -> empty .

    semicolon       reduce using rule 16 (LIST_A -> empty .)


state 341

    (65) CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon .

    rCurlyBracket   reduce using rule 65 (CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon .)


state 342

    (66) CONDITION_A -> else BLOCK .

    semicolon       reduce using rule 66 (CONDITION_A -> else BLOCK .)


state 343

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 354


state 344

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 355


state 345

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 356


state 346

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 357


state 347

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 358


state 348

    (110) TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 110 (TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 349

    (111) MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 111 (MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 350

    (112) MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 112 (MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon .)


state 351

    (113) MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .

    rCurlyBracket   reduce using rule 113 (MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon .)


state 352

    (15) LIST_A -> comma LIST .

    semicolon       reduce using rule 15 (LIST_A -> comma LIST .)


state 353

    (14) LIST -> id . lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A

    lSqrBracket     shift and go to state 132


state 354

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 359

state 355

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 360

state 356

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 361

state 357

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 362

state 358

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 363

state 359

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 364


state 360

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 365


state 361

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 366


state 362

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 367


state 363

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 368


state 364

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 369

state 365

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 370

state 366

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 371

state 367

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 372

state 368

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 373

state 369

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 374


state 370

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 375


state 371

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 376


state 372

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 377


state 373

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 378


state 374

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 379

state 375

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 380

state 376

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 381

state 377

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    string          shift and go to state 382


state 378

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 383

state 379

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 384


state 380

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 385


state 381

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 386


state 382

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 387


state 383

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 388


state 384

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 389


state 385

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 390

state 386

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 391

state 387

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 392

state 388

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 393

state 389

    (105) ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .

    rCurlyBracket   reduce using rule 105 (ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon .)


state 390

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN . comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 394


state 391

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 395


state 392

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 396


state 393

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 397


state 394

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma . BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 398

state 395

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 399

state 396

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma . VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 400

state 397

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 401

state 398

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN . comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 402


state 399

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma string comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 403


state 400

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX . comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 404


state 401

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 405


state 402

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma . BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 406

state 403

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . string comma VARCONSTAUX rParenthesis semicolon

    string          shift and go to state 407


state 404

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma . BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 408

state 405

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 409

state 406

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN . comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 410


state 407

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 411


state 408

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN . comma VARCONSTAUX comma string rParenthesis semicolon

    comma           shift and go to state 412


state 409

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 413


state 410

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma . VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 414

state 411

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma . VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 415

state 412

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma . VARCONSTAUX comma string rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 416

state 413

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 417

state 414

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX . comma string comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 418


state 415

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 419


state 416

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX . comma string rParenthesis semicolon

    comma           shift and go to state 420


state 417

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 421


state 418

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma . string comma float comma BOOLEAN rParenthesis semicolon

    string          shift and go to state 422


state 419

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 423


state 420

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma . string rParenthesis semicolon

    string          shift and go to state 424


state 421

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 425

state 422

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string . comma float comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 426


state 423

    (107) RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 107 (RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon .)


state 424

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string . rParenthesis semicolon

    rParenthesis    shift and go to state 427


state 425

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . comma VARCONSTAUX rParenthesis semicolon

    comma           shift and go to state 428


state 426

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma . float comma BOOLEAN rParenthesis semicolon

    float           shift and go to state 429


state 427

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis . semicolon

    semicolon       shift and go to state 430


state 428

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma . VARCONSTAUX rParenthesis semicolon
    (39) VARCONSTAUX -> . id ISLIST
    (40) VARCONSTAUX -> . cte_i
    (41) VARCONSTAUX -> . cte_f

    id              shift and go to state 109
    cte_i           shift and go to state 110
    cte_f           shift and go to state 111

    VARCONSTAUX                    shift and go to state 431

state 429

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float . comma BOOLEAN rParenthesis semicolon

    comma           shift and go to state 432


state 430

    (108) K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .

    rCurlyBracket   reduce using rule 108 (K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon .)


state 431

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX . rParenthesis semicolon

    rParenthesis    shift and go to state 433


state 432

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma . BOOLEAN rParenthesis semicolon
    (85) BOOLEAN -> . FALSE
    (86) BOOLEAN -> . TRUE

    FALSE           shift and go to state 148
    TRUE            shift and go to state 149

    BOOLEAN                        shift and go to state 434

state 433

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis . semicolon

    semicolon       shift and go to state 435


state 434

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN . rParenthesis semicolon

    rParenthesis    shift and go to state 436


state 435

    (109) MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .

    rCurlyBracket   reduce using rule 109 (MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon .)


state 436

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis . semicolon

    semicolon       shift and go to state 437


state 437

    (106) LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .

    rCurlyBracket   reduce using rule 106 (LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon .)

