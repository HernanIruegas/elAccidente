
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and bool colon comma cte_f cte_i cte_str divide else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_A\n\t\t\t| empty\n\t\n\tVARS : var VARS_A\n\t\n\tVARS_A : TYPE colon VARS_B semicolon VARS_C\n\t\n\tVARS_B : SIMPLE\n\t\t| LIST\n\t\n\tVARS_C : VARS_A\n\t\t\t| empty\n\t\n\tSIMPLE : id SAVE_VAR SIMPLE_A\n\t\n\tSIMPLE_A : comma SIMPLE\n\t\t\t| empty\n\t\n\tLIST : id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A\n\t\n\tLIST_A : comma LIST\n\t\t| empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A\n\t\t| not EXPRESSION EXPLOG_A\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP EXPRESSION_A EXP\n\t\n\tEXPRESSION_A : greater \n\t\t\t\t| lessThan\n\t\t\t\t| greaterEquals\n\t\t\t\t| lessThanEquals\n\t\t\t\t| equals\n\t\t\t\t| notEquals\n\t\n\tEXP : TERM EXP_A\n\t\n\tEXP_A : plus EXP\n\t\t| minus EXP\n\t\t| empty\n\t\n\tTERM : FACTOR TERM_A\n\t\n\tTERM_A : times TERM\n\t\t\t| divide TERM\n\t\t\t| empty\n\t\n\tFACTOR : lParenthesis EXPLOG rParenthesis\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id ISLIST \n\t\t| cte_i \n\t\t| cte_f \n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id ISLIST equals EXPRESSION semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP rSqrBracket\n\t\t\t| empty \n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void \n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon\n\t\n\tCONDITION_A : else BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i \n\t\t| cte_f \n\t\t| cte_str \n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon\n\t\n\tPARAMS : EXP PARAMS_A\n\t\n\tPARAMS_A : comma EXP PARAMS_A\n\t\t| empty\n\t\n\tLOOP : while lParenthesis EXPLOG rParenthesis BLOCK\n\t\n\tMETHODCALL : id lParenthesis EXP METHODCALL_A rParenthesis semicolon\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG semicolon\n\t\n\tBOOLEAN : FALSE\n\t\t\t| TRUE\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_GLOBAL_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ARRAY : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,25,92,],[0,-1,-46,]),'globalFunc':([2,],[3,]),'semicolon':([3,4,5,87,88,89,90,92,96,101,102,105,106,108,109,110,111,131,133,151,154,155,163,166,167,170,172,194,196,202,206,216,217,218,219,220,221,222,223,224,261,262,263,264,267,269,270,283,285,287,289,291,293,295,297,299,301,302,306,308,316,317,318,319,338,340,342,352,384,419,427,433,436,],[-141,6,-142,130,-7,-8,-141,-46,-62,150,-141,-141,-141,-38,-141,-40,-41,-141,-144,-17,-21,-141,-29,-32,-33,-36,-39,-11,-13,266,-61,-19,-20,-18,-22,-30,-31,-34,-35,-37,-12,-141,-141,303,305,-141,309,320,322,324,326,328,330,332,334,336,-141,-145,341,-67,348,349,350,351,-14,-16,-66,-15,389,423,430,435,437,]),'var':([6,8,9,16,130,191,192,193,303,],[11,11,11,-5,-141,-6,-9,-10,-76,]),'func':([6,8,9,16,130,191,192,193,303,],[12,12,12,-5,-141,-6,-9,-10,-76,]),'start':([6,7,8,9,10,14,15,16,130,191,192,193,303,],[-141,13,-141,-141,-4,-2,-3,-5,-141,-6,-9,-10,-76,]),'int':([11,12,130,],[18,18,18,]),'float':([11,12,130,426,],[19,19,19,429,]),'string':([11,12,130,228,229,377,403,418,420,],[20,20,20,277,278,382,407,422,424,]),'bool':([11,12,130,],[21,21,21,]),'void':([12,],[24,]),'lCurlyBracket':([13,198,207,211,307,],[26,26,26,26,26,]),'colon':([17,18,19,20,21,28,29,30,31,32,],[27,-141,-141,-141,-141,-42,-143,-43,-44,-45,]),'id':([18,19,20,21,22,23,24,26,27,28,29,30,31,32,68,91,94,95,97,98,99,100,103,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,136,152,153,156,157,158,159,160,161,162,164,165,168,169,195,200,204,209,225,226,227,230,231,232,233,235,238,241,244,247,250,253,256,259,312,313,314,315,339,357,358,364,367,375,386,387,388,395,396,397,405,410,411,412,413,421,428,],[-141,-141,-141,-141,33,-63,-64,45,90,-42,-143,-43,-44,-45,109,109,109,109,109,109,109,143,109,109,173,174,175,109,109,109,179,180,181,182,183,184,185,186,187,188,189,190,109,109,109,109,109,-23,-24,-25,-26,-27,-28,109,109,109,109,262,109,109,109,274,275,276,109,280,281,282,284,286,288,290,292,294,296,298,300,109,109,109,109,353,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'rCurlyBracket':([26,34,35,36,37,38,39,40,41,42,43,44,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,92,150,266,272,273,305,309,320,322,324,326,328,330,332,334,336,341,348,349,350,351,389,423,430,435,437,],[-141,92,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-46,-84,-57,-80,-58,-81,-68,-114,-117,-120,-123,-126,-129,-132,-135,-138,-65,-110,-111,-112,-113,-105,-107,-108,-109,-106,]),'if':([26,],[46,]),'print':([26,],[47,]),'while':([26,],[48,]),'scan':([26,],[49,]),'return':([26,],[68,]),'ols':([26,],[69,]),'las':([26,],[70,]),'rid':([26,],[71,]),'kmeans':([26,],[72,]),'mbm':([26,],[73,]),'tseries':([26,],[74,]),'mean_abs_err':([26,],[75,]),'mean_sqr_err':([26,],[76,]),'median_abs_err':([26,],[77,]),'mean':([26,],[78,]),'mode':([26,],[79,]),'median':([26,],[80,]),'prob':([26,],[81,]),'freq':([26,],[82,]),'variance':([26,],[83,]),'stddev':([26,],[84,]),'skew':([26,],[85,]),'kurt':([26,],[86,]),'lParenthesis':([33,45,46,47,48,49,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,91,94,95,97,98,99,103,107,136,152,153,156,157,158,159,160,161,162,164,165,168,169,200,204,209,],[91,94,97,98,99,100,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,107,107,107,107,107,107,107,107,107,107,107,107,-23,-24,-25,-26,-27,-28,107,107,107,107,107,107,107,]),'lSqrBracket':([45,90,109,143,353,],[95,132,95,95,132,]),'equals':([45,93,96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-141,136,-62,161,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'not':([68,97,99,107,152,153,],[103,103,103,103,103,103,]),'cte_i':([68,91,94,95,97,98,99,100,103,107,115,116,117,132,136,152,153,156,157,158,159,160,161,162,164,165,168,169,200,204,209,230,312,313,314,315,357,358,364,367,375,386,387,388,395,396,397,405,410,411,412,413,421,428,],[110,110,110,110,110,110,110,144,110,110,110,110,110,110,110,110,110,110,-23,-24,-25,-26,-27,-28,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'cte_f':([68,91,94,95,97,98,99,100,103,107,115,116,117,132,136,152,153,156,157,158,159,160,161,162,164,165,168,169,200,204,209,230,312,313,314,315,357,358,364,367,375,386,387,388,395,396,397,405,410,411,412,413,421,428,],[111,111,111,111,111,111,111,145,111,111,111,111,111,111,111,111,111,111,-23,-24,-25,-26,-27,-28,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'comma':([90,96,105,106,108,109,110,111,131,133,135,137,140,142,143,144,145,146,147,148,149,163,166,167,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,206,215,219,220,221,222,223,224,262,263,265,271,274,275,276,277,278,284,286,288,290,292,294,296,298,300,301,302,343,344,345,346,347,359,360,361,362,363,369,370,371,372,373,380,381,382,383,390,391,392,393,398,399,400,401,406,407,408,409,414,416,417,422,425,429,],[-141,-62,-141,-141,-38,-141,-40,-41,195,-144,200,204,209,213,-141,-72,-73,-74,-75,-85,-86,-29,-32,-33,-36,-39,225,226,227,228,229,230,231,232,233,235,238,241,244,247,250,253,256,259,-61,-71,-22,-30,-31,-34,-35,-37,-141,-141,200,209,311,312,313,314,315,235,238,241,244,247,250,253,256,259,339,-145,354,355,356,357,358,364,365,366,367,368,374,375,376,377,378,385,386,387,388,394,395,396,397,402,403,404,405,410,411,412,413,418,420,421,426,428,432,]),'else':([92,269,],[-46,307,]),'times':([96,106,108,109,110,111,172,206,224,],[-62,168,-38,-141,-40,-41,-39,-61,-37,]),'divide':([96,106,108,109,110,111,172,206,224,],[-62,169,-38,-141,-40,-41,-39,-61,-37,]),'plus':([96,105,106,108,109,110,111,167,170,172,206,222,223,224,],[-62,164,-141,-38,-141,-40,-41,-33,-36,-39,-61,-34,-35,-37,]),'minus':([96,105,106,108,109,110,111,167,170,172,206,222,223,224,],[-62,165,-141,-38,-141,-40,-41,-33,-36,-39,-61,-34,-35,-37,]),'greater':([96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-62,157,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'lessThan':([96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-62,158,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'greaterEquals':([96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-62,159,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'lessThanEquals':([96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-62,160,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'notEquals':([96,104,105,106,108,109,110,111,163,166,167,170,172,206,220,221,222,223,224,],[-62,162,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'rParenthesis':([96,102,105,106,108,109,110,111,134,135,137,139,140,141,142,143,144,145,146,147,148,149,151,154,155,163,166,167,170,171,172,182,183,184,185,186,187,188,189,190,199,201,203,205,206,208,210,212,213,214,215,216,217,218,219,220,221,222,223,224,234,236,237,239,240,242,243,245,246,248,249,251,252,254,255,257,258,260,265,268,271,279,280,281,282,284,286,288,290,292,294,296,298,300,304,310,321,323,325,327,329,331,333,335,337,379,415,424,431,434,],[-62,-141,-141,-141,-38,-141,-40,-41,198,-141,-141,207,-141,211,-141,-141,-72,-73,-74,-75,-85,-86,-17,-21,-141,-29,-32,-33,-36,224,-39,-141,-141,-141,-141,-141,-141,-141,-141,-141,-77,-79,267,-83,-61,270,-70,273,-59,-60,-71,-19,-20,-18,-22,-30,-31,-34,-35,-37,283,-116,285,-119,287,-122,289,-125,291,-128,293,-131,295,-134,297,-137,299,-140,-141,-82,-141,316,317,318,319,-141,-141,-141,-141,-141,-141,-141,-141,-141,-78,-69,-115,-118,-121,-124,-127,-130,-133,-136,-139,384,419,427,433,436,]),'rSqrBracket':([96,105,106,108,109,110,111,138,163,166,167,170,172,197,206,220,221,222,223,224,],[-62,-141,-141,-38,-141,-40,-41,206,-29,-32,-33,-36,-39,263,-61,-30,-31,-34,-35,-37,]),'and':([96,102,105,106,108,109,110,111,155,163,166,167,170,172,206,219,220,221,222,223,224,],[-62,152,-141,-141,-38,-141,-40,-41,152,-29,-32,-33,-36,-39,-61,-22,-30,-31,-34,-35,-37,]),'or':([96,102,105,106,108,109,110,111,155,163,166,167,170,172,206,219,220,221,222,223,224,],[-62,153,-141,-141,-38,-141,-40,-41,153,-29,-32,-33,-36,-39,-61,-22,-30,-31,-34,-35,-37,]),'cte_str':([100,],[146,]),'FALSE':([100,311,354,355,356,365,366,368,374,376,378,385,394,402,404,432,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'TRUE':([100,311,354,355,356,365,366,368,374,376,378,385,394,402,404,432,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'START_GLOBAL_FUNCTION':([3,],[4,]),'empty':([3,6,8,9,18,19,20,21,26,45,90,102,105,106,109,130,131,135,137,140,142,143,155,182,183,184,185,186,187,188,189,190,262,263,265,269,271,284,286,288,290,292,294,296,298,300,301,],[5,10,10,10,29,29,29,29,36,96,133,154,166,170,96,193,196,201,205,210,214,96,154,236,239,242,245,248,251,254,257,260,133,302,201,308,210,236,239,242,245,248,251,254,257,260,340,]),'PROGRAM_A':([6,8,9,],[7,14,15,]),'VARS':([6,8,9,],[8,8,8,]),'METHOD':([6,8,9,],[9,9,9,]),'VARS_A':([11,130,],[16,192,]),'TYPE':([11,12,130,],[17,23,17,]),'TYPEMETHOD':([12,],[22,]),'BLOCK':([13,198,207,211,307,],[25,264,269,272,342,]),'SAVE_TYPE':([18,19,20,21,],[28,30,31,32,]),'BLOCK_A':([26,],[34,]),'STATEMENT':([26,],[35,]),'ASSIGNMENT':([26,],[37,]),'CONDITION':([26,],[38,]),'WRITE':([26,],[39,]),'LOOP':([26,],[40,]),'METHODCALL':([26,],[41,]),'READ':([26,],[42,]),'STATMETHODS':([26,],[43,]),'RETURN':([26,],[44,]),'ORDINARY_LEAST_SQUARES':([26,],[50,]),'LASSO':([26,],[51,]),'RIDGE':([26,],[52,]),'K_MEANS':([26,],[53,]),'MINI_BATCH_MEANS':([26,],[54,]),'TIME_SERIES_SPLIT':([26,],[55,]),'MEAN_ABSOLUTE_ERROR':([26,],[56,]),'MEAN_SQUARED_ERROR':([26,],[57,]),'MEDIAN_ABSOLUTE_ERROR':([26,],[58,]),'MEAN':([26,],[59,]),'MODE':([26,],[60,]),'MEDIAN':([26,],[61,]),'PROBABILITY':([26,],[62,]),'FREQUENCY':([26,],[63,]),'VARIANCE':([26,],[64,]),'STANDARD_DEVIATION':([26,],[65,]),'SKEWNESS':([26,],[66,]),'KURTOSI':([26,],[67,]),'VARS_B':([27,],[87,]),'SIMPLE':([27,195,],[88,261,]),'LIST':([27,339,],[89,352,]),'ISLIST':([45,109,143,],[93,172,215,]),'EXPLOG':([68,97,99,107,152,153,],[101,139,141,171,216,217,]),'EXPRESSION':([68,97,98,99,103,107,136,152,153,209,],[102,102,140,102,155,102,202,102,102,271,]),'EXP':([68,91,94,95,97,98,99,103,107,136,152,153,156,164,165,200,204,209,],[104,135,137,138,104,104,104,104,104,104,104,104,219,220,221,265,268,104,]),'TERM':([68,91,94,95,97,98,99,103,107,136,152,153,156,164,165,168,169,200,204,209,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,222,223,105,105,105,]),'FACTOR':([68,91,94,95,97,98,99,103,107,136,152,153,156,164,165,168,169,200,204,209,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'VARCONSTAUX':([68,91,94,95,97,98,99,103,107,115,116,117,132,136,152,153,156,164,165,168,169,200,204,209,230,312,313,314,315,357,358,364,367,375,386,387,388,395,396,397,405,410,411,412,413,421,428,],[108,108,108,108,108,108,108,108,108,176,177,178,197,108,108,108,108,108,108,108,108,108,108,108,279,344,345,346,347,362,363,369,372,380,391,392,393,399,400,401,409,414,415,416,417,425,431,]),'SAVE_VAR':([90,262,],[131,131,]),'PARAMS':([91,],[134,]),'VARCTE':([100,],[142,]),'BOOLEAN':([100,311,354,355,356,365,366,368,374,376,378,385,394,402,404,432,],[147,343,359,360,361,370,371,373,379,381,383,390,398,406,408,434,]),'EXPLOG_A':([102,155,],[151,218,]),'EXPRESSION_A':([104,],[156,]),'EXP_A':([105,],[163,]),'TERM_A':([106,],[167,]),'VARS_C':([130,],[191,]),'SIMPLE_A':([131,],[194,]),'PARAMS_A':([135,265,],[199,304,]),'METHODCALL_A':([137,],[203,]),'WRITE_A':([140,271,],[208,310,]),'READ_A':([142,],[212,]),'MEAN_A':([182,284,],[234,321,]),'MODE_A':([183,286,],[237,323,]),'MEDIAN_A':([184,288,],[240,325,]),'PROBABILITY_A':([185,290,],[243,327,]),'FREQUENCY_A':([186,292,],[246,329,]),'VARIANCE_A':([187,294,],[249,331,]),'STANDARD_DEVIATION_A':([188,296,],[252,333,]),'SKEWNESS_A':([189,298,],[255,335,]),'KURTOSI_A':([190,300,],[258,337,]),'SAVE_ARRAY':([263,],[301,]),'CONDITION_A':([269,],[306,]),'LIST_A':([301,],[338,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK','PROGRAM',7,'p_PROGRAM','parser.py',15),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',20),
  ('PROGRAM_A -> METHOD PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',21),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',22),
  ('VARS -> var VARS_A','VARS',2,'p_VARS','parser.py',27),
  ('VARS_A -> TYPE colon VARS_B semicolon VARS_C','VARS_A',5,'p_VARS_A','parser.py',32),
  ('VARS_B -> SIMPLE','VARS_B',1,'p_VARS_B','parser.py',37),
  ('VARS_B -> LIST','VARS_B',1,'p_VARS_B','parser.py',38),
  ('VARS_C -> VARS_A','VARS_C',1,'p_VARS_C','parser.py',43),
  ('VARS_C -> empty','VARS_C',1,'p_VARS_C','parser.py',44),
  ('SIMPLE -> id SAVE_VAR SIMPLE_A','SIMPLE',3,'p_SIMPLE','parser.py',49),
  ('SIMPLE_A -> comma SIMPLE','SIMPLE_A',2,'p_SIMPLE_A','parser.py',55),
  ('SIMPLE_A -> empty','SIMPLE_A',1,'p_SIMPLE_A','parser.py',56),
  ('LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A','LIST',6,'p_LIST','parser.py',61),
  ('LIST_A -> comma LIST','LIST_A',2,'p_LIST_A','parser.py',66),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',67),
  ('EXPLOG -> EXPRESSION EXPLOG_A','EXPLOG',2,'p_EXPLOG','parser.py',72),
  ('EXPLOG -> not EXPRESSION EXPLOG_A','EXPLOG',3,'p_EXPLOG','parser.py',73),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',78),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',79),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',80),
  ('EXPRESSION -> EXP EXPRESSION_A EXP','EXPRESSION',3,'p_EXPRESSION','parser.py',85),
  ('EXPRESSION_A -> greater','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',90),
  ('EXPRESSION_A -> lessThan','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',91),
  ('EXPRESSION_A -> greaterEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',92),
  ('EXPRESSION_A -> lessThanEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',93),
  ('EXPRESSION_A -> equals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',94),
  ('EXPRESSION_A -> notEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',95),
  ('EXP -> TERM EXP_A','EXP',2,'p_EXP','parser.py',100),
  ('EXP_A -> plus EXP','EXP_A',2,'p_EXP_A','parser.py',105),
  ('EXP_A -> minus EXP','EXP_A',2,'p_EXP_A','parser.py',106),
  ('EXP_A -> empty','EXP_A',1,'p_EXP_A','parser.py',107),
  ('TERM -> FACTOR TERM_A','TERM',2,'p_TERM','parser.py',112),
  ('TERM_A -> times TERM','TERM_A',2,'p_TERM_A','parser.py',117),
  ('TERM_A -> divide TERM','TERM_A',2,'p_TERM_A','parser.py',118),
  ('TERM_A -> empty','TERM_A',1,'p_TERM_A','parser.py',119),
  ('FACTOR -> lParenthesis EXPLOG rParenthesis','FACTOR',3,'p_FACTOR','parser.py',124),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',125),
  ('VARCONSTAUX -> id ISLIST','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',131),
  ('VARCONSTAUX -> cte_i','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',132),
  ('VARCONSTAUX -> cte_f','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',133),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',138),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',139),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',140),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',141),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',146),
  ('BLOCK_A -> STATEMENT','BLOCK_A',1,'p_BLOCK_A','parser.py',151),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',152),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',157),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',158),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',159),
  ('STATEMENT -> LOOP','STATEMENT',1,'p_STATEMENT','parser.py',160),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',161),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',162),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',163),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',164),
  ('ASSIGNMENT -> id ISLIST equals EXPRESSION semicolon','ASSIGNMENT',5,'p_ASSIGNMENT','parser.py',169),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',174),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',179),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',180),
  ('ISLIST -> lSqrBracket EXP rSqrBracket','ISLIST',3,'p_ISLIST','parser.py',185),
  ('ISLIST -> empty','ISLIST',1,'p_ISLIST','parser.py',186),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',191),
  ('TYPEMETHOD -> void','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',192),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon','CONDITION',7,'p_CONDITION','parser.py',197),
  ('CONDITION_A -> else BLOCK','CONDITION_A',2,'p_CONDITION_A','parser.py',202),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',203),
  ('WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon','WRITE',6,'p_WRITE','parser.py',208),
  ('WRITE_A -> comma EXPRESSION WRITE_A','WRITE_A',3,'p_WRITE_A','parser.py',213),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',214),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',219),
  ('VARCTE -> cte_i','VARCTE',1,'p_VARCTE','parser.py',220),
  ('VARCTE -> cte_f','VARCTE',1,'p_VARCTE','parser.py',221),
  ('VARCTE -> cte_str','VARCTE',1,'p_VARCTE','parser.py',222),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',223),
  ('METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon','METHOD',8,'p_METHOD','parser.py',228),
  ('PARAMS -> EXP PARAMS_A','PARAMS',2,'p_PARAMS','parser.py',233),
  ('PARAMS_A -> comma EXP PARAMS_A','PARAMS_A',3,'p_PARAMS_A','parser.py',238),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',239),
  ('LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK','LOOP',5,'p_LOOP','parser.py',244),
  ('METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon','METHODCALL',6,'p_METHODCALL','parser.py',249),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',254),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',255),
  ('RETURN -> return EXPLOG semicolon','RETURN',3,'p_RETURN','parser.py',260),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','parser.py',265),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','parser.py',266),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',271),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',272),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',273),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',274),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',275),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',276),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',277),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',278),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',279),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',280),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',281),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',282),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',283),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',284),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',285),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',286),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',287),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',288),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',293),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',298),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',303),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',308),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',313),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',318),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',323),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',328),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',333),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',338),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',343),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',344),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',349),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',354),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',355),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',360),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',365),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',366),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',371),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',376),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',377),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',382),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',387),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',388),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',393),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',398),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',399),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',404),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',409),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',410),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',415),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',420),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',421),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',426),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',431),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',432),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',437),
  ('START_GLOBAL_FUNCTION -> empty','START_GLOBAL_FUNCTION',1,'p_START_GLOBAL_FUNCTION','parser.py',450),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',460),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',468),
  ('SAVE_ARRAY -> empty','SAVE_ARRAY',1,'p_SAVE_ARRAY','parser.py',480),
]
