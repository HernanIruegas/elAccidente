
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : SIMPLE\n\t\t\t| LIST\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : id SIMPLE_A \n\t\n\tSIMPLE_A : assign VARCTE_AUX_VARS SIMPLE_B\n\t\t\t| SAVE_VAR SIMPLE_B\t\n\t\n\tSIMPLE_B : comma SIMPLE\n\t\t\t| empty\t\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : FALSE SAVE_ASSIGNED_VAR\n\t\t\t\t\t| TRUE SAVE_ASSIGNED_VAR\n\t\n\tLIST : id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A\n\t\n\tLIST_A : comma LIST\n\t\t| empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP rSqrBracket\n\t\t\t| empty \n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG semicolon\n\t\n\tBOOLEAN : FALSE PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| TRUE PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_ARRAY : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n    VALIDATE_PARAMETER : empty\n    \n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,52,76,77,154,],[0,-156,-1,-187,-57,]),'void':([2,9,10,11,12,13,15,17,18,19,20,30,45,54,55,56,154,333,381,382,],[3,-156,16,-156,-156,-4,28,-2,-156,-3,-6,-5,-156,-7,-10,-11,-57,-156,-88,-165,]),'globalFunc':([3,4,5,],[-156,6,-158,]),'start':([5,16,29,],[-158,-156,38,]),'colon':([5,21,22,23,24,25,32,33,34,35,],[-158,31,-156,-156,-156,-156,-53,-54,-55,-56,]),'id':([5,22,23,24,25,26,27,28,31,32,33,34,35,37,47,48,53,70,75,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,141,154,159,160,164,167,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,205,215,217,218,221,222,223,224,225,226,227,232,233,253,260,261,282,283,284,285,286,287,289,290,292,293,295,296,297,300,301,302,303,305,308,311,314,317,320,323,326,329,336,341,344,345,349,350,351,352,389,401,402,403,404,409,411,413,415,417,419,421,423,425,431,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,464,465,466,467,473,474,475,478,486,497,498,499,500,506,507,508,516,521,522,523,524,532,534,539,541,546,548,],[-158,-156,-156,-156,-156,36,-75,-156,42,-53,-54,-55,-56,-76,57,62,90,150,153,90,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,57,57,-57,57,57,208,57,-156,234,235,236,57,57,57,240,241,242,243,244,245,246,247,248,249,250,251,57,-99,57,57,57,-156,-156,-156,-156,-156,-156,57,-173,332,-156,57,-34,-35,-36,-37,-38,-39,-156,-156,-156,-156,354,355,356,57,360,361,362,364,366,368,370,372,374,376,378,380,57,57,57,-70,57,57,57,57,-156,57,57,57,57,-129,-132,-135,-138,-141,-144,-147,-150,-153,57,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,57,57,-156,-78,-96,-170,57,57,57,57,57,57,-120,57,57,57,57,57,57,57,57,57,-122,57,-123,-124,-121,]),'semicolon':([6,7,8,39,40,41,42,46,49,50,57,59,60,61,62,63,64,65,66,67,68,69,71,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,165,166,168,169,170,172,191,192,193,195,196,197,216,219,220,228,229,230,231,252,254,255,276,277,278,279,280,281,288,291,331,346,347,348,353,363,365,367,369,371,373,375,377,379,386,390,394,395,396,397,398,399,405,406,407,408,428,429,450,495,530,538,544,547,],[-156,9,-157,45,-8,-9,-156,-12,-156,-159,-156,-156,-156,-156,-156,-156,-156,-156,-21,-156,-156,-14,-16,-156,-171,-156,-51,-172,-52,-13,-17,-74,-156,-156,-156,-22,-160,-23,-15,-156,215,-156,-32,-156,-156,-49,-50,-156,-161,-18,-19,-20,-156,-31,-156,-40,-175,-44,-176,-24,-26,-73,-27,-178,-29,-30,-156,-156,-41,-45,-25,-28,-33,-177,-156,409,411,413,415,417,419,421,423,425,-156,436,-42,-43,-46,-47,-48,-174,445,446,447,448,449,-179,466,500,534,541,546,548,]),'lParenthesis':([8,36,43,90,91,92,93,95,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,141,157,158,159,160,161,162,167,171,201,202,205,217,218,221,222,223,224,225,226,227,232,233,260,261,266,282,283,284,285,286,287,289,290,292,293,336,341,344,349,350,351,352,431,],[-157,-156,51,-156,159,160,-156,164,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,171,-156,-167,171,171,205,-183,171,-156,261,-168,171,171,171,171,-156,-156,-156,-156,-156,-156,171,-173,-156,171,344,-34,-35,-36,-37,-38,-39,-156,-156,-156,-156,171,171,171,171,171,171,171,171,]),'lCurlyBracket':([8,38,44,94,162,163,198,256,257,262,338,339,343,392,434,454,455,],[-157,-156,53,-156,-183,53,-156,53,-164,-156,53,-180,-156,53,-156,53,-182,]),'var':([9,11,45,54,55,56,],[14,14,14,-7,-10,-11,]),'func':([9,11,12,18,45,54,55,56,154,333,381,382,],[15,15,15,15,-156,-7,-10,-11,-57,-156,-88,-165,]),'int':([14,15,51,384,],[22,22,22,22,]),'float':([14,15,51,384,537,],[23,23,23,23,540,]),'string':([14,15,51,298,299,384,488,514,529,531,],[24,24,24,357,358,24,493,518,533,535,]),'bool':([14,15,51,384,],[25,25,25,25,]),'lSqrBracket':([42,57,62,90,133,134,156,158,208,332,],[47,-156,141,-156,141,-171,141,-171,141,47,]),'assign':([42,90,142,150,156,158,200,255,],[48,-156,-74,48,-156,-171,260,-73,]),'comma':([42,49,50,57,59,60,61,62,63,64,65,66,67,68,133,134,135,136,137,138,140,142,143,144,145,146,147,148,150,153,168,169,170,172,191,192,193,195,196,197,199,204,207,208,209,210,211,212,213,214,228,229,230,231,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,255,258,259,263,264,270,271,272,273,274,275,281,288,291,334,335,337,347,348,353,354,355,356,357,358,364,366,368,370,372,374,376,378,380,387,388,391,394,395,396,397,398,399,437,440,441,442,443,444,468,469,470,471,472,480,481,482,483,484,491,492,493,494,501,502,503,504,509,510,511,512,517,518,519,520,525,527,528,533,536,540,],[-156,70,-159,-156,-156,-156,70,-156,-156,-156,-156,-21,-156,-156,-156,-171,-156,-51,-172,-52,-17,-74,-156,-156,-156,-22,-160,-23,-156,-156,-32,-156,-156,-49,-50,253,-161,-18,-19,-20,-156,-156,268,-156,-156,-156,-156,-87,-156,-156,-40,-175,-44,-176,295,296,297,298,299,300,301,302,303,305,308,311,314,317,320,323,326,329,-73,-156,-166,341,-186,-83,-84,-85,-86,-100,-101,-156,-41,-45,384,-162,-156,-33,-177,-156,400,401,402,403,404,305,308,311,314,317,320,323,326,329,431,-169,-156,-42,-43,-46,-47,-48,-174,341,461,462,463,464,465,475,476,477,478,479,485,486,487,488,489,496,497,498,499,505,506,507,508,513,514,515,516,521,522,523,524,529,531,532,537,539,543,]),'cte_i':([47,48,114,141,159,160,164,167,171,176,177,178,205,217,218,221,222,223,224,225,226,227,232,233,260,261,282,283,284,285,286,287,289,290,292,293,300,336,341,344,349,350,351,352,401,402,403,404,431,464,465,475,478,486,497,498,499,506,507,508,516,521,522,523,524,532,539,],[59,63,59,59,59,59,209,59,-156,59,59,59,59,59,59,59,-156,-156,-156,-156,-156,-156,59,-173,-156,59,-34,-35,-36,-37,-38,-39,-156,-156,-156,-156,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'cte_f':([47,48,114,141,159,160,164,167,171,176,177,178,205,217,218,221,222,223,224,225,226,227,232,233,260,261,282,283,284,285,286,287,289,290,292,293,300,336,341,344,349,350,351,352,401,402,403,404,431,464,465,475,478,486,497,498,499,506,507,508,516,521,522,523,524,532,539,],[60,64,60,60,60,60,210,60,-156,60,60,60,60,60,60,60,-156,-156,-156,-156,-156,-156,60,-173,-156,60,-34,-35,-36,-37,-38,-39,-156,-156,-156,-156,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'cte_str':([48,164,],[65,211,]),'FALSE':([48,164,400,461,462,463,476,477,479,485,487,489,496,505,513,515,543,],[67,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'TRUE':([48,164,400,461,462,463,476,477,479,485,487,489,496,505,513,515,543,],[68,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'rParenthesis':([50,51,57,59,60,72,73,74,133,134,136,137,138,142,151,152,153,166,168,169,170,172,191,199,203,204,207,208,209,210,211,212,213,214,216,219,220,228,229,230,231,243,244,245,246,247,248,249,250,251,255,258,259,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,288,291,294,304,306,307,309,310,312,313,315,316,318,319,321,322,324,325,327,328,330,334,335,337,340,342,346,347,348,353,359,360,361,362,364,366,368,370,372,374,376,378,380,383,385,387,388,391,393,394,395,396,397,398,399,410,412,414,416,418,420,422,424,426,427,430,432,437,451,456,490,526,535,542,545,],[-159,-156,-156,-156,-156,-156,-89,-90,-156,-171,-51,-172,-52,-74,198,-163,-156,-156,-32,-156,-156,-49,-50,-156,262,-156,-156,-156,-156,-156,-156,-87,-156,-156,-156,-31,-156,-40,-175,-44,-176,-156,-156,-156,-156,-156,-156,-156,-156,-156,-73,-156,-166,-156,-186,343,345,-71,-72,-83,-84,-85,-86,-100,-101,-27,-178,-29,-30,-156,-156,-41,-45,353,363,-131,365,-134,367,-137,369,-140,371,-143,373,-146,375,-149,377,-152,379,-155,-156,-162,-156,390,-82,-28,-33,-177,-156,405,406,407,408,-156,-156,-156,-156,-156,-156,-156,-156,-156,-91,-93,-156,-169,-156,439,-42,-43,-46,-47,-48,-174,-130,-133,-136,-139,-142,-145,-148,-151,-154,-92,450,-98,-156,-97,-81,495,530,538,544,547,]),'rCurlyBracket':([53,78,79,80,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,155,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[-156,154,-156,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-58,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'if':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[91,91,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'print':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[92,92,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'while':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,206,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[93,93,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,266,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'do':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[94,94,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'scan':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[95,95,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'return':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[114,114,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'ols':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[115,115,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'las':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[116,116,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'rid':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[117,117,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'kmeans':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[118,118,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'mbm':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[119,119,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'tseries':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[120,120,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'mean_abs_err':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[121,121,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'mean_sqr_err':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[122,122,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'median_abs_err':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[123,123,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'mean':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[124,124,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'mode':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[125,125,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'median':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[126,126,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'prob':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[127,127,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'freq':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[128,128,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'variance':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[129,129,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'stddev':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[130,130,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'skew':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[131,131,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'kurt':([53,79,81,82,83,84,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,154,215,345,389,409,411,413,415,417,419,421,423,425,433,435,436,438,439,445,446,447,448,449,452,453,457,458,459,460,466,467,473,474,500,534,541,546,548,],[132,132,-60,-61,-62,-63,-64,-65,-66,-67,-68,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-57,-99,-70,-156,-129,-132,-135,-138,-141,-144,-147,-150,-153,-156,-79,-80,-156,-156,-125,-126,-127,-128,-69,-77,-181,-94,-184,-95,-185,-156,-78,-96,-170,-120,-122,-123,-124,-121,]),'rSqrBracket':([57,58,59,60,133,134,136,137,138,142,169,170,172,191,194,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,135,-156,-156,-156,-171,-51,-172,-52,-74,-156,-156,-49,-50,255,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'times':([57,59,60,133,134,136,137,138,142,170,172,191,230,231,255,353,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,-156,-49,-50,292,-176,-73,-156,-48,-174,]),'divide':([57,59,60,133,134,136,137,138,142,170,172,191,230,231,255,353,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,-156,-49,-50,293,-176,-73,-156,-48,-174,]),'plus':([57,59,60,133,134,136,137,138,142,169,170,172,191,228,229,230,231,255,291,353,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,-156,-156,-49,-50,289,-175,-44,-176,-73,-45,-156,-46,-47,-48,-174,]),'minus':([57,59,60,133,134,136,137,138,142,169,170,172,191,228,229,230,231,255,291,353,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,-156,-156,-49,-50,290,-175,-44,-176,-73,-45,-156,-46,-47,-48,-174,]),'greater':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,222,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'lessThan':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,223,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'greaterEquals':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,224,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'lessThanEquals':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,225,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'equals':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,226,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'notEquals':([57,59,60,133,134,136,137,138,142,168,169,170,172,191,228,229,230,231,255,288,291,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,227,-156,-156,-49,-50,-40,-175,-44,-176,-73,-41,-45,-156,-42,-43,-46,-47,-48,-174,]),'and':([57,59,60,133,134,136,137,138,142,166,168,169,170,172,191,220,228,229,230,231,255,281,288,291,347,348,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,217,-32,-156,-156,-49,-50,217,-40,-175,-44,-176,-73,-156,-41,-45,-33,-177,-156,-42,-43,-46,-47,-48,-174,]),'or':([57,59,60,133,134,136,137,138,142,166,168,169,170,172,191,220,228,229,230,231,255,281,288,291,347,348,353,394,395,396,397,398,399,],[-156,-156,-156,-156,-171,-51,-172,-52,-74,218,-32,-156,-156,-49,-50,218,-40,-175,-44,-176,-73,-156,-41,-45,-33,-177,-156,-42,-43,-46,-47,-48,-174,]),'not':([114,159,171,205,217,218,232,233,260,336,344,],[167,167,-156,167,167,167,167,-173,-156,167,167,]),'else':([154,389,],[-57,434,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,16,22,23,24,25,28,],[4,29,32,33,34,35,37,]),'empty':([3,6,9,11,12,16,18,22,23,24,25,28,36,38,42,45,49,51,52,53,57,59,60,61,62,63,64,65,67,68,72,79,90,93,94,133,135,143,144,145,150,153,156,157,166,169,170,171,192,198,199,204,207,208,209,210,211,213,214,216,220,222,223,224,225,226,227,243,244,245,246,247,248,249,250,251,258,260,262,263,280,281,289,290,292,293,333,334,337,343,353,364,366,368,370,372,374,376,378,380,386,387,389,391,433,434,437,438,439,466,],[5,8,13,13,20,5,20,5,5,5,5,5,8,8,50,56,71,74,77,80,134,137,137,71,142,137,137,137,147,147,152,80,158,162,162,142,193,147,147,147,50,50,142,202,219,229,231,233,254,257,259,264,269,142,137,137,137,137,137,277,219,233,233,233,233,233,233,306,309,312,315,318,321,324,327,330,335,233,339,342,277,348,233,233,233,233,382,385,388,339,399,306,309,312,315,318,321,324,327,330,429,432,435,264,453,455,342,458,460,474,]),'START_FUNCTION':([6,36,38,],[7,43,44,]),'PROGRAM_A':([9,11,],[10,17,]),'VARS':([9,11,45,],[11,11,55,]),'METHOD':([9,11,12,18,],[12,12,18,18,]),'PROGRAM_B':([12,18,],[19,30,]),'TYPE':([14,15,51,384,],[21,27,75,75,]),'TYPEMETHOD':([15,],[26,]),'VARS_A':([31,],[39,]),'SIMPLE':([31,70,],[40,149,]),'LIST':([31,253,],[41,331,]),'SIMPLE_A':([42,150,],[46,46,]),'SAVE_VAR':([42,150,153,],[49,49,199,]),'BLOCK':([44,163,256,338,392,454,],[52,206,333,389,438,467,]),'VARS_B':([45,],[54,]),'VARCONSTAUX':([47,114,141,159,160,167,176,177,178,205,217,218,221,232,261,300,336,341,344,349,350,351,352,401,402,403,404,431,464,465,475,478,486,497,498,499,506,507,508,516,521,522,523,524,532,539,],[58,172,172,172,172,172,237,238,239,172,172,172,172,172,172,359,172,172,172,172,172,172,172,441,442,443,444,172,471,472,480,483,491,502,503,504,510,511,512,520,525,526,527,528,536,542,]),'VARCTE_AUX_VARS':([48,],[61,]),'BOOLEAN_AUX_VARS':([48,],[66,]),'SIMPLE_B':([49,61,],[69,139,]),'METHOD_A':([51,],[72,]),'PARAMS':([51,384,],[73,427,]),'PRINTQUADS':([52,],[76,]),'BLOCK_A':([53,79,],[78,155,]),'STATEMENT':([53,79,],[79,79,]),'ASSIGNMENT':([53,79,],[81,81,]),'CONDITION':([53,79,],[82,82,]),'WRITE':([53,79,],[83,83,]),'PRE_CONDITIONAL_LOOP':([53,79,],[84,84,]),'POST_CONDITIONAL_LOOP':([53,79,],[85,85,]),'METHODCALL':([53,79,],[86,86,]),'READ':([53,79,],[87,87,]),'STATMETHODS':([53,79,],[88,88,]),'RETURN':([53,79,],[89,89,]),'ORDINARY_LEAST_SQUARES':([53,79,],[96,96,]),'LASSO':([53,79,],[97,97,]),'RIDGE':([53,79,],[98,98,]),'K_MEANS':([53,79,],[99,99,]),'MINI_BATCH_MEANS':([53,79,],[100,100,]),'TIME_SERIES_SPLIT':([53,79,],[101,101,]),'MEAN_ABSOLUTE_ERROR':([53,79,],[102,102,]),'MEAN_SQUARED_ERROR':([53,79,],[103,103,]),'MEDIAN_ABSOLUTE_ERROR':([53,79,],[104,104,]),'MEAN':([53,79,],[105,105,]),'MODE':([53,79,],[106,106,]),'MEDIAN':([53,79,],[107,107,]),'PROBABILITY':([53,79,],[108,108,]),'FREQUENCY':([53,79,],[109,109,]),'VARIANCE':([53,79,],[110,110,]),'STANDARD_DEVIATION':([53,79,],[111,111,]),'SKEWNESS':([53,79,],[112,112,]),'KURTOSI':([53,79,],[113,113,]),'PUSH_STACK_OPERANDS':([57,90,],[133,156,]),'PUSH_STACK_OPERANDS_CONSTANT':([59,60,63,64,65,209,210,211,213,214,],[136,138,143,144,145,271,272,273,274,275,]),'ISLIST':([62,133,156,208,],[140,191,200,270,]),'SAVE_ASSIGNED_VAR':([67,68,143,144,145,],[146,148,195,196,197,]),'SAVE_COUNTER_PARAM':([72,],[151,]),'VALIDATE_FUNCTION_NAME':([90,],[157,]),'PUSH_STACK_JUMPS':([93,94,],[161,163,]),'EXPLOG':([114,159,205,217,218,232,336,344,],[165,203,265,278,279,294,386,393,]),'EXPRESSION':([114,159,160,167,205,217,218,232,336,341,344,],[166,166,204,220,166,166,166,166,166,391,166,]),'EXP':([114,141,159,160,167,205,217,218,221,232,261,336,341,344,349,350,431,],[168,194,168,168,168,168,168,168,281,168,337,168,168,168,394,395,451,]),'TERM':([114,141,159,160,167,205,217,218,221,232,261,336,341,344,349,350,351,352,431,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,396,397,169,]),'FACTOR':([114,141,159,160,167,205,217,218,221,232,261,336,341,344,349,350,351,352,431,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'SAVE_ARRAY':([135,],[192,]),'ERA':([157,],[201,]),'VARCTE':([164,],[207,]),'BOOLEAN':([164,400,461,462,463,476,477,479,485,487,489,496,505,513,515,543,],[212,440,468,469,470,481,482,484,490,492,494,501,509,517,519,545,]),'EXPLOG_A':([166,220,],[216,280,]),'EXPRESSION_A':([168,],[221,]),'SOLVE_OPERATION_SUM_MINUS':([169,],[228,]),'SOLVE_OPERATION_TIMES_DIVIDE':([170,],[230,]),'PUSH_STACK_OPERATORS':([171,222,223,224,225,226,227,260,289,290,292,293,],[232,282,283,284,285,286,287,336,349,350,351,352,]),'LIST_A':([192,],[252,]),'SAVE_COUNTER_QUAD':([198,],[256,]),'SAVE_PARAM_TYPE':([199,],[258,]),'GENERATE_QUAD_PRINT':([204,391,],[263,437,]),'READ_A':([207,],[267,]),'SOLVE_OPERATION_LOGIC':([216,280,],[276,346,]),'EXP_A':([228,],[288,]),'TERM_A':([230,],[291,]),'MEAN_A':([243,364,],[304,410,]),'MODE_A':([244,366,],[307,412,]),'MEDIAN_A':([245,368,],[310,414,]),'PROBABILITY_A':([246,370,],[313,416,]),'FREQUENCY_A':([247,372,],[316,418,]),'VARIANCE_A':([248,374,],[319,420,]),'STANDARD_DEVIATION_A':([249,376,],[322,422,]),'SKEWNESS_A':([250,378,],[325,424,]),'KURTOSI_A':([251,380,],[328,426,]),'INCREMENT_PARAM_COUNTER':([258,],[334,]),'GENERATE_GOTOF_CONDITIONAL':([262,343,],[338,392,]),'WRITE_A':([263,437,],[340,456,]),'SOLVE_OPERATION_RELATIONSHIP':([281,],[347,]),'END_PROCEDURE':([333,],[381,]),'PARAMS_A':([334,],[383,]),'VALIDATE_PARAMETER':([337,],[387,]),'POP_STACK_OPERATORS':([353,],[398,]),'SOLVE_OPERATION_ASSIGNMENT':([386,],[428,]),'METHODCALL_A':([387,],[430,]),'CONDITION_A':([389,],[433,]),'SOLVE_OPERATION_CONDITIONAL':([433,],[452,]),'GENERATE_GOTO_CONDITIONAL':([434,],[454,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([438,],[457,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([439,],[459,]),'VALIDATE_METHOD_CALL':([466,],[473,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS','PROGRAM',13,'p_PROGRAM','parser.py',97),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',102),
  ('PROGRAM_A -> METHOD PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',103),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',104),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',109),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',110),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',115),
  ('VARS_A -> SIMPLE','VARS_A',1,'p_VARS_A','parser.py',120),
  ('VARS_A -> LIST','VARS_A',1,'p_VARS_A','parser.py',121),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',126),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',127),
  ('SIMPLE -> id SIMPLE_A','SIMPLE',2,'p_SIMPLE','parser.py',132),
  ('SIMPLE_A -> assign VARCTE_AUX_VARS SIMPLE_B','SIMPLE_A',3,'p_SIMPLE_A','parser.py',137),
  ('SIMPLE_A -> SAVE_VAR SIMPLE_B','SIMPLE_A',2,'p_SIMPLE_A','parser.py',138),
  ('SIMPLE_B -> comma SIMPLE','SIMPLE_B',2,'p_SIMPLE_B','parser.py',143),
  ('SIMPLE_B -> empty','SIMPLE_B',1,'p_SIMPLE_B','parser.py',144),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',149),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',150),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',151),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',152),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',153),
  ('BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',158),
  ('BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',159),
  ('LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A','LIST',6,'p_LIST','parser.py',204),
  ('LIST_A -> comma LIST','LIST_A',2,'p_LIST_A','parser.py',209),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',210),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',215),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',216),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',222),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',223),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',224),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',230),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',231),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',237),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',238),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',239),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',240),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',241),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',242),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',247),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',248),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',254),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',255),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',261),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',262),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',268),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',269),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',275),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',276),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',283),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',284),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',285),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',291),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',292),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',293),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',294),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',299),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',304),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',305),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',310),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',311),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',312),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',313),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',314),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',315),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',316),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',317),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',318),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT',8,'p_ASSIGNMENT','parser.py',323),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',328),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',333),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',334),
  ('ISLIST -> lSqrBracket EXP rSqrBracket','ISLIST',3,'p_ISLIST','parser.py',339),
  ('ISLIST -> empty','ISLIST',1,'p_ISLIST','parser.py',340),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',345),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',346),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',351),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',356),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',357),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',362),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',367),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',368),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',373),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',374),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',375),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',376),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',377),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',382),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',387),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',388),
  ('PARAMS -> TYPE id SAVE_VAR SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',393),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',398),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',399),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',404),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',409),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',10,'p_METHODCALL','parser.py',414),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',419),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',420),
  ('RETURN -> return EXPLOG semicolon','RETURN',3,'p_RETURN','parser.py',425),
  ('BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',430),
  ('BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',431),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',436),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',437),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',438),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',439),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',440),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',441),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',442),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',443),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',444),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',445),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',446),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',447),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',448),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',449),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',450),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',451),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',452),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',453),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',458),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',463),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',468),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',473),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',478),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',483),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',488),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',493),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',498),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',503),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',508),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',509),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',514),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',519),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',520),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',525),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',530),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',531),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',536),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',541),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',542),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',547),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',552),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',553),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',558),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',563),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',564),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',569),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',574),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',575),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',580),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',585),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',586),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',591),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',596),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',597),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',602),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',640),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',657),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',669),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',704),
  ('SAVE_ARRAY -> empty','SAVE_ARRAY',1,'p_SAVE_ARRAY','parser.py',732),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',754),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',765),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',777),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',791),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',806),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',819),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',834),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',863),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',895),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',924),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',955),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',995),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1006),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1085),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1099),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1113),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1126),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1185),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1211),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1240),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1251),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1272),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1288),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1315),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1338),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1355),
]
