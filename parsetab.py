
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and bool colon comma cte_f cte_i cte_str divide else equals float freq func greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program id semicolon PROGRAM_A start BLOCK\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_A\n\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon\n\t\n\tVARS_A : SIMPLE\n\t\t| LIST\n\t\n\tSIMPLE : id SIMPLE_A\n\t\n\tSIMPLE_A : comma SIMPLE\n\t\t\t| empty\n\t\n\tLIST : id lSqrBracket NUMCONST rSqrBracket LIST_A\n\t\n\tLIST_A : LIST\n\t\t| empty\n\t\n\tNUMCONST : id \n\t\t\t| cte_i \n\t\t\t| cte_f\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A\n\t\t| not EXPRESSION EXPLOG_A\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP EXPRESSION_A EXP\n\t\n\tEXPRESSION_A : greater \n\t\t\t\t| lessThan\n\t\t\t\t| greaterEquals\n\t\t\t\t| lessThanEquals\n\t\t\t\t| equals\n\t\t\t\t| notEquals\n\t\n\tEXP : TERM EXP_A\n\t\n\tEXP_A : plus EXP\n\t\t| minus EXP\n\t\t| empty\n\t\n\tTERM : FACTOR TERM_A\n\t\n\tTERM_A : times TERM\n\t\t\t| divide TERM\n\t\t\t| empty\n\t\n\tFACTOR : lParenthesis EXPLOG rParenthesis\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id ISLIST \n\t\t| cte_i \n\t\t| cte_f \n\t\n\tTYPE : int\n\t\t| float \n\t\t| string \n\t\t| bool\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id ISLIST equals EXPRESSION semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP rSqrBracket\n\t\t\t| empty \n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void \n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon\n\t\n\tCONDITION_A : else BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i \n\t\t| cte_f \n\t\t| cte_str \n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon\n\t\n\tPARAMS : EXP PARAMS_A\n\t\n\tPARAMS_A : comma EXP PARAMS_A\n\t\t| empty\n\t\n\tLOOP : while lParenthesis EXPLOG rParenthesis BLOCK\n\t\n\tMETHODCALL : id lParenthesis EXP METHODCALL_A rParenthesis semicolon\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG semicolon\n\t\n\tBOOLEAN : FALSE\n\t\t\t| TRUE\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    '
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,22,84,],[0,-1,-46,]),'id':([2,15,16,17,18,19,20,21,23,24,60,83,86,87,89,90,91,92,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,129,145,146,149,150,151,152,153,154,155,157,158,161,162,192,196,201,217,218,219,222,223,224,225,227,230,233,236,239,242,245,248,251,253,304,305,306,307,344,345,351,354,362,373,374,375,382,383,384,392,397,398,399,400,408,415,],[3,-42,-43,-44,-45,25,-63,-64,37,82,101,101,101,101,101,101,101,136,101,101,166,167,168,101,101,101,172,173,174,175,176,177,178,179,180,181,182,183,184,189,101,101,101,101,-23,-24,-25,-26,-27,-28,101,101,101,101,101,101,101,264,265,266,101,270,271,272,274,276,278,280,282,284,286,288,290,291,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'semicolon':([3,79,80,81,82,84,88,93,94,97,98,100,101,102,103,123,126,144,147,148,156,159,160,163,165,188,189,194,198,208,209,210,211,212,213,214,215,216,253,254,257,259,260,273,275,277,279,281,283,285,287,289,292,293,294,298,300,308,309,310,311,331,371,406,414,420,423,],[4,122,-6,-7,-141,-46,-62,143,-141,-141,-141,-38,-141,-40,-41,-8,-10,-17,-21,-141,-29,-32,-33,-36,-39,-9,-141,256,-61,-19,-20,-18,-22,-30,-31,-34,-35,-37,-141,295,297,-141,301,312,314,316,318,320,322,324,326,328,-11,-12,-13,330,-67,337,338,339,340,-66,376,410,417,422,424,]),'var':([4,6,7,122,295,],[9,9,9,-5,-76,]),'func':([4,6,7,122,295,],[10,10,10,-5,-76,]),'start':([4,5,6,7,8,12,13,122,295,],[-141,11,-141,-141,-4,-2,-3,-5,-76,]),'int':([9,10,],[15,15,]),'float':([9,10,413,],[16,16,416,]),'string':([9,10,220,221,364,390,405,407,],[17,17,267,268,369,394,409,411,]),'bool':([9,10,],[18,18,]),'void':([10,],[21,]),'lCurlyBracket':([11,190,199,203,299,],[23,23,23,23,23,]),'colon':([14,15,16,17,18,],[24,-42,-43,-44,-45,]),'rCurlyBracket':([23,26,27,28,29,30,31,32,33,34,35,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,84,143,256,262,263,297,301,312,314,316,318,320,322,324,326,328,330,337,338,339,340,376,410,417,422,424,],[-141,84,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-46,-84,-57,-80,-58,-81,-68,-114,-117,-120,-123,-126,-129,-132,-135,-138,-65,-110,-111,-112,-113,-105,-107,-108,-109,-106,]),'if':([23,],[38,]),'print':([23,],[39,]),'while':([23,],[40,]),'scan':([23,],[41,]),'return':([23,],[60,]),'ols':([23,],[61,]),'las':([23,],[62,]),'rid':([23,],[63,]),'kmeans':([23,],[64,]),'mbm':([23,],[65,]),'tseries':([23,],[66,]),'mean_abs_err':([23,],[67,]),'mean_sqr_err':([23,],[68,]),'median_abs_err':([23,],[69,]),'mean':([23,],[70,]),'mode':([23,],[71,]),'median':([23,],[72,]),'prob':([23,],[73,]),'freq':([23,],[74,]),'variance':([23,],[75,]),'stddev':([23,],[76,]),'skew':([23,],[77,]),'kurt':([23,],[78,]),'lParenthesis':([25,37,38,39,40,41,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,86,87,89,90,91,95,99,129,145,146,149,150,151,152,153,154,155,157,158,161,162,192,196,201,],[83,86,89,90,91,92,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,99,99,99,99,99,99,99,99,99,99,99,99,-23,-24,-25,-26,-27,-28,99,99,99,99,99,99,99,]),'lSqrBracket':([37,82,101,136,291,],[87,124,87,87,124,]),'equals':([37,85,88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-141,129,-62,154,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'not':([60,89,91,99,145,146,],[95,95,95,95,95,95,]),'cte_i':([60,83,86,87,89,90,91,92,95,99,107,108,109,124,129,145,146,149,150,151,152,153,154,155,157,158,161,162,192,196,201,222,304,305,306,307,344,345,351,354,362,373,374,375,382,383,384,392,397,398,399,400,408,415,],[102,102,102,102,102,102,102,137,102,102,102,102,102,186,102,102,102,102,-23,-24,-25,-26,-27,-28,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'cte_f':([60,83,86,87,89,90,91,92,95,99,107,108,109,124,129,145,146,149,150,151,152,153,154,155,157,158,161,162,192,196,201,222,304,305,306,307,344,345,351,354,362,373,374,375,382,383,384,392,397,398,399,400,408,415,],[103,103,103,103,103,103,103,138,103,103,103,103,103,187,103,103,103,103,-23,-24,-25,-26,-27,-28,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'comma':([82,88,97,98,100,101,102,103,128,130,133,135,136,137,138,139,140,141,142,156,159,160,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,198,207,211,212,213,214,215,216,255,261,264,265,266,267,268,274,276,278,280,282,284,286,288,290,332,333,334,335,336,346,347,348,349,350,356,357,358,359,360,367,368,369,370,377,378,379,380,385,386,387,388,393,394,395,396,401,403,404,409,412,416,],[125,-62,-141,-141,-38,-141,-40,-41,192,196,201,205,-141,-72,-73,-74,-75,-85,-86,-29,-32,-33,-36,-39,217,218,219,220,221,222,223,224,225,227,230,233,236,239,242,245,248,251,125,-61,-71,-22,-30,-31,-34,-35,-37,192,201,303,304,305,306,307,227,230,233,236,239,242,245,248,251,341,342,343,344,345,351,352,353,354,355,361,362,363,364,365,372,373,374,375,381,382,383,384,389,390,391,392,397,398,399,400,405,407,408,413,415,419,]),'else':([84,259,],[-46,299,]),'times':([88,98,100,101,102,103,165,198,216,],[-62,161,-38,-141,-40,-41,-39,-61,-37,]),'divide':([88,98,100,101,102,103,165,198,216,],[-62,162,-38,-141,-40,-41,-39,-61,-37,]),'plus':([88,97,98,100,101,102,103,160,163,165,198,214,215,216,],[-62,157,-141,-38,-141,-40,-41,-33,-36,-39,-61,-34,-35,-37,]),'minus':([88,97,98,100,101,102,103,160,163,165,198,214,215,216,],[-62,158,-141,-38,-141,-40,-41,-33,-36,-39,-61,-34,-35,-37,]),'greater':([88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-62,150,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'lessThan':([88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-62,151,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'greaterEquals':([88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-62,152,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'lessThanEquals':([88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-62,153,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'notEquals':([88,96,97,98,100,101,102,103,156,159,160,163,165,198,212,213,214,215,216,],[-62,155,-141,-141,-38,-141,-40,-41,-29,-32,-33,-36,-39,-61,-30,-31,-34,-35,-37,]),'rParenthesis':([88,94,97,98,100,101,102,103,127,128,130,132,133,134,135,136,137,138,139,140,141,142,144,147,148,156,159,160,163,164,165,175,176,177,178,179,180,181,182,183,191,193,195,197,198,200,202,204,205,206,207,208,209,210,211,212,213,214,215,216,226,228,229,231,232,234,235,237,238,240,241,243,244,246,247,249,250,252,255,258,261,269,270,271,272,274,276,278,280,282,284,286,288,290,296,302,313,315,317,319,321,323,325,327,329,366,402,411,418,421,],[-62,-141,-141,-141,-38,-141,-40,-41,190,-141,-141,199,-141,203,-141,-141,-72,-73,-74,-75,-85,-86,-17,-21,-141,-29,-32,-33,-36,216,-39,-141,-141,-141,-141,-141,-141,-141,-141,-141,-77,-79,257,-83,-61,260,-70,263,-59,-60,-71,-19,-20,-18,-22,-30,-31,-34,-35,-37,273,-116,275,-119,277,-122,279,-125,281,-128,283,-131,285,-134,287,-137,289,-140,-141,-82,-141,308,309,310,311,-141,-141,-141,-141,-141,-141,-141,-141,-141,-78,-69,-115,-118,-121,-124,-127,-130,-133,-136,-139,371,406,414,420,423,]),'rSqrBracket':([88,97,98,100,101,102,103,131,156,159,160,163,165,184,185,186,187,198,212,213,214,215,216,],[-62,-141,-141,-38,-141,-40,-41,198,-29,-32,-33,-36,-39,-14,253,-15,-16,-61,-30,-31,-34,-35,-37,]),'and':([88,94,97,98,100,101,102,103,148,156,159,160,163,165,198,211,212,213,214,215,216,],[-62,145,-141,-141,-38,-141,-40,-41,145,-29,-32,-33,-36,-39,-61,-22,-30,-31,-34,-35,-37,]),'or':([88,94,97,98,100,101,102,103,148,156,159,160,163,165,198,211,212,213,214,215,216,],[-62,146,-141,-141,-38,-141,-40,-41,146,-29,-32,-33,-36,-39,-61,-22,-30,-31,-34,-35,-37,]),'cte_str':([92,],[139,]),'FALSE':([92,303,341,342,343,352,353,355,361,363,365,372,381,389,391,419,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'TRUE':([92,303,341,342,343,352,353,355,361,363,365,372,381,389,391,419,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'PROGRAM_A':([4,6,7,],[5,12,13,]),'VARS':([4,6,7,],[6,6,6,]),'METHOD':([4,6,7,],[7,7,7,]),'empty':([4,6,7,23,37,82,94,97,98,101,128,130,133,135,136,148,175,176,177,178,179,180,181,182,183,189,253,255,259,261,274,276,278,280,282,284,286,288,290,],[8,8,8,28,88,126,147,159,163,88,193,197,202,206,88,147,228,231,234,237,240,243,246,249,252,126,294,193,300,202,228,231,234,237,240,243,246,249,252,]),'TYPE':([9,10,],[14,20,]),'TYPEMETHOD':([10,],[19,]),'BLOCK':([11,190,199,203,299,],[22,254,259,262,331,]),'BLOCK_A':([23,],[26,]),'STATEMENT':([23,],[27,]),'ASSIGNMENT':([23,],[29,]),'CONDITION':([23,],[30,]),'WRITE':([23,],[31,]),'LOOP':([23,],[32,]),'METHODCALL':([23,],[33,]),'READ':([23,],[34,]),'STATMETHODS':([23,],[35,]),'RETURN':([23,],[36,]),'ORDINARY_LEAST_SQUARES':([23,],[42,]),'LASSO':([23,],[43,]),'RIDGE':([23,],[44,]),'K_MEANS':([23,],[45,]),'MINI_BATCH_MEANS':([23,],[46,]),'TIME_SERIES_SPLIT':([23,],[47,]),'MEAN_ABSOLUTE_ERROR':([23,],[48,]),'MEAN_SQUARED_ERROR':([23,],[49,]),'MEDIAN_ABSOLUTE_ERROR':([23,],[50,]),'MEAN':([23,],[51,]),'MODE':([23,],[52,]),'MEDIAN':([23,],[53,]),'PROBABILITY':([23,],[54,]),'FREQUENCY':([23,],[55,]),'VARIANCE':([23,],[56,]),'STANDARD_DEVIATION':([23,],[57,]),'SKEWNESS':([23,],[58,]),'KURTOSI':([23,],[59,]),'VARS_A':([24,],[79,]),'SIMPLE':([24,125,],[80,188,]),'LIST':([24,253,],[81,293,]),'ISLIST':([37,101,136,],[85,165,207,]),'EXPLOG':([60,89,91,99,145,146,],[93,132,134,164,208,209,]),'EXPRESSION':([60,89,90,91,95,99,129,145,146,201,],[94,94,133,94,148,94,194,94,94,261,]),'EXP':([60,83,86,87,89,90,91,95,99,129,145,146,149,157,158,192,196,201,],[96,128,130,131,96,96,96,96,96,96,96,96,211,212,213,255,258,96,]),'TERM':([60,83,86,87,89,90,91,95,99,129,145,146,149,157,158,161,162,192,196,201,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,214,215,97,97,97,]),'FACTOR':([60,83,86,87,89,90,91,95,99,129,145,146,149,157,158,161,162,192,196,201,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'VARCONSTAUX':([60,83,86,87,89,90,91,95,99,107,108,109,129,145,146,149,157,158,161,162,192,196,201,222,304,305,306,307,344,345,351,354,362,373,374,375,382,383,384,392,397,398,399,400,408,415,],[100,100,100,100,100,100,100,100,100,169,170,171,100,100,100,100,100,100,100,100,100,100,100,269,333,334,335,336,349,350,356,359,367,378,379,380,386,387,388,396,401,402,403,404,412,418,]),'SIMPLE_A':([82,189,],[123,123,]),'PARAMS':([83,],[127,]),'VARCTE':([92,],[135,]),'BOOLEAN':([92,303,341,342,343,352,353,355,361,363,365,372,381,389,391,419,],[140,332,346,347,348,357,358,360,366,368,370,377,385,393,395,421,]),'EXPLOG_A':([94,148,],[144,210,]),'EXPRESSION_A':([96,],[149,]),'EXP_A':([97,],[156,]),'TERM_A':([98,],[160,]),'NUMCONST':([124,],[185,]),'PARAMS_A':([128,255,],[191,296,]),'METHODCALL_A':([130,],[195,]),'WRITE_A':([133,261,],[200,302,]),'READ_A':([135,],[204,]),'MEAN_A':([175,274,],[226,313,]),'MODE_A':([176,276,],[229,315,]),'MEDIAN_A':([177,278,],[232,317,]),'PROBABILITY_A':([178,280,],[235,319,]),'FREQUENCY_A':([179,282,],[238,321,]),'VARIANCE_A':([180,284,],[241,323,]),'STANDARD_DEVIATION_A':([181,286,],[244,325,]),'SKEWNESS_A':([182,288,],[247,327,]),'KURTOSI_A':([183,290,],[250,329,]),'LIST_A':([253,],[292,]),'CONDITION_A':([259,],[298,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program id semicolon PROGRAM_A start BLOCK','PROGRAM',6,'p_PROGRAM','parser.py',10),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',15),
  ('PROGRAM_A -> METHOD PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',16),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',17),
  ('VARS -> var TYPE colon VARS_A semicolon','VARS',5,'p_VARS','parser.py',23),
  ('VARS_A -> SIMPLE','VARS_A',1,'p_VARS_A','parser.py',28),
  ('VARS_A -> LIST','VARS_A',1,'p_VARS_A','parser.py',29),
  ('SIMPLE -> id SIMPLE_A','SIMPLE',2,'p_SIMPLE','parser.py',34),
  ('SIMPLE_A -> comma SIMPLE','SIMPLE_A',2,'p_SIMPLE_A','parser.py',39),
  ('SIMPLE_A -> empty','SIMPLE_A',1,'p_SIMPLE_A','parser.py',40),
  ('LIST -> id lSqrBracket NUMCONST rSqrBracket LIST_A','LIST',5,'p_LIST','parser.py',45),
  ('LIST_A -> LIST','LIST_A',1,'p_LIST_A','parser.py',50),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',51),
  ('NUMCONST -> id','NUMCONST',1,'p_NUMCONST','parser.py',58),
  ('NUMCONST -> cte_i','NUMCONST',1,'p_NUMCONST','parser.py',59),
  ('NUMCONST -> cte_f','NUMCONST',1,'p_NUMCONST','parser.py',60),
  ('EXPLOG -> EXPRESSION EXPLOG_A','EXPLOG',2,'p_EXPLOG','parser.py',65),
  ('EXPLOG -> not EXPRESSION EXPLOG_A','EXPLOG',3,'p_EXPLOG','parser.py',66),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',71),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',72),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',73),
  ('EXPRESSION -> EXP EXPRESSION_A EXP','EXPRESSION',3,'p_EXPRESSION','parser.py',78),
  ('EXPRESSION_A -> greater','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',83),
  ('EXPRESSION_A -> lessThan','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',84),
  ('EXPRESSION_A -> greaterEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',85),
  ('EXPRESSION_A -> lessThanEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',86),
  ('EXPRESSION_A -> equals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',87),
  ('EXPRESSION_A -> notEquals','EXPRESSION_A',1,'p_EXPRESSION_A','parser.py',88),
  ('EXP -> TERM EXP_A','EXP',2,'p_EXP','parser.py',93),
  ('EXP_A -> plus EXP','EXP_A',2,'p_EXP_A','parser.py',98),
  ('EXP_A -> minus EXP','EXP_A',2,'p_EXP_A','parser.py',99),
  ('EXP_A -> empty','EXP_A',1,'p_EXP_A','parser.py',100),
  ('TERM -> FACTOR TERM_A','TERM',2,'p_TERM','parser.py',105),
  ('TERM_A -> times TERM','TERM_A',2,'p_TERM_A','parser.py',110),
  ('TERM_A -> divide TERM','TERM_A',2,'p_TERM_A','parser.py',111),
  ('TERM_A -> empty','TERM_A',1,'p_TERM_A','parser.py',112),
  ('FACTOR -> lParenthesis EXPLOG rParenthesis','FACTOR',3,'p_FACTOR','parser.py',117),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',118),
  ('VARCONSTAUX -> id ISLIST','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',124),
  ('VARCONSTAUX -> cte_i','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',125),
  ('VARCONSTAUX -> cte_f','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',126),
  ('TYPE -> int','TYPE',1,'p_TYPE','parser.py',131),
  ('TYPE -> float','TYPE',1,'p_TYPE','parser.py',132),
  ('TYPE -> string','TYPE',1,'p_TYPE','parser.py',133),
  ('TYPE -> bool','TYPE',1,'p_TYPE','parser.py',134),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',139),
  ('BLOCK_A -> STATEMENT','BLOCK_A',1,'p_BLOCK_A','parser.py',144),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',145),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',150),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',151),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',152),
  ('STATEMENT -> LOOP','STATEMENT',1,'p_STATEMENT','parser.py',153),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',154),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',155),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',156),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',157),
  ('ASSIGNMENT -> id ISLIST equals EXPRESSION semicolon','ASSIGNMENT',5,'p_ASSIGNMENT','parser.py',162),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',167),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',172),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',173),
  ('ISLIST -> lSqrBracket EXP rSqrBracket','ISLIST',3,'p_ISLIST','parser.py',178),
  ('ISLIST -> empty','ISLIST',1,'p_ISLIST','parser.py',179),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',184),
  ('TYPEMETHOD -> void','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',185),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis BLOCK CONDITION_A semicolon','CONDITION',7,'p_CONDITION','parser.py',190),
  ('CONDITION_A -> else BLOCK','CONDITION_A',2,'p_CONDITION_A','parser.py',195),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',196),
  ('WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon','WRITE',6,'p_WRITE','parser.py',201),
  ('WRITE_A -> comma EXPRESSION WRITE_A','WRITE_A',3,'p_WRITE_A','parser.py',206),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',207),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',212),
  ('VARCTE -> cte_i','VARCTE',1,'p_VARCTE','parser.py',213),
  ('VARCTE -> cte_f','VARCTE',1,'p_VARCTE','parser.py',214),
  ('VARCTE -> cte_str','VARCTE',1,'p_VARCTE','parser.py',215),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',216),
  ('METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon','METHOD',8,'p_METHOD','parser.py',221),
  ('PARAMS -> EXP PARAMS_A','PARAMS',2,'p_PARAMS','parser.py',226),
  ('PARAMS_A -> comma EXP PARAMS_A','PARAMS_A',3,'p_PARAMS_A','parser.py',231),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',232),
  ('LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK','LOOP',5,'p_LOOP','parser.py',237),
  ('METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon','METHODCALL',6,'p_METHODCALL','parser.py',242),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',247),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',248),
  ('RETURN -> return EXPLOG semicolon','RETURN',3,'p_RETURN','parser.py',253),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','parser.py',258),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','parser.py',259),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',264),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',265),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',266),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',267),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',268),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',269),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',270),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',271),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',272),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',273),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',274),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',275),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',276),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',277),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',278),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',279),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',280),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',281),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',286),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',291),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',296),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',301),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',306),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',311),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',316),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',321),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',326),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',331),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',336),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',337),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',342),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',347),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',348),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',353),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',358),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',359),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',364),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',369),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',370),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',375),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',380),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',381),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',386),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',391),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',392),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',397),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',402),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',403),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',408),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',413),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',414),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',419),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',424),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',425),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',430),
]
