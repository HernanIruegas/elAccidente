
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : id assign VARCTE_AUX_VARS SIMPLE\n\t\t\t| id SAVE_VAR SIMPLE\n\t\t\t| id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A\n\t\t\t| empty\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : comma VARS_A\n\t\t\t| empty\n\t\n\tLIST : lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST\n\t\t\t| empty\n\t\n\tLIST_A : comma VARS_A\n\t\t| empty\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : FALSE SAVE_ASSIGNED_VAR\n\t\t\t\t\t| TRUE SAVE_ASSIGNED_VAR\n\t\n\tVALIDATE_NAME_ARRAY : empty\t\n\t\n\tACUMULATE_R : empty\n\t\n\tCALCULATE_ARRAY : empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST\n\t\t\t| empty SOLVE_OFFSETS\n\t\n\tVALIDATE_INDEX : empty\n\t\n\tSOLVE_OFFSETS : empty\n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG semicolon\n\t\n\tBOOLEAN : FALSE PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| TRUE PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_PARAM : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n    VALIDATE_PARAMETER : empty\n    \n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,50,71,72,144,],[0,-161,-1,-192,-60,]),'void':([2,9,10,11,12,13,15,17,18,19,20,30,44,52,53,54,144,334,386,387,],[3,-161,16,-161,-161,-4,28,-2,-161,-3,-6,-5,-161,-7,-12,-13,-60,-161,-93,-170,]),'globalFunc':([3,4,5,],[-161,6,-163,]),'start':([5,16,29,],[-163,-161,38,]),'colon':([5,21,22,23,24,25,32,33,34,35,],[-163,31,-161,-161,-161,-161,-56,-57,-58,-59,]),'id':([5,22,23,24,25,26,27,28,31,32,33,34,35,37,45,51,64,70,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,129,144,149,150,154,157,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,200,210,212,213,216,217,218,219,220,221,222,227,228,258,259,280,281,282,283,284,285,287,288,290,291,294,295,296,299,300,301,302,304,307,310,313,316,319,322,325,328,337,342,345,346,350,351,352,353,394,406,407,408,409,414,416,418,420,422,424,426,428,430,434,440,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,475,476,478,479,485,486,487,490,498,509,510,511,512,518,519,520,528,533,534,535,536,544,546,551,553,558,560,],[-163,-161,-161,-161,-161,36,-80,-161,40,-56,-57,-58,-59,-81,55,85,40,143,85,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,163,163,-60,163,163,203,163,-161,233,234,235,163,163,163,239,240,241,242,243,244,245,246,247,248,249,250,163,-104,163,163,163,-161,-161,-161,-161,-161,-161,163,-178,-161,163,-37,-38,-39,-40,-41,-42,-161,-161,-161,-161,355,356,357,163,361,362,363,365,367,369,371,373,375,377,379,381,163,163,163,-73,163,163,163,163,-161,163,163,163,163,-134,-137,-140,-143,-146,-149,-152,-155,-158,40,163,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,163,163,-161,-83,-101,-175,163,163,163,163,163,163,-125,163,163,163,163,163,163,163,163,163,-127,163,-128,-129,-126,]),'semicolon':([6,7,8,31,39,40,41,46,48,55,56,57,58,59,60,61,62,63,64,65,128,130,131,132,133,134,135,136,137,138,139,155,156,158,159,160,162,163,164,165,185,186,187,188,189,211,214,215,223,224,225,226,229,230,231,232,253,274,275,276,277,278,279,286,289,293,330,332,333,347,348,349,354,364,366,368,370,372,374,376,378,380,382,384,385,391,395,399,400,401,402,403,404,410,411,412,413,433,434,435,437,438,458,459,461,477,507,542,550,556,559,],[-161,9,-162,-161,44,-161,-11,-161,-164,-161,-161,-161,-161,-161,-24,-161,-161,-9,-161,-15,-20,-161,-8,-161,-177,-161,-161,-25,-165,-26,-14,210,-161,-35,-161,-161,-52,-161,-161,-161,-79,-77,-21,-22,-23,-161,-34,-161,-43,-180,-47,-181,-161,-176,-54,-55,-161,-30,-183,-32,-33,-161,-161,-44,-48,-53,-161,-161,-17,-31,-36,-182,-161,414,416,418,420,422,424,426,428,430,-76,-161,-29,-161,445,-45,-46,-49,-50,-51,-179,454,455,456,457,-10,-161,-19,460,-184,-161,-18,478,-16,512,546,553,558,560,]),'lParenthesis':([8,36,42,85,86,87,88,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,147,148,149,150,151,152,157,161,196,197,200,212,213,216,217,218,219,220,221,222,227,228,258,259,264,280,281,282,283,284,285,287,288,290,291,337,342,345,350,351,352,353,440,],[-162,-161,49,-161,149,150,-161,154,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,161,-161,-172,161,161,200,-188,161,-161,259,-173,161,161,161,161,-161,-161,-161,-161,-161,-161,161,-178,-161,161,345,-37,-38,-39,-40,-41,-42,-161,-161,-161,-161,161,161,161,161,161,161,161,161,]),'lCurlyBracket':([8,38,43,89,152,153,192,254,255,260,339,340,344,397,443,465,466,],[-162,-161,51,-161,-188,51,-161,51,-169,-161,51,-185,-161,51,-161,51,-187,]),'var':([9,11,44,52,53,54,],[14,14,14,-7,-12,-13,]),'func':([9,11,12,18,44,52,53,54,144,334,386,387,],[15,15,15,15,-161,-7,-12,-13,-60,-161,-93,-170,]),'int':([14,15,49,389,],[22,22,22,22,]),'float':([14,15,49,389,549,],[23,23,23,23,552,]),'string':([14,15,49,297,298,389,500,526,541,543,],[24,24,24,358,359,24,505,530,545,547,]),'bool':([14,15,49,389,],[25,25,25,25,]),'assign':([40,85,130,146,148,185,186,195,330,382,],[45,-161,-161,-161,-176,-79,-77,258,-161,-76,]),'comma':([40,46,48,55,56,57,58,59,60,61,62,128,130,132,133,134,135,136,137,138,143,158,159,160,162,163,164,165,185,186,187,188,189,193,194,199,202,203,204,205,206,207,208,209,223,224,225,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,253,256,257,261,262,268,269,270,271,272,273,279,286,289,293,330,332,333,335,336,338,348,349,354,355,356,357,358,359,365,367,369,371,373,375,377,379,381,382,384,385,392,393,396,399,400,401,402,403,404,446,449,450,451,452,453,458,477,480,481,482,483,484,492,493,494,495,496,503,504,505,506,513,514,515,516,521,522,523,524,529,530,531,532,537,539,540,545,548,552,],[-161,64,-164,-161,64,-161,-161,-161,-24,-161,-161,-20,-161,-161,-177,-161,-161,-25,-165,-26,-161,-35,-161,-161,-52,-161,-161,-161,-79,-77,-21,-22,-23,-161,-166,-161,266,-161,-161,-161,-161,-92,-161,-161,-43,-180,-47,-181,-161,-176,-54,-55,294,295,296,297,298,299,300,301,302,304,307,310,313,316,319,322,325,328,-161,-161,-171,342,-191,-88,-89,-90,-91,-105,-106,-161,-44,-48,-53,-161,-161,-17,389,-167,-161,-36,-182,-161,405,406,407,408,409,304,307,310,313,316,319,322,325,328,-76,434,-29,440,-174,-161,-45,-46,-49,-50,-51,-179,342,472,473,474,475,476,-161,-16,487,488,489,490,491,497,498,499,500,501,508,509,510,511,517,518,519,520,525,526,527,528,533,534,535,536,541,543,544,549,551,555,]),'lSqrBracket':([40,47,48,55,85,146,148,163,203,229,230,253,330,458,],[-161,66,-27,129,-161,129,-176,-161,129,129,-176,331,129,331,]),'cte_i':([45,66,109,129,149,150,154,157,161,169,170,171,200,212,213,216,217,218,219,220,221,222,227,228,258,259,280,281,282,283,284,285,287,288,290,291,299,331,337,342,345,350,351,352,353,406,407,408,409,440,475,476,487,490,498,509,510,511,518,519,520,528,533,534,535,536,544,551,],[57,140,164,164,164,164,204,164,-161,164,164,164,164,164,164,164,-161,-161,-161,-161,-161,-161,164,-178,-161,164,-37,-38,-39,-40,-41,-42,-161,-161,-161,-161,164,383,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'cte_f':([45,109,129,149,150,154,157,161,169,170,171,200,212,213,216,217,218,219,220,221,222,227,228,258,259,280,281,282,283,284,285,287,288,290,291,299,337,342,345,350,351,352,353,406,407,408,409,440,475,476,487,490,498,509,510,511,518,519,520,528,533,534,535,536,544,551,],[58,165,165,165,165,205,165,-161,165,165,165,165,165,165,165,-161,-161,-161,-161,-161,-161,165,-178,-161,165,-37,-38,-39,-40,-41,-42,-161,-161,-161,-161,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'cte_str':([45,154,],[59,206,]),'FALSE':([45,154,405,472,473,474,488,489,491,497,499,501,508,517,525,527,555,],[61,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'TRUE':([45,154,405,472,473,474,488,489,491,497,499,501,508,517,525,527,555,],[62,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'rParenthesis':([49,67,68,69,130,133,141,142,143,156,158,159,160,162,163,164,165,185,186,193,194,198,199,202,203,204,205,206,207,208,209,211,214,215,223,224,225,226,229,230,231,232,242,243,244,245,246,247,248,249,250,256,257,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,289,292,293,303,305,306,308,309,311,312,314,315,317,318,320,321,323,324,326,327,329,330,335,336,338,341,343,347,348,349,354,360,361,362,363,365,367,369,371,373,375,377,379,381,382,388,390,392,393,396,398,399,400,401,402,403,404,415,417,419,421,423,425,427,429,431,436,439,441,446,462,467,502,538,547,554,557,],[-161,-161,-94,-95,-161,-177,192,-168,-161,-161,-35,-161,-161,-52,-161,-161,-161,-79,-77,-161,-166,260,-161,-161,-161,-161,-161,-161,-92,-161,-161,-161,-34,-161,-43,-180,-47,-181,-161,-176,-54,-55,-161,-161,-161,-161,-161,-161,-161,-161,-161,-161,-171,-161,-191,344,346,-74,-75,-88,-89,-90,-91,-105,-106,-30,-183,-32,-33,-161,-161,-44,-48,354,-53,364,-136,366,-139,368,-142,370,-145,372,-148,374,-151,376,-154,378,-157,380,-160,-161,-161,-167,-161,395,-87,-31,-36,-182,-161,410,411,412,413,-161,-161,-161,-161,-161,-161,-161,-161,-161,-76,-96,-98,-161,-174,-161,448,-45,-46,-49,-50,-51,-179,-135,-138,-141,-144,-147,-150,-153,-156,-159,-97,461,-103,-161,-102,-86,507,542,550,556,559,]),'rCurlyBracket':([51,73,74,75,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,145,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[-161,144,-161,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-61,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'if':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[86,86,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'print':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[87,87,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'while':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,201,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[88,88,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,264,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'do':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[89,89,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'scan':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[90,90,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'return':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[109,109,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'ols':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[110,110,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'las':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[111,111,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'rid':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[112,112,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'kmeans':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[113,113,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'mbm':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[114,114,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'tseries':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[115,115,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'mean_abs_err':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[116,116,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'mean_sqr_err':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[117,117,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'median_abs_err':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[118,118,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'mean':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[119,119,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'mode':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[120,120,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'median':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[121,121,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'prob':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[122,122,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'freq':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[123,123,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'variance':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[124,124,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'stddev':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[125,125,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'skew':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[126,126,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'kurt':([51,74,76,77,78,79,80,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,144,210,346,394,414,416,418,420,422,424,426,428,430,442,444,445,447,448,454,455,456,457,460,463,464,468,469,470,471,478,479,485,486,512,546,553,558,560,],[127,127,-63,-64,-65,-66,-67,-68,-69,-70,-71,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-60,-104,-73,-161,-134,-137,-140,-143,-146,-149,-152,-155,-158,-161,-84,-85,-161,-161,-130,-131,-132,-133,-72,-82,-186,-99,-189,-100,-190,-161,-83,-101,-175,-125,-127,-128,-129,-126,]),'not':([109,149,161,200,212,213,227,228,258,337,345,],[157,157,-161,157,157,157,157,-178,-161,157,157,]),'times':([130,133,160,162,163,164,165,185,186,225,226,229,230,231,232,293,330,354,382,403,404,],[-161,-177,-161,-52,-161,-161,-161,-79,-77,290,-181,-161,-176,-54,-55,-53,-161,-161,-76,-51,-179,]),'divide':([130,133,160,162,163,164,165,185,186,225,226,229,230,231,232,293,330,354,382,403,404,],[-161,-177,-161,-52,-161,-161,-161,-79,-77,291,-181,-161,-176,-54,-55,-53,-161,-161,-76,-51,-179,]),'plus':([130,133,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,289,293,330,354,382,401,402,403,404,],[-161,-177,-161,-161,-52,-161,-161,-161,-79,-77,287,-180,-47,-181,-161,-176,-54,-55,-48,-53,-161,-161,-76,-49,-50,-51,-179,]),'minus':([130,133,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,289,293,330,354,382,401,402,403,404,],[-161,-177,-161,-161,-52,-161,-161,-161,-79,-77,288,-180,-47,-181,-161,-176,-54,-55,-48,-53,-161,-161,-76,-49,-50,-51,-179,]),'greater':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,217,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'lessThan':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,218,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'greaterEquals':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,219,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'lessThanEquals':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,220,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'equals':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,221,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'notEquals':([130,133,158,159,160,162,163,164,165,185,186,223,224,225,226,229,230,231,232,286,289,293,330,354,382,399,400,401,402,403,404,],[-161,-177,222,-161,-161,-52,-161,-161,-161,-79,-77,-43,-180,-47,-181,-161,-176,-54,-55,-44,-48,-53,-161,-161,-76,-45,-46,-49,-50,-51,-179,]),'and':([130,133,156,158,159,160,162,163,164,165,185,186,215,223,224,225,226,229,230,231,232,279,286,289,293,330,348,349,354,382,399,400,401,402,403,404,],[-161,-177,212,-35,-161,-161,-52,-161,-161,-161,-79,-77,212,-43,-180,-47,-181,-161,-176,-54,-55,-161,-44,-48,-53,-161,-36,-182,-161,-76,-45,-46,-49,-50,-51,-179,]),'or':([130,133,156,158,159,160,162,163,164,165,185,186,215,223,224,225,226,229,230,231,232,279,286,289,293,330,348,349,354,382,399,400,401,402,403,404,],[-161,-177,213,-35,-161,-161,-52,-161,-161,-161,-79,-77,213,-43,-180,-47,-181,-161,-176,-54,-55,-161,-44,-48,-53,-161,-36,-182,-161,-76,-45,-46,-49,-50,-51,-179,]),'rSqrBracket':([130,133,140,159,160,162,163,164,165,184,185,186,190,191,223,224,225,226,229,230,231,232,251,252,286,289,293,330,354,382,383,399,400,401,402,403,404,432,],[-161,-177,-161,-161,-161,-52,-161,-161,-161,-161,-79,-77,253,-28,-43,-180,-47,-181,-161,-176,-54,-55,330,-78,-44,-48,-53,-161,-161,-76,-161,-45,-46,-49,-50,-51,-179,458,]),'else':([144,394,],[-60,443,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,16,22,23,24,25,28,],[4,29,32,33,34,35,37,]),'empty':([3,6,9,11,12,16,18,22,23,24,25,28,31,36,38,40,44,46,49,50,51,55,56,57,58,59,61,62,64,67,74,85,88,89,130,132,134,135,140,143,146,147,156,159,160,161,163,164,165,184,192,193,199,202,203,204,205,206,208,209,211,215,217,218,219,220,221,222,229,242,243,244,245,246,247,248,249,250,253,256,258,260,261,278,279,287,288,290,291,330,332,334,335,338,344,354,365,367,369,371,373,375,377,379,381,383,384,391,392,394,396,434,442,443,446,447,448,458,478,],[5,8,13,13,20,5,20,5,5,5,5,5,41,8,8,48,54,65,69,72,75,130,65,133,133,133,137,137,41,142,75,148,152,152,185,137,137,137,191,194,130,197,214,224,226,228,230,133,133,252,255,257,262,267,130,133,133,133,133,133,275,214,228,228,228,228,228,228,130,305,308,311,314,317,320,323,326,329,333,336,228,340,343,275,349,228,228,228,228,130,385,387,390,393,340,404,305,308,311,314,317,320,323,326,329,191,435,438,441,444,262,41,464,466,343,469,471,333,486,]),'START_FUNCTION':([6,36,38,],[7,42,43,]),'PROGRAM_A':([9,11,],[10,17,]),'VARS':([9,11,44,],[11,11,53,]),'METHOD':([9,11,12,18,],[12,12,18,18,]),'PROGRAM_B':([12,18,],[19,30,]),'TYPE':([14,15,49,389,],[21,27,70,70,]),'TYPEMETHOD':([15,],[26,]),'VARS_A':([31,64,434,],[39,139,459,]),'SAVE_VAR':([40,],[46,]),'VALIDATE_NAME_ARRAY':([40,],[47,]),'BLOCK':([43,153,254,339,397,465,],[50,201,334,394,447,479,]),'VARS_B':([44,],[52,]),'VARCTE_AUX_VARS':([45,],[56,]),'BOOLEAN_AUX_VARS':([45,],[60,]),'SIMPLE':([46,56,],[63,131,]),'METHOD_A':([49,],[67,]),'PARAMS':([49,389,],[68,436,]),'PRINTQUADS':([50,],[71,]),'BLOCK_A':([51,74,],[73,145,]),'STATEMENT':([51,74,],[74,74,]),'ASSIGNMENT':([51,74,],[76,76,]),'CONDITION':([51,74,],[77,77,]),'WRITE':([51,74,],[78,78,]),'PRE_CONDITIONAL_LOOP':([51,74,],[79,79,]),'POST_CONDITIONAL_LOOP':([51,74,],[80,80,]),'METHODCALL':([51,74,],[81,81,]),'READ':([51,74,],[82,82,]),'STATMETHODS':([51,74,],[83,83,]),'RETURN':([51,74,],[84,84,]),'ORDINARY_LEAST_SQUARES':([51,74,],[91,91,]),'LASSO':([51,74,],[92,92,]),'RIDGE':([51,74,],[93,93,]),'K_MEANS':([51,74,],[94,94,]),'MINI_BATCH_MEANS':([51,74,],[95,95,]),'TIME_SERIES_SPLIT':([51,74,],[96,96,]),'MEAN_ABSOLUTE_ERROR':([51,74,],[97,97,]),'MEAN_SQUARED_ERROR':([51,74,],[98,98,]),'MEDIAN_ABSOLUTE_ERROR':([51,74,],[99,99,]),'MEAN':([51,74,],[100,100,]),'MODE':([51,74,],[101,101,]),'MEDIAN':([51,74,],[102,102,]),'PROBABILITY':([51,74,],[103,103,]),'FREQUENCY':([51,74,],[104,104,]),'VARIANCE':([51,74,],[105,105,]),'STANDARD_DEVIATION':([51,74,],[106,106,]),'SKEWNESS':([51,74,],[107,107,]),'KURTOSI':([51,74,],[108,108,]),'ISLIST':([55,146,203,229,330,],[128,195,268,293,382,]),'PUSH_STACK_OPERANDS_CONSTANT':([57,58,59,164,165,204,205,206,208,209,],[132,134,135,231,232,269,270,271,272,273,]),'SAVE_ASSIGNED_VAR':([61,62,132,134,135,],[136,138,187,188,189,]),'SAVE_COUNTER_PARAM':([67,],[141,]),'PUSH_STACK_OPERANDS':([85,163,],[146,229,]),'VALIDATE_FUNCTION_NAME':([85,],[147,]),'PUSH_STACK_JUMPS':([88,89,],[151,153,]),'EXPLOG':([109,149,200,212,213,227,337,345,],[155,198,263,276,277,292,391,398,]),'EXPRESSION':([109,149,150,157,200,212,213,227,337,342,345,],[156,156,199,215,156,156,156,156,156,396,156,]),'EXP':([109,129,149,150,157,200,212,213,216,227,259,337,342,345,350,351,440,],[158,184,158,158,158,158,158,158,279,158,338,158,158,158,399,400,462,]),'TERM':([109,129,149,150,157,200,212,213,216,227,259,337,342,345,350,351,352,353,440,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,401,402,159,]),'FACTOR':([109,129,149,150,157,200,212,213,216,227,259,337,342,345,350,351,352,353,440,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'VARCONSTAUX':([109,129,149,150,157,169,170,171,200,212,213,216,227,259,299,337,342,345,350,351,352,353,406,407,408,409,440,475,476,487,490,498,509,510,511,518,519,520,528,533,534,535,536,544,551,],[162,162,162,162,162,236,237,238,162,162,162,162,162,162,360,162,162,162,162,162,162,162,450,451,452,453,162,483,484,492,495,503,514,515,516,522,523,524,532,537,538,539,540,548,554,]),'SOLVE_OFFSETS':([130,],[186,]),'ACUMULATE_R':([140,383,],[190,432,]),'SAVE_PARAM':([143,],[193,]),'ERA':([147,],[196,]),'VARCTE':([154,],[202,]),'BOOLEAN':([154,405,472,473,474,488,489,491,497,499,501,508,517,525,527,555,],[207,449,480,481,482,493,494,496,502,504,506,513,521,529,531,557,]),'EXPLOG_A':([156,215,],[211,278,]),'EXPRESSION_A':([158,],[216,]),'SOLVE_OPERATION_SUM_MINUS':([159,],[223,]),'SOLVE_OPERATION_TIMES_DIVIDE':([160,],[225,]),'PUSH_STACK_OPERATORS':([161,217,218,219,220,221,222,258,287,288,290,291,],[227,280,281,282,283,284,285,337,350,351,352,353,]),'VALIDATE_INDEX':([184,],[251,]),'SAVE_COUNTER_QUAD':([192,],[254,]),'SAVE_PARAM_TYPE':([193,],[256,]),'GENERATE_QUAD_PRINT':([199,396,],[261,446,]),'READ_A':([202,],[265,]),'SOLVE_OPERATION_LOGIC':([211,278,],[274,347,]),'EXP_A':([223,],[286,]),'TERM_A':([225,],[289,]),'MEAN_A':([242,365,],[303,415,]),'MODE_A':([243,367,],[306,417,]),'MEDIAN_A':([244,369,],[309,419,]),'PROBABILITY_A':([245,371,],[312,421,]),'FREQUENCY_A':([246,373,],[315,423,]),'VARIANCE_A':([247,375,],[318,425,]),'STANDARD_DEVIATION_A':([248,377,],[321,427,]),'SKEWNESS_A':([249,379,],[324,429,]),'KURTOSI_A':([250,381,],[327,431,]),'LIST':([253,458,],[332,477,]),'INCREMENT_PARAM_COUNTER':([256,],[335,]),'GENERATE_GOTOF_CONDITIONAL':([260,344,],[339,397,]),'WRITE_A':([261,446,],[341,467,]),'SOLVE_OPERATION_RELATIONSHIP':([279,],[348,]),'CALCULATE_ARRAY':([332,],[384,]),'END_PROCEDURE':([334,],[386,]),'PARAMS_A':([335,],[388,]),'VALIDATE_PARAMETER':([338,],[392,]),'POP_STACK_OPERATORS':([354,],[403,]),'LIST_A':([384,],[433,]),'SOLVE_OPERATION_ASSIGNMENT':([391,],[437,]),'METHODCALL_A':([392,],[439,]),'CONDITION_A':([394,],[442,]),'SOLVE_OPERATION_CONDITIONAL':([442,],[463,]),'GENERATE_GOTO_CONDITIONAL':([443,],[465,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([447,],[468,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([448,],[470,]),'VALIDATE_METHOD_CALL':([478,],[485,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION BLOCK PRINTQUADS','PROGRAM',13,'p_PROGRAM','parser.py',99),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',104),
  ('PROGRAM_A -> METHOD PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',105),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',106),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',111),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',112),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',117),
  ('VARS_A -> id assign VARCTE_AUX_VARS SIMPLE','VARS_A',4,'p_VARS_A','parser.py',122),
  ('VARS_A -> id SAVE_VAR SIMPLE','VARS_A',3,'p_VARS_A','parser.py',123),
  ('VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A','VARS_A',9,'p_VARS_A','parser.py',124),
  ('VARS_A -> empty','VARS_A',1,'p_VARS_A','parser.py',125),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',130),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',131),
  ('SIMPLE -> comma VARS_A','SIMPLE',2,'p_SIMPLE','parser.py',136),
  ('SIMPLE -> empty','SIMPLE',1,'p_SIMPLE','parser.py',137),
  ('LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST','LIST',5,'p_LIST','parser.py',142),
  ('LIST -> empty','LIST',1,'p_LIST','parser.py',143),
  ('LIST_A -> comma VARS_A','LIST_A',2,'p_LIST_A','parser.py',148),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',149),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',156),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',157),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',158),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',159),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',160),
  ('BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',166),
  ('BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',167),
  ('VALIDATE_NAME_ARRAY -> empty','VALIDATE_NAME_ARRAY',1,'p_VALIDATE_NAME_ARRAY','parser.py',179),
  ('ACUMULATE_R -> empty','ACUMULATE_R',1,'p_ACUMULATE_R','parser.py',202),
  ('CALCULATE_ARRAY -> empty','CALCULATE_ARRAY',1,'p_CALCULATE_ARRAY','parser.py',232),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',370),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',371),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',376),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',377),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',378),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',383),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',384),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',389),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',390),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',391),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',392),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',393),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',394),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',399),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',400),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',405),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',406),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',411),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',412),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',417),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',418),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',423),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',424),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',430),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',431),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',432),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',437),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',438),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',439),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',440),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',445),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',450),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',451),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',456),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',457),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',458),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',459),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',460),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',461),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',462),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',463),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',464),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT',8,'p_ASSIGNMENT','parser.py',469),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',474),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',479),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',480),
  ('ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST','ISLIST',5,'p_ISLIST','parser.py',490),
  ('ISLIST -> empty SOLVE_OFFSETS','ISLIST',2,'p_ISLIST','parser.py',491),
  ('VALIDATE_INDEX -> empty','VALIDATE_INDEX',1,'p_VALIDATE_INDEX','parser.py',500),
  ('SOLVE_OFFSETS -> empty','SOLVE_OFFSETS',1,'p_SOLVE_OFFSETS','parser.py',560),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',611),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',612),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',617),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',622),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',623),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',628),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',633),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',634),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',639),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',640),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',641),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',642),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',643),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',648),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',653),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',654),
  ('PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',659),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',664),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',665),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',670),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',675),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',10,'p_METHODCALL','parser.py',680),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',685),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',686),
  ('RETURN -> return EXPLOG semicolon','RETURN',3,'p_RETURN','parser.py',691),
  ('BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',696),
  ('BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',697),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',702),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',703),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',704),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',705),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',706),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',707),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',708),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',709),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',710),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',711),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',712),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',713),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',714),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',715),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',716),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',717),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',718),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',719),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',724),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',729),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',734),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',739),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',744),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',749),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',754),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',759),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',764),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',769),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',774),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',775),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',780),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',785),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',786),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',791),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',796),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',797),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',802),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',807),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',808),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',813),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',818),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',819),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',824),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',829),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',830),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',835),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',840),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',841),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',846),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',851),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',852),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',857),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',862),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',863),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',868),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',909),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',926),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',936),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',959),
  ('SAVE_PARAM -> empty','SAVE_PARAM',1,'p_SAVE_PARAM','parser.py',1000),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',1080),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',1091),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',1103),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',1117),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',1132),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',1144),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',1160),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',1182),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',1209),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',1238),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',1274),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',1310),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1320),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1392),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1405),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1418),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1431),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1476),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1502),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1528),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1539),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1560),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1576),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1597),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1620),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1637),
]
