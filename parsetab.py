
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS\n\t\n\tGENERATE_GOTO_MAIN : empty\n\t\n\tFILL_GOTO_MAIN : empty\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : id assign VARCTE_AUX_VARS SIMPLE\n\t\t\t| id SAVE_VAR SIMPLE\n\t\t\t| id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A\n\t\t\t| empty\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : comma VARS_A\n\t\t\t| empty\n\t\n\tLIST : lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST\n\t\t\t| empty\n\t\n\tLIST_A : comma VARS_A\n\t\t| empty\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : FALSE SAVE_ASSIGNED_VAR\n\t\t\t\t\t| TRUE SAVE_ASSIGNED_VAR\n\t\n\tVALIDATE_NAME_ARRAY : empty\t\n\t\n\tACUMULATE_R : empty\n\t\n\tCALCULATE_ARRAY : empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A\n\t\n\tASSIGNMENT_A : EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon\n\t\t\t\t| METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX\n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tp_SOLVE_OPERATION_ASSIGNMENT_AUX : empty\n\t\n\tISLIST : lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST\n\t\t\t| empty SOLVE_OFFSETS\n\t\n\tVALIDATE_INDEX : empty\n\t\n\tSOLVE_OFFSETS : empty\n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : EXP VALIDATE_PARAMETER \n\t\t\t\t\t| empty\n\t\n\tMETHODCALL_B : comma EXP VALIDATE_PARAMETER METHODCALL_B\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG GENERATE_QUAD_RETURN semicolon\n\t\n\tGENERATE_QUAD_RETURN : empty\n\t\n\tBOOLEAN : FALSE PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| TRUE PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_PARAM : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n\tVALIDATE_PARAMETER : empty\n\t\n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,89,109,110,183,184,185,],[0,-169,-169,-178,-1,-200,-62,]),'void':([2,9,10,11,12,13,15,16,17,18,19,20,21,31,45,53,54,55,110,185,230,289,],[3,-169,-169,-169,-169,-6,29,30,-2,-4,-169,-5,-8,-7,-169,-9,-14,-15,-178,-62,-169,-98,]),'globalFunc':([3,4,5,],[-169,6,-171,]),'colon':([5,22,23,24,25,26,33,34,35,36,],[-171,32,-169,-169,-169,-169,-58,-59,-60,-61,]),'id':([5,23,24,25,26,27,28,29,32,33,34,35,36,38,46,65,71,74,90,94,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,172,173,185,190,191,195,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,220,221,223,224,238,251,252,255,256,257,258,259,260,261,281,282,283,284,293,294,309,316,317,318,319,320,321,322,323,324,327,328,329,330,332,335,338,341,344,347,350,353,356,366,369,376,379,380,414,416,418,422,428,429,430,431,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,493,494,495,496,498,504,507,515,526,527,528,529,535,536,537,545,550,551,552,553,561,563,568,570,575,577,],[-171,-169,-169,-169,-169,37,-85,-169,41,-58,-59,-60,-61,-86,56,41,88,96,123,-169,123,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,96,96,-186,-62,96,96,241,96,262,263,264,96,96,96,268,269,270,271,272,273,274,275,276,277,278,279,-169,-169,-169,-169,96,96,96,96,-169,-169,-169,-169,-169,-169,96,96,96,96,-169,96,-111,-39,-40,-41,-42,-43,-44,384,385,386,96,390,391,392,394,396,398,400,402,404,406,408,410,41,413,96,96,-77,-74,-169,96,-169,96,96,96,96,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,96,96,-106,-183,-88,96,96,96,96,96,96,-133,96,96,96,96,96,96,96,96,96,-135,96,-136,-137,-134,]),'start':([5,30,39,],[-171,-169,44,]),'semicolon':([6,7,8,32,40,41,42,47,49,56,57,58,59,60,61,62,63,64,65,66,73,75,76,77,78,79,80,81,82,83,84,92,93,95,96,97,98,99,100,101,102,103,168,169,170,171,174,175,176,177,178,196,197,199,218,219,222,226,228,229,248,249,250,253,254,280,285,287,288,310,311,312,313,314,315,358,359,360,361,362,363,365,366,367,381,382,383,393,395,397,399,401,403,405,407,409,411,412,413,415,423,432,433,434,435,454,455,456,457,460,524,559,567,573,576,],[-169,9,-170,-169,45,-169,-13,-169,-172,-169,-169,-169,-169,-169,-26,-169,-169,-11,-169,-17,-22,-169,-10,-169,-185,-169,-169,-27,-173,-28,-16,-169,-169,-54,-169,-169,-169,-84,-82,-23,-24,-25,-45,-188,-49,-189,-169,-184,-56,-57,-169,-169,-169,-37,-169,-46,-50,-55,-169,-19,309,-112,-169,-36,-169,-81,-169,-169,-31,-32,-191,-34,-35,-169,-169,-47,-48,-51,-52,-53,-187,-12,-169,-21,-33,-38,-190,436,438,440,442,444,446,448,450,452,-169,-20,-169,-169,465,474,475,476,477,-18,-184,478,-192,479,529,563,570,575,577,]),'lParenthesis':([8,37,43,74,94,123,124,125,126,128,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,172,173,188,189,190,191,192,193,198,220,221,223,224,234,235,238,251,252,255,256,257,258,259,260,261,281,282,283,284,293,294,299,316,317,318,319,320,321,369,376,379,413,418,455,],[-170,-169,50,94,-169,-169,190,191,-169,195,94,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,94,-186,-169,-180,94,94,238,-196,94,-169,-169,-169,-169,294,-181,94,94,94,94,-169,-169,-169,-169,-169,-169,94,94,94,94,-169,94,379,-39,-40,-41,-42,-43,-44,94,94,94,-169,94,-180,]),'lCurlyBracket':([8,44,51,52,72,106,127,179,180,193,194,295,373,374,378,425,463,483,484,],[-170,-169,-169,-3,90,-169,-169,90,-177,-196,90,-169,90,-193,-169,90,-169,90,-195,]),'var':([9,11,45,53,54,55,],[14,14,14,-9,-14,-15,]),'func':([9,11,12,19,45,53,54,55,110,185,230,289,],[15,15,15,15,-169,-9,-14,-15,-178,-62,-169,-98,]),'int':([14,15,50,291,],[23,23,23,23,]),'float':([14,15,50,291,566,],[24,24,24,24,569,]),'string':([14,15,50,291,325,326,517,543,558,560,],[25,25,25,25,387,388,522,547,562,564,]),'bool':([14,15,50,291,],[26,26,26,26,]),'assign':([41,75,99,100,123,187,189,218,233,280,],[46,-169,-84,-82,-169,-169,-184,-169,293,-81,]),'comma':([41,47,49,56,57,58,59,60,61,62,63,73,75,77,78,79,80,81,82,83,88,92,93,95,96,97,98,99,100,101,102,103,107,108,168,169,170,171,174,175,176,177,178,181,182,199,218,219,222,226,228,229,231,232,237,240,241,242,243,244,245,246,247,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,285,287,288,294,296,297,303,304,305,306,307,308,315,358,359,360,361,362,363,370,371,372,382,383,384,385,386,387,388,394,396,398,400,402,404,406,408,410,411,420,421,424,454,461,466,469,470,471,472,473,480,499,500,501,502,503,509,510,511,512,513,520,521,522,523,530,531,532,533,538,539,540,541,546,547,548,549,554,556,557,562,565,569,],[-169,65,-172,-169,65,-169,-169,-169,-26,-169,-169,-22,-169,-169,-185,-169,-169,-27,-173,-28,-169,-169,-169,-54,-169,-169,-169,-84,-82,-23,-24,-25,-169,-174,-45,-188,-49,-189,-169,-184,-56,-57,-169,-169,-179,-37,-169,-46,-50,-55,-169,-19,291,-175,-169,301,-169,-169,-169,-169,-97,-169,-169,322,323,324,325,326,327,328,329,330,332,335,338,341,344,347,350,353,356,-81,-169,366,-31,-169,376,-199,-93,-94,-95,-96,-113,-114,-169,-47,-48,-51,-52,-53,-187,418,-169,-108,-38,-190,427,428,429,430,431,332,335,338,341,344,347,350,353,356,-169,-107,-182,-169,-18,-169,376,490,491,492,493,494,418,504,505,506,507,508,514,515,516,517,518,525,526,527,528,534,535,536,537,542,543,544,545,550,551,552,553,558,560,561,566,568,572,]),'lSqrBracket':([41,48,49,56,96,123,174,175,178,187,189,218,241,411,413,455,],[-169,67,-29,74,-169,-169,74,-184,227,74,-184,74,74,227,-169,-184,]),'cte_i':([46,67,74,94,147,172,173,190,191,195,198,203,204,205,220,221,223,224,227,238,251,252,255,256,257,258,259,260,261,281,282,283,284,293,294,316,317,318,319,320,321,327,369,376,379,418,428,429,430,431,493,494,504,507,515,526,527,528,535,536,537,545,550,551,552,553,561,568,],[58,85,97,-169,97,97,-186,97,97,242,97,97,97,97,-169,-169,-169,-169,286,97,97,97,97,-169,-169,-169,-169,-169,-169,97,97,97,97,-169,97,-39,-40,-41,-42,-43,-44,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cte_f':([46,74,94,147,172,173,190,191,195,198,203,204,205,220,221,223,224,238,251,252,255,256,257,258,259,260,261,281,282,283,284,293,294,316,317,318,319,320,321,327,369,376,379,418,428,429,430,431,493,494,504,507,515,526,527,528,535,536,537,545,550,551,552,553,561,568,],[59,98,-169,98,98,-186,98,98,243,98,98,98,98,-169,-169,-169,-169,98,98,98,98,-169,-169,-169,-169,-169,-169,98,98,98,98,-169,98,-39,-40,-41,-42,-43,-44,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'cte_str':([46,195,],[60,244,]),'FALSE':([46,195,427,490,491,492,505,506,508,514,516,518,525,534,542,544,572,],[62,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,]),'TRUE':([46,195,427,490,491,492,505,506,508,514,516,518,525,534,542,544,572,],[63,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,]),'rParenthesis':([50,68,69,70,75,78,86,87,88,92,93,95,96,97,98,99,100,107,108,168,169,170,171,174,175,176,177,181,182,197,199,218,219,222,225,226,231,232,236,237,240,241,242,243,244,245,246,247,250,253,254,271,272,273,274,275,276,277,278,279,280,285,290,292,294,296,297,298,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,331,333,334,336,337,339,340,342,343,345,346,348,349,351,352,354,355,357,358,359,360,361,362,363,368,370,371,372,375,377,381,382,383,389,390,391,392,394,396,398,400,402,404,406,408,410,417,419,420,421,424,426,437,439,441,443,445,447,449,451,453,461,466,480,485,497,519,555,564,571,574,],[-169,-169,-99,-100,-169,-185,106,-176,-169,-169,-169,-54,-169,-169,-169,-84,-82,-169,-174,-45,-188,-49,-189,-169,-184,-56,-57,-169,-179,-169,-37,-169,-46,-50,285,-55,-169,-175,295,-169,-169,-169,-169,-169,-169,-97,-169,-169,-169,-36,-169,-169,-169,-169,-169,-169,-169,-169,-169,-169,-81,-169,-101,-103,-169,-169,-199,378,380,-78,-79,-93,-94,-95,-96,-113,-114,-32,-191,-34,-35,-169,-169,393,-144,395,-147,397,-150,399,-153,401,-156,403,-159,405,-162,407,-165,409,-168,-47,-48,-51,-52,-53,-187,-102,-169,-169,-108,423,-92,-33,-38,-190,432,433,434,435,-169,-169,-169,-169,-169,-169,-169,-169,-169,460,-110,-107,-182,-169,468,-143,-146,-149,-152,-155,-158,-161,-164,-167,-169,-169,-169,-91,-109,524,559,567,573,576,]),'times':([75,78,93,95,96,97,98,99,100,170,171,174,175,176,177,218,226,280,285,362,363,413,455,],[-169,-185,-169,-54,-169,-169,-169,-84,-82,223,-189,-169,-184,-56,-57,-169,-55,-81,-169,-53,-187,-169,-184,]),'divide':([75,78,93,95,96,97,98,99,100,170,171,174,175,176,177,218,226,280,285,362,363,413,455,],[-169,-185,-169,-54,-169,-169,-169,-84,-82,224,-189,-169,-184,-56,-57,-169,-55,-81,-169,-53,-187,-169,-184,]),'plus':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,218,222,226,280,285,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,220,-188,-49,-189,-169,-184,-56,-57,-169,-50,-55,-81,-169,-51,-52,-53,-187,-169,-184,]),'minus':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,218,222,226,280,285,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,221,-188,-49,-189,-169,-184,-56,-57,-169,-50,-55,-81,-169,-51,-52,-53,-187,-169,-184,]),'rSqrBracket':([75,78,85,91,92,93,95,96,97,98,99,100,104,105,166,167,168,169,170,171,174,175,176,177,218,219,222,226,280,285,286,358,359,360,361,362,363,364,],[-169,-185,-169,-169,-169,-169,-54,-169,-169,-169,-84,-82,178,-30,218,-83,-45,-188,-49,-189,-169,-184,-56,-57,-169,-46,-50,-55,-81,-169,-169,-47,-48,-51,-52,-53,-187,411,]),'greater':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,256,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'lessThan':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,257,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'greaterEquals':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,258,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'lessThanEquals':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,259,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'equals':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,260,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'notEquals':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,199,218,219,222,226,280,285,358,359,360,361,362,363,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,261,-169,-46,-50,-55,-81,-169,-47,-48,-51,-52,-53,-187,-169,-184,]),'and':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,197,199,218,219,222,226,254,280,285,315,358,359,360,361,362,363,382,383,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,251,-37,-169,-46,-50,-55,251,-81,-169,-169,-47,-48,-51,-52,-53,-187,-38,-190,-169,-184,]),'or':([75,78,92,93,95,96,97,98,99,100,168,169,170,171,174,175,176,177,197,199,218,219,222,226,254,280,285,315,358,359,360,361,362,363,382,383,413,455,],[-169,-185,-169,-169,-54,-169,-169,-169,-84,-82,-45,-188,-49,-189,-169,-184,-56,-57,252,-37,-169,-46,-50,-55,252,-81,-169,-169,-47,-48,-51,-52,-53,-187,-38,-190,-169,-184,]),'rCurlyBracket':([90,111,112,113,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,186,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[-169,185,-169,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-63,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'if':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[124,124,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'print':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[125,125,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'while':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,239,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[126,126,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,299,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'do':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[127,127,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'scan':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[128,128,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'return':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[147,147,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'ols':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[148,148,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'las':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[149,149,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'rid':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[150,150,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'kmeans':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[151,151,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'mbm':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[152,152,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'tseries':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[153,153,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'mean_abs_err':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[154,154,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'mean_sqr_err':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[155,155,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'median_abs_err':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[156,156,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'mean':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[157,157,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'mode':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[158,158,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'median':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[159,159,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'prob':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[160,160,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'freq':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[161,161,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'variance':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[162,162,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'stddev':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[163,163,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'skew':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[164,164,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'kurt':([90,112,114,115,116,117,118,119,120,121,122,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,185,309,380,414,416,422,436,438,440,442,444,446,448,450,452,458,459,462,464,465,467,468,474,475,476,477,478,479,481,482,486,487,488,489,495,496,498,529,563,570,575,577,],[165,165,-65,-66,-67,-68,-69,-70,-71,-72,-73,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-62,-111,-77,-74,-169,-169,-142,-145,-148,-151,-154,-157,-160,-163,-166,-76,-80,-169,-89,-90,-169,-169,-138,-139,-140,-141,-75,-169,-87,-194,-104,-197,-105,-198,-106,-183,-88,-133,-135,-136,-137,-134,]),'not':([94,147,172,173,190,238,251,252,293,369,379,],[-169,198,198,-186,198,198,198,198,-169,198,198,]),'else':([185,422,],[-62,463,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,23,24,25,26,29,30,],[4,33,34,35,36,38,39,]),'empty':([3,6,9,10,11,12,19,23,24,25,26,29,30,32,37,41,44,45,47,50,51,56,57,58,59,60,62,63,65,68,75,77,79,80,85,88,89,90,91,92,93,94,96,97,98,106,107,109,112,123,126,127,174,178,181,187,188,196,197,218,220,221,223,224,228,230,231,237,240,241,242,243,244,246,247,250,254,256,257,258,259,260,261,271,272,273,274,275,276,277,278,279,285,286,287,293,294,295,296,314,315,366,370,371,378,394,396,398,400,402,404,406,408,410,411,413,415,416,422,424,461,462,463,466,467,468,479,480,],[5,8,13,17,13,21,21,5,5,5,5,5,5,42,8,49,52,55,66,70,8,75,66,78,78,78,82,82,42,87,99,82,82,82,105,108,110,113,167,169,171,173,175,78,78,180,182,184,113,189,193,193,75,229,232,75,235,249,253,75,173,173,173,173,288,110,292,297,302,75,78,78,78,78,78,311,253,173,173,173,173,173,173,333,336,339,342,345,348,351,354,357,363,105,367,173,372,374,377,311,383,42,419,421,374,333,336,339,342,345,348,351,354,357,229,455,457,459,464,297,421,482,484,377,487,489,496,419,]),'START_FUNCTION':([6,37,51,],[7,43,72,]),'PROGRAM_A':([9,11,],[10,18,]),'VARS':([9,11,45,],[11,11,54,]),'METHOD':([9,11,12,19,],[12,12,19,19,]),'GENERATE_GOTO_MAIN':([10,],[16,]),'PROGRAM_B':([12,19,],[20,31,]),'TYPE':([14,15,50,291,],[22,28,71,71,]),'TYPEMETHOD':([15,],[27,]),'VARS_A':([32,65,366,],[40,84,412,]),'SAVE_VAR':([41,],[47,]),'VALIDATE_NAME_ARRAY':([41,],[48,]),'FILL_GOTO_MAIN':([44,],[51,]),'VARS_B':([45,],[53,]),'VARCTE_AUX_VARS':([46,],[57,]),'BOOLEAN_AUX_VARS':([46,],[61,]),'SIMPLE':([47,57,],[64,76,]),'METHOD_A':([50,],[68,]),'PARAMS':([50,291,],[69,368,]),'ISLIST':([56,174,187,218,241,],[73,226,233,280,303,]),'PUSH_STACK_OPERANDS_CONSTANT':([58,59,60,97,98,242,243,244,246,247,],[77,79,80,176,177,304,305,306,307,308,]),'SAVE_ASSIGNED_VAR':([62,63,77,79,80,],[81,83,101,102,103,]),'SAVE_COUNTER_PARAM':([68,],[86,]),'BLOCK':([72,179,194,373,425,483,],[89,230,239,422,467,498,]),'EXP':([74,147,172,190,191,198,238,251,252,255,281,282,294,369,376,379,418,],[91,199,199,199,199,199,199,199,199,315,358,359,371,199,199,199,461,]),'TERM':([74,147,172,190,191,198,238,251,252,255,281,282,283,284,294,369,376,379,418,],[92,92,92,92,92,92,92,92,92,92,92,92,360,361,92,92,92,92,92,]),'FACTOR':([74,147,172,190,191,198,238,251,252,255,281,282,283,284,294,369,376,379,418,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'VARCONSTAUX':([74,147,172,190,191,198,203,204,205,238,251,252,255,281,282,283,284,294,327,369,376,379,418,428,429,430,431,493,494,504,507,515,526,527,528,535,536,537,545,550,551,552,553,561,568,],[95,95,95,95,95,95,265,266,267,95,95,95,95,95,95,95,95,95,389,95,95,95,95,470,471,472,473,502,503,509,512,520,531,532,533,539,540,541,549,554,555,556,557,565,571,]),'SOLVE_OFFSETS':([75,],[100,]),'ACUMULATE_R':([85,286,],[104,364,]),'SAVE_PARAM':([88,],[107,]),'END_PROCEDURE':([89,230,],[109,289,]),'BLOCK_A':([90,112,],[111,186,]),'STATEMENT':([90,112,],[112,112,]),'ASSIGNMENT':([90,112,],[114,114,]),'CONDITION':([90,112,],[115,115,]),'WRITE':([90,112,],[116,116,]),'PRE_CONDITIONAL_LOOP':([90,112,],[117,117,]),'POST_CONDITIONAL_LOOP':([90,112,],[118,118,]),'METHODCALL':([90,112,369,],[119,119,416,]),'READ':([90,112,],[120,120,]),'STATMETHODS':([90,112,],[121,121,]),'RETURN':([90,112,],[122,122,]),'ORDINARY_LEAST_SQUARES':([90,112,],[129,129,]),'LASSO':([90,112,],[130,130,]),'RIDGE':([90,112,],[131,131,]),'K_MEANS':([90,112,],[132,132,]),'MINI_BATCH_MEANS':([90,112,],[133,133,]),'TIME_SERIES_SPLIT':([90,112,],[134,134,]),'MEAN_ABSOLUTE_ERROR':([90,112,],[135,135,]),'MEAN_SQUARED_ERROR':([90,112,],[136,136,]),'MEDIAN_ABSOLUTE_ERROR':([90,112,],[137,137,]),'MEAN':([90,112,],[138,138,]),'MODE':([90,112,],[139,139,]),'MEDIAN':([90,112,],[140,140,]),'PROBABILITY':([90,112,],[141,141,]),'FREQUENCY':([90,112,],[142,142,]),'VARIANCE':([90,112,],[143,143,]),'STANDARD_DEVIATION':([90,112,],[144,144,]),'SKEWNESS':([90,112,],[145,145,]),'KURTOSI':([90,112,],[146,146,]),'VALIDATE_INDEX':([91,],[166,]),'SOLVE_OPERATION_SUM_MINUS':([92,],[168,]),'SOLVE_OPERATION_TIMES_DIVIDE':([93,],[170,]),'PUSH_STACK_OPERATORS':([94,220,221,223,224,256,257,258,259,260,261,293,],[172,281,282,283,284,316,317,318,319,320,321,369,]),'PUSH_STACK_OPERANDS':([96,123,413,],[174,187,174,]),'SAVE_COUNTER_QUAD':([106,],[179,]),'SAVE_PARAM_TYPE':([107,],[181,]),'PRINTQUADS':([109,],[183,]),'VALIDATE_FUNCTION_NAME':([123,413,],[188,188,]),'PUSH_STACK_JUMPS':([126,127,],[192,194,]),'EXPLOG':([147,172,190,238,251,252,369,379,],[196,225,236,298,312,313,415,426,]),'EXPRESSION':([147,172,190,191,198,238,251,252,369,376,379,],[197,197,197,237,254,197,197,197,197,424,197,]),'EXP_A':([168,],[219,]),'TERM_A':([170,],[222,]),'LIST':([178,411,],[228,454,]),'INCREMENT_PARAM_COUNTER':([181,],[231,]),'ERA':([188,],[234,]),'VARCTE':([195,],[240,]),'BOOLEAN':([195,427,490,491,492,505,506,508,514,516,518,525,534,542,544,572,],[245,469,499,500,501,510,511,513,519,521,523,530,538,546,548,574,]),'GENERATE_QUAD_RETURN':([196,],[248,]),'EXPLOG_A':([197,254,],[250,314,]),'EXPRESSION_A':([199,],[255,]),'CALCULATE_ARRAY':([228,],[287,]),'PARAMS_A':([231,],[290,]),'GENERATE_QUAD_PRINT':([237,424,],[296,466,]),'READ_A':([240,],[300,]),'SOLVE_OPERATION_LOGIC':([250,314,],[310,381,]),'MEAN_A':([271,394,],[331,437,]),'MODE_A':([272,396,],[334,439,]),'MEDIAN_A':([273,398,],[337,441,]),'PROBABILITY_A':([274,400,],[340,443,]),'FREQUENCY_A':([275,402,],[343,445,]),'VARIANCE_A':([276,404,],[346,447,]),'STANDARD_DEVIATION_A':([277,406,],[349,449,]),'SKEWNESS_A':([278,408,],[352,451,]),'KURTOSI_A':([279,410,],[355,453,]),'POP_STACK_OPERATORS':([285,],[362,]),'LIST_A':([287,],[365,]),'METHODCALL_A':([294,],[370,]),'GENERATE_GOTOF_CONDITIONAL':([295,378,],[373,425,]),'WRITE_A':([296,466,],[375,485,]),'SOLVE_OPERATION_RELATIONSHIP':([315,],[382,]),'ASSIGNMENT_A':([369,],[414,]),'METHODCALL_B':([370,480,],[417,497,]),'VALIDATE_PARAMETER':([371,461,],[420,480,]),'SOLVE_OPERATION_ASSIGNMENT':([415,],[456,]),'p_SOLVE_OPERATION_ASSIGNMENT_AUX':([416,],[458,]),'CONDITION_A':([422,],[462,]),'SOLVE_OPERATION_CONDITIONAL':([462,],[481,]),'GENERATE_GOTO_CONDITIONAL':([463,],[483,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([467,],[486,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([468,],[488,]),'VALIDATE_METHOD_CALL':([479,],[495,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A GENERATE_GOTO_MAIN void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK END_PROCEDURE PRINTQUADS','PROGRAM',16,'p_PROGRAM','parser.py',99),
  ('GENERATE_GOTO_MAIN -> empty','GENERATE_GOTO_MAIN',1,'p_GENERATE_GOTO_MAIN','parser.py',105),
  ('FILL_GOTO_MAIN -> empty','FILL_GOTO_MAIN',1,'p_FILL_GOTO_MAIN','parser.py',117),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',128),
  ('PROGRAM_A -> METHOD PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',129),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',130),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',135),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',136),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',141),
  ('VARS_A -> id assign VARCTE_AUX_VARS SIMPLE','VARS_A',4,'p_VARS_A','parser.py',146),
  ('VARS_A -> id SAVE_VAR SIMPLE','VARS_A',3,'p_VARS_A','parser.py',147),
  ('VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A','VARS_A',9,'p_VARS_A','parser.py',148),
  ('VARS_A -> empty','VARS_A',1,'p_VARS_A','parser.py',149),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',154),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',155),
  ('SIMPLE -> comma VARS_A','SIMPLE',2,'p_SIMPLE','parser.py',160),
  ('SIMPLE -> empty','SIMPLE',1,'p_SIMPLE','parser.py',161),
  ('LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST','LIST',5,'p_LIST','parser.py',166),
  ('LIST -> empty','LIST',1,'p_LIST','parser.py',167),
  ('LIST_A -> comma VARS_A','LIST_A',2,'p_LIST_A','parser.py',172),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',173),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',179),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',180),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',181),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',182),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',183),
  ('BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',189),
  ('BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',190),
  ('VALIDATE_NAME_ARRAY -> empty','VALIDATE_NAME_ARRAY',1,'p_VALIDATE_NAME_ARRAY','parser.py',203),
  ('ACUMULATE_R -> empty','ACUMULATE_R',1,'p_ACUMULATE_R','parser.py',222),
  ('CALCULATE_ARRAY -> empty','CALCULATE_ARRAY',1,'p_CALCULATE_ARRAY','parser.py',250),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',306),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',307),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',312),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',313),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',314),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',319),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',320),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',325),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',326),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',327),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',328),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',329),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',330),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',335),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',336),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',341),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',342),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',347),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',348),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',353),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',354),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',359),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',360),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',366),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',367),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',368),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',373),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',374),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',375),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',376),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',381),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',386),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',387),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',392),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',393),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',394),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',395),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',396),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',397),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',398),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',399),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',400),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A','ASSIGNMENT',6,'p_ASSIGNMENT','parser.py',405),
  ('ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT_A',3,'p_ASSIGNMENT_A','parser.py',410),
  ('ASSIGNMENT_A -> METHODCALL p_SOLVE_OPERATION_ASSIGNMENT_AUX','ASSIGNMENT_A',2,'p_ASSIGNMENT_A','parser.py',411),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',416),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',421),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',422),
  ('p_SOLVE_OPERATION_ASSIGNMENT_AUX -> empty','p_SOLVE_OPERATION_ASSIGNMENT_AUX',1,'p_SOLVE_OPERATION_ASSIGNMENT_AUX','parser.py',455),
  ('ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST','ISLIST',5,'p_ISLIST','parser.py',471),
  ('ISLIST -> empty SOLVE_OFFSETS','ISLIST',2,'p_ISLIST','parser.py',472),
  ('VALIDATE_INDEX -> empty','VALIDATE_INDEX',1,'p_VALIDATE_INDEX','parser.py',484),
  ('SOLVE_OFFSETS -> empty','SOLVE_OFFSETS',1,'p_SOLVE_OFFSETS','parser.py',545),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',606),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',607),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',612),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',617),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',618),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',623),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',628),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',629),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',634),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',635),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',636),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',637),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',638),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',643),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',648),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',649),
  ('PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',654),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',659),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',660),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',665),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',670),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',9,'p_METHODCALL','parser.py',675),
  ('METHODCALL_A -> EXP VALIDATE_PARAMETER','METHODCALL_A',2,'p_METHODCALL_A','parser.py',680),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',681),
  ('METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B','METHODCALL_B',4,'p_METHODCALL_B','parser.py',686),
  ('METHODCALL_B -> empty','METHODCALL_B',1,'p_METHODCALL_B','parser.py',687),
  ('RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon','RETURN',4,'p_RETURN','parser.py',692),
  ('GENERATE_QUAD_RETURN -> empty','GENERATE_QUAD_RETURN',1,'p_GENERATE_QUAD_RETURN','parser.py',697),
  ('BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',709),
  ('BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',710),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',715),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',716),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',717),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',718),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',719),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',720),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',721),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',722),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',723),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',724),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',725),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',726),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',727),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',728),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',729),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',730),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',731),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',732),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',737),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',742),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',747),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',752),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',757),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',762),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',767),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',772),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',777),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',782),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',787),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',788),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',793),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',798),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',799),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',804),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',809),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',810),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',815),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',820),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',821),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',826),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',831),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',832),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',837),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',842),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',843),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',848),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',853),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',854),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',859),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',864),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',865),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',870),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',875),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',876),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',881),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',924),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',941),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',951),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',972),
  ('SAVE_PARAM -> empty','SAVE_PARAM',1,'p_SAVE_PARAM','parser.py',1010),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',1076),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',1086),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',1097),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',1107),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',1125),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',1134),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',1150),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',1169),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',1194),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',1228),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',1262),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',1296),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1306),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1372),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1385),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1398),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1411),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1450),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1476),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1498),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1509),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1527),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1541),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1559),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1580),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1595),
]
