
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS\n\t\n\tGENERATE_GOTO_MAIN : empty\n\t\n\tFILL_GOTO_MAIN : empty\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : id assign VARCTE_AUX_VARS SIMPLE\n\t\t\t| id SAVE_VAR SIMPLE\n\t\t\t| id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A\n\t\t\t| empty\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : comma VARS_A\n\t\t\t| empty\n\t\n\tLIST : lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST\n\t\t\t| empty\n\t\n\tLIST_A : comma VARS_A\n\t\t| empty\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : FALSE SAVE_ASSIGNED_VAR\n\t\t\t\t\t| TRUE SAVE_ASSIGNED_VAR\n\t\n\tVALIDATE_NAME_ARRAY : empty\t\n\t\n\tACUMULATE_R : empty\n\t\n\tCALCULATE_ARRAY : empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST\n\t\t\t| empty SOLVE_OFFSETS\n\t\n\tVALIDATE_INDEX : empty\n\t\n\tSOLVE_OFFSETS : empty\n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG GENERATE_QUAD_RETURN semicolon\n\t\n\tGENERATE_QUAD_RETURN : empty\n\t\n\tBOOLEAN : FALSE PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| TRUE PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_PARAM : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n    VALIDATE_PARAMETER : empty\n    \n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,73,91,92,166,],[0,-164,-1,-195,-62,]),'void':([2,9,10,11,12,13,14,15,17,19,20,21,22,32,47,54,55,56,166,275,352,353,],[3,-164,-164,-2,18,-164,-164,-6,30,-4,-164,-5,-8,-7,-164,-9,-14,-15,-62,-164,-95,-173,]),'globalFunc':([3,4,5,],[-164,6,-166,]),'start':([5,18,31,],[-166,-164,40,]),'colon':([5,23,24,25,26,27,34,35,36,37,],[-166,33,-164,-164,-164,-164,-58,-59,-60,-61,]),'id':([5,24,25,26,27,28,29,30,33,34,35,36,37,39,48,66,72,74,76,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,151,166,171,172,176,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,221,234,235,238,239,240,241,242,243,244,265,266,268,269,278,279,294,301,302,303,304,305,306,307,308,309,312,313,314,315,317,320,323,326,329,332,335,338,341,344,345,346,347,357,362,365,366,405,411,417,418,419,420,425,427,429,431,433,435,437,439,441,448,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,482,483,484,485,491,492,493,496,504,515,516,517,518,524,525,526,534,539,540,541,542,550,552,557,559,564,566,],[-166,-164,-164,-164,-164,38,-82,-164,42,-58,-59,-60,-61,-83,57,42,90,105,153,105,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,153,-164,-62,153,153,224,153,245,246,247,153,153,153,251,252,253,254,255,256,257,258,259,260,261,262,153,-181,153,153,153,153,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,153,-106,-39,-40,-41,-42,-43,-44,370,371,372,153,376,377,378,380,382,384,386,388,390,392,394,396,153,153,153,153,153,153,153,-75,42,-164,153,153,153,153,-137,-140,-143,-146,-149,-152,-155,-158,-161,153,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,153,153,-164,-85,-103,-178,153,153,153,153,153,153,-128,153,153,153,153,153,153,153,153,153,-130,153,-131,-132,-129,]),'semicolon':([6,7,8,33,41,42,43,49,51,57,58,59,60,61,62,63,64,65,66,67,75,77,78,79,80,81,82,83,84,85,86,149,150,152,153,154,155,156,157,158,159,160,177,178,180,201,202,203,204,207,208,209,210,211,231,232,233,236,237,263,264,267,271,273,274,295,296,297,298,299,300,343,348,350,351,367,368,369,379,381,383,385,387,389,391,393,395,397,398,399,400,401,402,404,405,406,408,412,421,422,423,424,443,444,445,446,466,468,513,548,556,562,565,],[-164,9,-165,-164,47,-164,-13,-164,-167,-164,-164,-164,-164,-164,-26,-164,-164,-11,-164,-17,-22,-164,-10,-164,-180,-164,-164,-27,-168,-28,-16,-164,-164,-54,-164,-164,-164,-81,-79,-23,-24,-25,-164,-164,-37,-45,-183,-49,-184,-164,-179,-56,-57,-164,294,-107,-164,-36,-164,-164,-46,-50,-55,-164,-19,-32,-186,-34,-35,-164,-164,-78,-164,-164,-31,-33,-38,-185,425,427,429,431,433,435,437,439,441,-47,-48,-51,-52,-53,-182,-12,-164,-21,-164,453,462,463,464,465,-164,-20,467,-187,-18,484,518,552,559,564,566,]),'lParenthesis':([8,38,44,76,105,106,107,108,110,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,169,170,171,172,173,174,179,205,206,217,218,221,234,235,238,239,240,241,242,243,244,265,266,268,269,278,279,284,301,302,303,304,305,306,344,345,346,347,357,362,365,448,],[-165,-164,52,151,-164,171,172,-164,176,151,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,-164,-164,-175,151,151,221,-191,151,151,-181,279,-176,151,151,151,151,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,151,365,-39,-40,-41,-42,-43,-44,151,151,151,151,151,151,151,151,]),'lCurlyBracket':([8,40,45,46,53,109,163,174,175,212,213,280,359,360,364,414,451,472,473,],[-165,-164,-164,-3,74,-164,-164,-191,74,74,-172,-164,74,-188,-164,74,-164,74,-190,]),'var':([9,10,11,13,47,54,55,56,],[-164,16,-2,16,16,-9,-14,-15,]),'func':([9,10,11,13,14,20,47,54,55,56,166,275,352,353,],[-164,17,-2,17,17,17,-164,-9,-14,-15,-62,-164,-95,-173,]),'int':([16,17,52,355,],[24,24,24,24,]),'float':([16,17,52,355,555,],[25,25,25,25,558,]),'string':([16,17,52,310,311,355,506,532,547,549,],[26,26,26,373,374,26,511,536,551,553,]),'bool':([16,17,52,355,],[27,27,27,27,]),'assign':([42,77,105,156,157,168,170,216,263,343,],[48,-164,-164,-81,-79,-164,-179,278,-164,-78,]),'comma':([42,49,51,57,58,59,60,61,62,63,64,75,77,79,80,81,82,83,84,85,90,149,150,152,153,154,155,156,157,158,159,160,164,165,180,201,202,203,204,207,208,209,210,211,214,215,220,223,224,225,226,227,228,229,230,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,271,273,274,276,277,281,282,288,289,290,291,292,293,300,343,348,350,351,358,368,369,370,371,372,373,374,380,382,384,386,388,390,392,394,396,397,398,399,400,401,402,409,410,413,443,454,457,458,459,460,461,466,486,487,488,489,490,498,499,500,501,502,509,510,511,512,519,520,521,522,527,528,529,530,535,536,537,538,543,545,546,551,554,558,],[-164,66,-167,-164,66,-164,-164,-164,-26,-164,-164,-22,-164,-164,-180,-164,-164,-27,-168,-28,-164,-164,-164,-54,-164,-164,-164,-81,-79,-23,-24,-25,-164,-169,-37,-45,-183,-49,-184,-164,-179,-56,-57,-164,-164,-174,-164,286,-164,-164,-164,-164,-94,-164,-164,307,308,309,310,311,312,313,314,315,317,320,323,326,329,332,335,338,341,-164,-46,-50,-55,-164,-19,355,-170,362,-194,-90,-91,-92,-93,-108,-109,-164,-78,-164,405,-31,-164,-38,-185,416,417,418,419,420,317,320,323,326,329,332,335,338,341,-47,-48,-51,-52,-53,-182,448,-177,-164,-164,362,479,480,481,482,483,-18,493,494,495,496,497,503,504,505,506,507,514,515,516,517,523,524,525,526,531,532,533,534,539,540,541,542,547,549,550,555,557,561,]),'lSqrBracket':([42,50,51,57,105,153,168,170,207,208,211,224,263,443,],[-164,68,-29,76,-164,-164,76,-179,76,-179,272,76,76,272,]),'cte_i':([48,68,76,129,151,171,172,176,179,184,185,186,205,206,221,234,235,238,239,240,241,242,243,244,265,266,268,269,272,278,279,301,302,303,304,305,306,312,344,345,346,347,357,362,365,417,418,419,420,448,482,483,493,496,504,515,516,517,524,525,526,534,539,540,541,542,550,557,],[59,87,154,154,-164,154,154,225,154,154,154,154,154,-181,154,154,154,154,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,349,-164,154,-39,-40,-41,-42,-43,-44,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'cte_f':([48,76,129,151,171,172,176,179,184,185,186,205,206,221,234,235,238,239,240,241,242,243,244,265,266,268,269,278,279,301,302,303,304,305,306,312,344,345,346,347,357,362,365,417,418,419,420,448,482,483,493,496,504,515,516,517,524,525,526,534,539,540,541,542,550,557,],[60,155,155,-164,155,155,226,155,155,155,155,155,-181,155,155,155,155,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,155,-39,-40,-41,-42,-43,-44,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'cte_str':([48,176,],[61,227,]),'FALSE':([48,176,416,479,480,481,494,495,497,503,505,507,514,523,531,533,561,],[63,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,]),'TRUE':([48,176,416,479,480,481,494,495,497,503,505,507,514,523,531,533,561,],[64,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,]),'rParenthesis':([52,69,70,71,77,80,88,89,90,149,150,152,153,154,155,156,157,164,165,178,180,201,202,203,204,207,208,209,210,214,215,219,220,223,224,225,226,227,228,229,230,233,236,237,254,255,256,257,258,259,260,261,262,263,264,267,270,271,276,277,281,282,283,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,316,318,319,321,322,324,325,327,328,330,331,333,334,336,337,339,340,342,343,348,354,356,358,361,363,367,368,369,375,376,377,378,380,382,384,386,388,390,392,394,396,397,398,399,400,401,402,407,409,410,413,415,426,428,430,432,434,436,438,440,442,447,449,454,469,474,508,544,553,560,563,],[-164,-164,-96,-97,-164,-180,163,-171,-164,-164,-164,-54,-164,-164,-164,-81,-79,-164,-169,-164,-37,-45,-183,-49,-184,-164,-179,-56,-57,-164,-174,280,-164,-164,-164,-164,-164,-164,-94,-164,-164,-164,-36,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,-164,-46,-50,348,-55,-164,-170,-164,-194,364,366,-76,-77,-90,-91,-92,-93,-108,-109,-32,-186,-34,-35,-164,-164,379,-139,381,-142,383,-145,385,-148,387,-151,389,-154,391,-157,393,-160,395,-163,-78,-164,-98,-100,-164,412,-89,-33,-38,-185,421,422,423,424,-164,-164,-164,-164,-164,-164,-164,-164,-164,-47,-48,-51,-52,-53,-182,-99,-164,-177,-164,456,-138,-141,-144,-147,-150,-153,-156,-159,-162,468,-105,-164,-104,-88,513,548,556,562,565,]),'rCurlyBracket':([74,93,94,95,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,167,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[-164,166,-164,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-63,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'if':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[106,106,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'print':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[107,107,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'while':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,222,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[108,108,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,284,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'do':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[109,109,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'scan':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[110,110,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'return':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[129,129,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'ols':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[130,130,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'las':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[131,131,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'rid':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[132,132,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'kmeans':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[133,133,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'mbm':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[134,134,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'tseries':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[135,135,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'mean_abs_err':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[136,136,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'mean_sqr_err':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[137,137,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'median_abs_err':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[138,138,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'mean':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[139,139,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'mode':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[140,140,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'median':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[141,141,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'prob':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[142,142,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'freq':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[143,143,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'variance':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[144,144,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'stddev':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[145,145,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'skew':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[146,146,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'kurt':([74,94,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,166,294,366,411,425,427,429,431,433,435,437,439,441,450,452,453,455,456,462,463,464,465,467,470,471,475,476,477,478,484,485,491,492,518,552,559,564,566,],[147,147,-65,-66,-67,-68,-69,-70,-71,-72,-73,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-62,-106,-75,-164,-137,-140,-143,-146,-149,-152,-155,-158,-161,-164,-86,-87,-164,-164,-133,-134,-135,-136,-74,-84,-189,-101,-192,-102,-193,-164,-85,-103,-178,-128,-130,-131,-132,-129,]),'times':([77,80,150,152,153,154,155,156,157,203,204,207,208,209,210,263,271,343,348,401,402,],[-164,-180,-164,-54,-164,-164,-164,-81,-79,268,-184,-164,-179,-56,-57,-164,-55,-78,-164,-53,-182,]),'divide':([77,80,150,152,153,154,155,156,157,203,204,207,208,209,210,263,271,343,348,401,402,],[-164,-180,-164,-54,-164,-164,-164,-81,-79,269,-184,-164,-179,-56,-57,-164,-55,-78,-164,-53,-182,]),'plus':([77,80,149,150,152,153,154,155,156,157,201,202,203,204,207,208,209,210,263,267,271,343,348,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,265,-183,-49,-184,-164,-179,-56,-57,-164,-50,-55,-78,-164,-51,-52,-53,-182,]),'minus':([77,80,149,150,152,153,154,155,156,157,201,202,203,204,207,208,209,210,263,267,271,343,348,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,266,-183,-49,-184,-164,-179,-56,-57,-164,-50,-55,-78,-164,-51,-52,-53,-182,]),'rSqrBracket':([77,80,87,148,149,150,152,153,154,155,156,157,161,162,199,200,201,202,203,204,207,208,209,210,263,264,267,271,343,348,349,397,398,399,400,401,402,403,],[-164,-180,-164,-164,-164,-164,-54,-164,-164,-164,-81,-79,211,-30,263,-80,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-164,-47,-48,-51,-52,-53,-182,443,]),'greater':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,239,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'lessThan':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,240,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'greaterEquals':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,241,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'lessThanEquals':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,242,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'equals':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,243,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'notEquals':([77,80,149,150,152,153,154,155,156,157,180,201,202,203,204,207,208,209,210,263,264,267,271,343,348,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,244,-45,-183,-49,-184,-164,-179,-56,-57,-164,-46,-50,-55,-78,-164,-47,-48,-51,-52,-53,-182,]),'and':([77,80,149,150,152,153,154,155,156,157,178,180,201,202,203,204,207,208,209,210,237,263,264,267,271,300,343,348,368,369,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,234,-37,-45,-183,-49,-184,-164,-179,-56,-57,234,-164,-46,-50,-55,-164,-78,-164,-38,-185,-47,-48,-51,-52,-53,-182,]),'or':([77,80,149,150,152,153,154,155,156,157,178,180,201,202,203,204,207,208,209,210,237,263,264,267,271,300,343,348,368,369,397,398,399,400,401,402,],[-164,-180,-164,-164,-54,-164,-164,-164,-81,-79,235,-37,-45,-183,-49,-184,-164,-179,-56,-57,235,-164,-46,-50,-55,-164,-78,-164,-38,-185,-47,-48,-51,-52,-53,-182,]),'not':([129,151,171,205,206,221,234,235,278,357,365,],[179,-164,179,179,-181,179,179,179,-164,179,179,]),'else':([166,411,],[-62,451,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,18,24,25,26,27,30,],[4,31,34,35,36,37,39,]),'empty':([3,6,9,10,13,14,18,20,24,25,26,27,30,33,38,40,42,45,47,49,52,57,58,59,60,61,63,64,66,69,73,74,77,79,81,82,87,90,94,105,108,109,148,149,150,151,153,154,155,163,164,168,169,177,178,207,211,214,220,223,224,225,226,227,229,230,233,237,239,240,241,242,243,244,254,255,256,257,258,259,260,261,262,263,265,266,268,269,273,275,276,278,280,281,299,300,348,349,350,358,364,380,382,384,386,388,390,392,394,396,405,408,409,411,413,443,450,451,454,455,456,484,],[5,8,11,15,15,22,5,22,5,5,5,5,5,43,8,46,51,8,56,67,71,77,67,80,80,80,84,84,43,89,92,95,156,84,84,84,162,165,95,170,174,174,200,202,204,206,208,80,80,213,215,77,218,232,236,77,274,277,282,287,77,80,80,80,80,80,296,236,206,206,206,206,206,206,318,321,324,327,330,333,336,339,342,77,206,206,206,206,351,353,356,206,360,363,296,369,402,162,406,410,360,318,321,324,327,330,333,336,339,342,43,446,449,452,282,274,471,473,363,476,478,492,]),'START_FUNCTION':([6,38,45,],[7,44,53,]),'GENERATE_GOTO_MAIN':([9,],[10,]),'PROGRAM_A':([10,13,],[12,19,]),'VARS':([10,13,47,],[13,13,55,]),'METHOD':([10,13,14,20,],[14,14,20,20,]),'PROGRAM_B':([14,20,],[21,32,]),'TYPE':([16,17,52,355,],[23,29,72,72,]),'TYPEMETHOD':([17,],[28,]),'VARS_A':([33,66,405,],[41,86,444,]),'FILL_GOTO_MAIN':([40,],[45,]),'SAVE_VAR':([42,],[49,]),'VALIDATE_NAME_ARRAY':([42,],[50,]),'VARS_B':([47,],[54,]),'VARCTE_AUX_VARS':([48,],[58,]),'BOOLEAN_AUX_VARS':([48,],[62,]),'SIMPLE':([49,58,],[65,78,]),'METHOD_A':([52,],[69,]),'PARAMS':([52,355,],[70,407,]),'BLOCK':([53,175,212,359,414,472,],[73,222,275,411,455,485,]),'ISLIST':([57,168,207,224,263,],[75,216,271,288,343,]),'PUSH_STACK_OPERANDS_CONSTANT':([59,60,61,154,155,225,226,227,229,230,],[79,81,82,209,210,289,290,291,292,293,]),'SAVE_ASSIGNED_VAR':([63,64,79,81,82,],[83,85,158,159,160,]),'SAVE_COUNTER_PARAM':([69,],[88,]),'PRINTQUADS':([73,],[91,]),'BLOCK_A':([74,94,],[93,167,]),'STATEMENT':([74,94,],[94,94,]),'ASSIGNMENT':([74,94,],[96,96,]),'CONDITION':([74,94,],[97,97,]),'WRITE':([74,94,],[98,98,]),'PRE_CONDITIONAL_LOOP':([74,94,],[99,99,]),'POST_CONDITIONAL_LOOP':([74,94,],[100,100,]),'METHODCALL':([74,94,],[101,101,]),'READ':([74,94,],[102,102,]),'STATMETHODS':([74,94,],[103,103,]),'RETURN':([74,94,],[104,104,]),'ORDINARY_LEAST_SQUARES':([74,94,],[111,111,]),'LASSO':([74,94,],[112,112,]),'RIDGE':([74,94,],[113,113,]),'K_MEANS':([74,94,],[114,114,]),'MINI_BATCH_MEANS':([74,94,],[115,115,]),'TIME_SERIES_SPLIT':([74,94,],[116,116,]),'MEAN_ABSOLUTE_ERROR':([74,94,],[117,117,]),'MEAN_SQUARED_ERROR':([74,94,],[118,118,]),'MEDIAN_ABSOLUTE_ERROR':([74,94,],[119,119,]),'MEAN':([74,94,],[120,120,]),'MODE':([74,94,],[121,121,]),'MEDIAN':([74,94,],[122,122,]),'PROBABILITY':([74,94,],[123,123,]),'FREQUENCY':([74,94,],[124,124,]),'VARIANCE':([74,94,],[125,125,]),'STANDARD_DEVIATION':([74,94,],[126,126,]),'SKEWNESS':([74,94,],[127,127,]),'KURTOSI':([74,94,],[128,128,]),'EXP':([76,129,171,172,179,205,221,234,235,238,279,344,345,357,362,365,448,],[148,180,180,180,180,180,180,180,180,300,358,397,398,180,180,180,469,]),'TERM':([76,129,171,172,179,205,221,234,235,238,279,344,345,346,347,357,362,365,448,],[149,149,149,149,149,149,149,149,149,149,149,149,149,399,400,149,149,149,149,]),'FACTOR':([76,129,171,172,179,205,221,234,235,238,279,344,345,346,347,357,362,365,448,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'VARCONSTAUX':([76,129,171,172,179,184,185,186,205,221,234,235,238,279,312,344,345,346,347,357,362,365,417,418,419,420,448,482,483,493,496,504,515,516,517,524,525,526,534,539,540,541,542,550,557,],[152,152,152,152,152,248,249,250,152,152,152,152,152,152,375,152,152,152,152,152,152,152,458,459,460,461,152,489,490,498,501,509,520,521,522,528,529,530,538,543,544,545,546,554,560,]),'SOLVE_OFFSETS':([77,],[157,]),'ACUMULATE_R':([87,349,],[161,403,]),'SAVE_PARAM':([90,],[164,]),'PUSH_STACK_OPERANDS':([105,153,],[168,207,]),'VALIDATE_FUNCTION_NAME':([105,],[169,]),'PUSH_STACK_JUMPS':([108,109,],[173,175,]),'EXPLOG':([129,171,205,221,234,235,357,365,],[177,219,270,283,297,298,408,415,]),'EXPRESSION':([129,171,172,179,205,221,234,235,357,362,365,],[178,178,220,237,178,178,178,178,178,413,178,]),'VALIDATE_INDEX':([148,],[199,]),'SOLVE_OPERATION_SUM_MINUS':([149,],[201,]),'SOLVE_OPERATION_TIMES_DIVIDE':([150,],[203,]),'PUSH_STACK_OPERATORS':([151,239,240,241,242,243,244,265,266,268,269,278,],[205,301,302,303,304,305,306,344,345,346,347,357,]),'SAVE_COUNTER_QUAD':([163,],[212,]),'SAVE_PARAM_TYPE':([164,],[214,]),'ERA':([169,],[217,]),'VARCTE':([176,],[223,]),'BOOLEAN':([176,416,479,480,481,494,495,497,503,505,507,514,523,531,533,561,],[228,457,486,487,488,499,500,502,508,510,512,519,527,535,537,563,]),'GENERATE_QUAD_RETURN':([177,],[231,]),'EXPLOG_A':([178,237,],[233,299,]),'EXPRESSION_A':([180,],[238,]),'EXP_A':([201,],[264,]),'TERM_A':([203,],[267,]),'LIST':([211,443,],[273,466,]),'INCREMENT_PARAM_COUNTER':([214,],[276,]),'GENERATE_QUAD_PRINT':([220,413,],[281,454,]),'READ_A':([223,],[285,]),'SOLVE_OPERATION_LOGIC':([233,299,],[295,367,]),'MEAN_A':([254,380,],[316,426,]),'MODE_A':([255,382,],[319,428,]),'MEDIAN_A':([256,384,],[322,430,]),'PROBABILITY_A':([257,386,],[325,432,]),'FREQUENCY_A':([258,388,],[328,434,]),'VARIANCE_A':([259,390,],[331,436,]),'STANDARD_DEVIATION_A':([260,392,],[334,438,]),'SKEWNESS_A':([261,394,],[337,440,]),'KURTOSI_A':([262,396,],[340,442,]),'CALCULATE_ARRAY':([273,],[350,]),'END_PROCEDURE':([275,],[352,]),'PARAMS_A':([276,],[354,]),'GENERATE_GOTOF_CONDITIONAL':([280,364,],[359,414,]),'WRITE_A':([281,454,],[361,474,]),'SOLVE_OPERATION_RELATIONSHIP':([300,],[368,]),'POP_STACK_OPERATORS':([348,],[401,]),'LIST_A':([350,],[404,]),'VALIDATE_PARAMETER':([358,],[409,]),'SOLVE_OPERATION_ASSIGNMENT':([408,],[445,]),'METHODCALL_A':([409,],[447,]),'CONDITION_A':([411,],[450,]),'SOLVE_OPERATION_CONDITIONAL':([450,],[470,]),'GENERATE_GOTO_CONDITIONAL':([451,],[472,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([455,],[475,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([456,],[477,]),'VALIDATE_METHOD_CALL':([484,],[491,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon GENERATE_GOTO_MAIN PROGRAM_A void SAVE_TYPE start FILL_GOTO_MAIN START_FUNCTION BLOCK PRINTQUADS','PROGRAM',15,'p_PROGRAM','parser.py',99),
  ('GENERATE_GOTO_MAIN -> empty','GENERATE_GOTO_MAIN',1,'p_GENERATE_GOTO_MAIN','parser.py',105),
  ('FILL_GOTO_MAIN -> empty','FILL_GOTO_MAIN',1,'p_FILL_GOTO_MAIN','parser.py',117),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',128),
  ('PROGRAM_A -> METHOD PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',129),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',130),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',135),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',136),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',141),
  ('VARS_A -> id assign VARCTE_AUX_VARS SIMPLE','VARS_A',4,'p_VARS_A','parser.py',146),
  ('VARS_A -> id SAVE_VAR SIMPLE','VARS_A',3,'p_VARS_A','parser.py',147),
  ('VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A','VARS_A',9,'p_VARS_A','parser.py',148),
  ('VARS_A -> empty','VARS_A',1,'p_VARS_A','parser.py',149),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',154),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',155),
  ('SIMPLE -> comma VARS_A','SIMPLE',2,'p_SIMPLE','parser.py',160),
  ('SIMPLE -> empty','SIMPLE',1,'p_SIMPLE','parser.py',161),
  ('LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST','LIST',5,'p_LIST','parser.py',166),
  ('LIST -> empty','LIST',1,'p_LIST','parser.py',167),
  ('LIST_A -> comma VARS_A','LIST_A',2,'p_LIST_A','parser.py',172),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',173),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',179),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',180),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',181),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',182),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',183),
  ('BOOLEAN_AUX_VARS -> FALSE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',189),
  ('BOOLEAN_AUX_VARS -> TRUE SAVE_ASSIGNED_VAR','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',190),
  ('VALIDATE_NAME_ARRAY -> empty','VALIDATE_NAME_ARRAY',1,'p_VALIDATE_NAME_ARRAY','parser.py',203),
  ('ACUMULATE_R -> empty','ACUMULATE_R',1,'p_ACUMULATE_R','parser.py',222),
  ('CALCULATE_ARRAY -> empty','CALCULATE_ARRAY',1,'p_CALCULATE_ARRAY','parser.py',250),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',306),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',307),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',312),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',313),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',314),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',319),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',320),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',325),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',326),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',327),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',328),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',329),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',330),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',335),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',336),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',341),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',342),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',347),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',348),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',353),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',354),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',359),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',360),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',366),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',367),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',368),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',373),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',374),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',375),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',376),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',381),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',386),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',387),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',392),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',393),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',394),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',395),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',396),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',397),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',398),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',399),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',400),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT',8,'p_ASSIGNMENT','parser.py',405),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',410),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',415),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',416),
  ('ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST','ISLIST',5,'p_ISLIST','parser.py',428),
  ('ISLIST -> empty SOLVE_OFFSETS','ISLIST',2,'p_ISLIST','parser.py',429),
  ('VALIDATE_INDEX -> empty','VALIDATE_INDEX',1,'p_VALIDATE_INDEX','parser.py',441),
  ('SOLVE_OFFSETS -> empty','SOLVE_OFFSETS',1,'p_SOLVE_OFFSETS','parser.py',502),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',563),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',564),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',569),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',574),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',575),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',580),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',585),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',586),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',591),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',592),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',593),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',594),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',595),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',600),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',605),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',606),
  ('PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',611),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',616),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',617),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',622),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',627),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis EXP VALIDATE_PARAMETER METHODCALL_A rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',10,'p_METHODCALL','parser.py',632),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',637),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',638),
  ('RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon','RETURN',4,'p_RETURN','parser.py',643),
  ('GENERATE_QUAD_RETURN -> empty','GENERATE_QUAD_RETURN',1,'p_GENERATE_QUAD_RETURN','parser.py',648),
  ('BOOLEAN -> FALSE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',663),
  ('BOOLEAN -> TRUE PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',664),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',669),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',670),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',671),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',672),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',673),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',674),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',675),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',676),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',677),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',678),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',679),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',680),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',681),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',682),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',683),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',684),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',685),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',686),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',691),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',696),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',701),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',706),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',711),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',716),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',721),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',726),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',731),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',736),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',741),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',742),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',747),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',752),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',753),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',758),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',763),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',764),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',769),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',774),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',775),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',780),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',785),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',786),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',791),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',796),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',797),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',802),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',807),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',808),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',813),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',818),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',819),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',824),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',829),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',830),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',835),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',878),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',895),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',905),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',926),
  ('SAVE_PARAM -> empty','SAVE_PARAM',1,'p_SAVE_PARAM','parser.py',964),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',1030),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',1040),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',1051),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',1061),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',1079),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',1088),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',1104),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',1123),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',1146),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',1173),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',1207),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',1241),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1251),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1317),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1330),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1343),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1356),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1395),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1421),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1443),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1454),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1472),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1486),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1504),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1525),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1540),
]
