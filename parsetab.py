
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FALSE TRUE and assign bool colon comma cte_f cte_i cte_str divide else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK PRINTQUADS\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t| METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t| empty\n\t\n\tVARS : var VARS_A\n\t\n\tVARS_A : TYPE colon VARS_B semicolon VARS_C\n\t\n\tVARS_B : SIMPLE\n\t\t| LIST\n\t\n\tVARS_C : VARS_A\n\t\t\t| empty\n\t\n\tSIMPLE : id SAVE_VAR SIMPLE_A\n\t\n\tSIMPLE_A : comma SIMPLE\n\t\t\t| empty\n\t\n\tLIST : id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A\n\t\n\tLIST_A : comma LIST\n\t\t| empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS\n\t\t| cte_f PUSH_STACK_OPERANDS\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id ISLIST assign EXPLOG semicolon \n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP rSqrBracket\n\t\t\t| empty \n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void \n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i \n\t\t| cte_f \n\t\t| cte_str \n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon\n\t\n\tPARAMS : EXP PARAMS_A\n\t\n\tPARAMS_A : comma EXP PARAMS_A\n\t\t| empty\n\t\n\tLOOP : while lParenthesis EXPLOG rParenthesis BLOCK\n\t\n\tMETHODCALL : id lParenthesis EXP METHODCALL_A rParenthesis semicolon\n\t\n\tMETHODCALL_A : comma EXP\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG semicolon\n\t\n\tBOOLEAN : FALSE\n\t\t\t| TRUE\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_GLOBAL_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ARRAY : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,27,37,38,97,],[0,-144,-1,-159,-49,]),'globalFunc':([2,],[3,]),'semicolon':([3,4,5,92,93,94,95,97,102,107,108,110,111,112,114,115,116,117,137,139,157,160,161,169,170,171,172,175,176,177,178,200,202,208,212,222,223,224,225,226,227,234,237,241,278,279,280,281,284,288,292,293,294,299,309,311,313,315,317,319,321,323,325,327,328,335,336,337,338,339,340,346,347,348,349,368,370,383,420,455,463,469,472,],[-144,6,-145,136,-9,-10,-144,-49,-65,156,-144,-24,-144,-144,-41,-144,-144,-144,-144,-147,-144,-23,-144,-32,-152,-36,-153,-144,-149,-43,-44,-13,-15,283,-64,-19,-155,-21,-22,-144,-144,-33,-37,-42,-14,-144,-144,329,331,333,-20,-25,-154,-144,350,352,354,356,358,360,362,364,366,-144,-148,-34,-35,-38,-39,-40,-151,379,380,381,382,-16,-18,-17,425,459,466,471,473,]),'var':([6,8,18,136,197,198,199,],[11,11,-7,-144,-8,-11,-12,]),'func':([6,8,9,15,18,136,197,198,199,329,],[12,12,12,12,-7,-144,-8,-11,-12,-79,]),'start':([6,7,8,9,10,14,15,16,17,18,29,136,197,198,199,329,],[-144,13,-144,-144,-4,-2,-144,-3,-6,-7,-5,-144,-8,-11,-12,-79,]),'int':([11,12,136,],[20,20,20,]),'float':([11,12,136,462,],[21,21,21,465,]),'string':([11,12,136,245,246,413,439,454,456,],[22,22,22,303,304,418,443,458,460,]),'bool':([11,12,136,],[23,23,23,]),'void':([12,],[26,]),'lCurlyBracket':([13,204,213,217,286,287,372,387,388,],[28,28,-144,28,28,-156,-144,28,-158,]),'colon':([19,20,21,22,23,31,32,33,34,35,],[30,-144,-144,-144,-144,-45,-146,-46,-47,-48,]),'id':([20,21,22,23,24,25,26,28,30,31,32,33,34,35,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,96,97,100,101,103,104,105,106,109,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,142,156,158,159,162,163,164,165,166,167,168,173,174,201,206,210,215,228,229,230,231,232,233,235,236,238,239,242,243,244,247,248,249,250,252,255,258,261,264,267,270,273,276,283,290,291,295,296,297,298,331,332,333,342,343,344,345,350,352,354,356,358,360,362,364,366,369,371,373,379,380,381,382,385,386,392,393,394,400,403,411,422,423,424,425,431,432,433,441,446,447,448,449,457,459,464,466,471,473,],[-144,-144,-144,-144,36,-66,-67,50,95,-45,-146,-46,-47,-48,50,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,115,115,-49,115,115,115,115,115,149,115,-144,179,180,181,115,115,115,185,186,187,188,189,190,191,192,193,194,195,196,115,115,-87,115,115,115,-144,-144,-144,-144,-144,-144,115,-150,279,115,115,115,-26,-27,-28,-29,-30,-31,-144,-144,-144,-144,300,301,302,115,306,307,308,310,312,314,316,318,320,322,324,326,-60,-83,-61,115,115,115,115,-84,-144,-71,115,115,115,115,-117,-120,-123,-126,-129,-132,-135,-138,-141,384,-144,-70,-113,-114,-115,-116,-68,-157,115,115,-69,115,115,115,115,115,115,-108,115,115,115,115,115,115,115,115,115,-110,115,-111,-112,-109,]),'rCurlyBracket':([28,39,40,41,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,98,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[-144,97,-144,-51,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-50,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'if':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[51,51,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'print':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[52,52,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'while':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[53,53,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'scan':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[54,54,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'return':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[73,73,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'ols':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[74,74,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'las':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[75,75,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'rid':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[76,76,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'kmeans':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[77,77,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'mbm':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[78,78,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'tseries':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[79,79,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'mean_abs_err':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[80,80,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'mean_sqr_err':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[81,81,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'median_abs_err':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[82,82,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'mean':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[83,83,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'mode':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[84,84,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'median':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[85,85,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'prob':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[86,86,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'freq':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[87,87,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'variance':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[88,88,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'stddev':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[89,89,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'skew':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[90,90,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'kurt':([28,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,97,156,283,290,291,331,332,333,350,352,354,356,358,360,362,364,366,371,373,379,380,381,382,385,386,394,425,459,466,471,473,],[91,91,-52,-53,-54,-55,-56,-57,-58,-59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-49,-87,-60,-83,-61,-84,-144,-71,-117,-120,-123,-126,-129,-132,-135,-138,-141,-144,-70,-113,-114,-115,-116,-68,-157,-69,-108,-110,-111,-112,-109,]),'lParenthesis':([36,50,51,52,53,54,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,100,101,103,104,105,109,113,142,158,159,162,163,164,165,166,167,168,173,174,206,210,215,228,229,230,231,232,233,235,236,238,239,295,296,297,298,],[96,100,103,104,105,106,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,113,113,113,113,113,113,113,-144,113,113,113,113,-144,-144,-144,-144,-144,-144,113,-150,113,113,113,-26,-27,-28,-29,-30,-31,-144,-144,-144,-144,113,113,113,113,]),'lSqrBracket':([50,95,115,149,175,176,384,],[101,138,-144,101,101,-149,138,]),'assign':([50,99,102,212,],[-144,142,-65,-64,]),'not':([73,103,105,113,142,158,159,173,174,],[109,109,109,-144,109,109,109,109,-150,]),'cte_i':([73,96,100,101,103,104,105,106,109,113,121,122,123,138,142,158,159,162,163,164,165,166,167,168,173,174,206,210,215,228,229,230,231,232,233,235,236,238,239,247,295,296,297,298,342,343,344,345,392,393,400,403,411,422,423,424,431,432,433,441,446,447,448,449,457,464,],[116,116,116,116,116,116,116,150,116,-144,116,116,116,116,116,116,116,116,-144,-144,-144,-144,-144,-144,116,-150,116,116,116,-26,-27,-28,-29,-30,-31,-144,-144,-144,-144,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'cte_f':([73,96,100,101,103,104,105,106,109,113,121,122,123,138,142,158,159,162,163,164,165,166,167,168,173,174,206,210,215,228,229,230,231,232,233,235,236,238,239,247,295,296,297,298,342,343,344,345,392,393,400,403,411,422,423,424,431,432,433,441,446,447,448,449,457,464,],[117,117,117,117,117,117,117,151,117,-144,117,117,117,117,117,117,117,117,-144,-144,-144,-144,-144,-144,117,-150,117,117,117,-26,-27,-28,-29,-30,-31,-144,-144,-144,-144,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'comma':([95,102,110,111,112,114,115,116,117,137,139,141,143,146,148,149,150,151,152,153,154,155,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,212,221,227,234,237,241,279,280,282,289,293,294,299,300,301,302,303,304,310,312,314,316,318,320,322,324,326,327,328,335,336,337,338,339,340,374,375,376,377,378,395,396,397,398,399,405,406,407,408,409,416,417,418,419,426,427,428,429,434,435,436,437,442,443,444,445,450,452,453,458,461,465,],[-144,-65,-24,-144,-144,-41,-144,-144,-144,201,-147,206,210,215,219,-144,-75,-76,-77,-78,-88,-89,-32,-152,-36,-153,-144,-149,-43,-44,242,243,244,245,246,247,248,249,250,252,255,258,261,264,267,270,273,276,-64,-74,-144,-33,-37,-42,-144,-144,206,215,-25,-154,-144,341,342,343,344,345,252,255,258,261,264,267,270,273,276,369,-148,-34,-35,-38,-39,-40,-151,389,390,391,392,393,400,401,402,403,404,410,411,412,413,414,421,422,423,424,430,431,432,433,438,439,440,441,446,447,448,449,454,456,457,462,464,468,]),'else':([97,332,],[-49,372,]),'rParenthesis':([102,108,110,111,112,114,115,116,117,140,141,143,145,146,147,148,149,150,151,152,153,154,155,157,160,161,169,170,171,172,175,176,177,178,188,189,190,191,192,193,194,195,196,205,207,209,211,212,214,216,218,219,220,221,222,223,224,225,226,227,234,237,240,241,251,253,254,256,257,259,260,262,263,265,266,268,269,271,272,274,275,277,282,285,289,292,293,294,299,305,306,307,308,310,312,314,316,318,320,322,324,326,330,334,335,336,337,338,339,340,351,353,355,357,359,361,363,365,367,415,451,460,467,470,],[-65,-144,-24,-144,-144,-41,-144,-144,-144,204,-144,-144,213,-144,217,-144,-144,-75,-76,-77,-78,-88,-89,-144,-23,-144,-32,-152,-36,-153,-144,-149,-43,-44,-144,-144,-144,-144,-144,-144,-144,-144,-144,-80,-82,284,-86,-64,288,-73,291,-62,-63,-74,-19,-155,-21,-22,-144,-144,-33,-37,299,-42,309,-119,311,-122,313,-125,315,-128,317,-131,319,-134,321,-137,323,-140,325,-143,-144,-85,-144,-20,-25,-154,-144,346,347,348,349,-144,-144,-144,-144,-144,-144,-144,-144,-144,-81,-72,-34,-35,-38,-39,-40,-151,-118,-121,-124,-127,-130,-133,-136,-139,-142,420,455,463,469,472,]),'times':([102,112,114,115,116,117,171,172,175,176,177,178,212,241,299,339,340,],[-65,-144,-41,-144,-144,-144,238,-153,-144,-149,-43,-44,-64,-42,-144,-40,-151,]),'divide':([102,112,114,115,116,117,171,172,175,176,177,178,212,241,299,339,340,],[-65,-144,-41,-144,-144,-144,239,-153,-144,-149,-43,-44,-64,-42,-144,-40,-151,]),'plus':([102,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,237,241,299,337,338,339,340,],[-65,-144,-144,-41,-144,-144,-144,235,-152,-36,-153,-144,-149,-43,-44,-64,-37,-42,-144,-38,-39,-40,-151,]),'minus':([102,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,237,241,299,337,338,339,340,],[-65,-144,-144,-41,-144,-144,-144,236,-152,-36,-153,-144,-149,-43,-44,-64,-37,-42,-144,-38,-39,-40,-151,]),'greater':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,163,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'lessThan':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,164,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'greaterEquals':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,165,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'lessThanEquals':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,166,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'equals':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,167,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'notEquals':([102,110,111,112,114,115,116,117,169,170,171,172,175,176,177,178,212,234,237,241,299,335,336,337,338,339,340,],[-65,168,-144,-144,-41,-144,-144,-144,-32,-152,-36,-153,-144,-149,-43,-44,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'and':([102,108,110,111,112,114,115,116,117,161,169,170,171,172,175,176,177,178,212,227,234,237,241,293,294,299,335,336,337,338,339,340,],[-65,158,-24,-144,-144,-41,-144,-144,-144,158,-32,-152,-36,-153,-144,-149,-43,-44,-64,-144,-33,-37,-42,-25,-154,-144,-34,-35,-38,-39,-40,-151,]),'or':([102,108,110,111,112,114,115,116,117,161,169,170,171,172,175,176,177,178,212,227,234,237,241,293,294,299,335,336,337,338,339,340,],[-65,159,-24,-144,-144,-41,-144,-144,-144,159,-32,-152,-36,-153,-144,-149,-43,-44,-64,-144,-33,-37,-42,-25,-154,-144,-34,-35,-38,-39,-40,-151,]),'rSqrBracket':([102,111,112,114,115,116,117,144,169,170,171,172,175,176,177,178,203,212,234,237,241,299,335,336,337,338,339,340,],[-65,-144,-144,-41,-144,-144,-144,212,-32,-152,-36,-153,-144,-149,-43,-44,280,-64,-33,-37,-42,-144,-34,-35,-38,-39,-40,-151,]),'cte_str':([106,],[152,]),'FALSE':([106,341,389,390,391,401,402,404,410,412,414,421,430,438,440,468,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'TRUE':([106,341,389,390,391,401,402,404,410,412,414,421,430,438,440,468,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'START_GLOBAL_FUNCTION':([3,],[4,]),'empty':([3,6,8,9,15,20,21,22,23,27,28,40,50,95,108,111,112,113,115,116,117,136,137,141,143,146,148,149,157,161,163,164,165,166,167,168,175,188,189,190,191,192,193,194,195,196,213,226,227,235,236,238,239,279,280,282,289,299,310,312,314,316,318,320,322,324,326,327,332,371,372,],[5,10,10,17,17,32,32,32,32,38,41,41,102,139,160,170,172,174,176,176,176,199,202,207,211,216,220,102,223,160,174,174,174,174,174,174,102,253,256,259,262,265,268,271,274,277,287,223,294,174,174,174,174,139,328,207,216,340,253,256,259,262,265,268,271,274,277,370,373,386,388,]),'PROGRAM_A':([6,8,],[7,14,]),'VARS':([6,8,],[8,8,]),'METHOD':([6,8,9,15,],[9,9,15,15,]),'PROGRAM_B':([9,15,],[16,29,]),'VARS_A':([11,136,],[18,198,]),'TYPE':([11,12,136,],[19,25,19,]),'TYPEMETHOD':([12,],[24,]),'BLOCK':([13,204,217,286,387,],[27,281,290,332,394,]),'SAVE_TYPE':([20,21,22,23,],[31,33,34,35,]),'PRINTQUADS':([27,],[37,]),'BLOCK_A':([28,40,],[39,98,]),'STATEMENT':([28,40,],[40,40,]),'ASSIGNMENT':([28,40,],[42,42,]),'CONDITION':([28,40,],[43,43,]),'WRITE':([28,40,],[44,44,]),'LOOP':([28,40,],[45,45,]),'METHODCALL':([28,40,],[46,46,]),'READ':([28,40,],[47,47,]),'STATMETHODS':([28,40,],[48,48,]),'RETURN':([28,40,],[49,49,]),'ORDINARY_LEAST_SQUARES':([28,40,],[55,55,]),'LASSO':([28,40,],[56,56,]),'RIDGE':([28,40,],[57,57,]),'K_MEANS':([28,40,],[58,58,]),'MINI_BATCH_MEANS':([28,40,],[59,59,]),'TIME_SERIES_SPLIT':([28,40,],[60,60,]),'MEAN_ABSOLUTE_ERROR':([28,40,],[61,61,]),'MEAN_SQUARED_ERROR':([28,40,],[62,62,]),'MEDIAN_ABSOLUTE_ERROR':([28,40,],[63,63,]),'MEAN':([28,40,],[64,64,]),'MODE':([28,40,],[65,65,]),'MEDIAN':([28,40,],[66,66,]),'PROBABILITY':([28,40,],[67,67,]),'FREQUENCY':([28,40,],[68,68,]),'VARIANCE':([28,40,],[69,69,]),'STANDARD_DEVIATION':([28,40,],[70,70,]),'SKEWNESS':([28,40,],[71,71,]),'KURTOSI':([28,40,],[72,72,]),'VARS_B':([30,],[92,]),'SIMPLE':([30,201,],[93,278,]),'LIST':([30,369,],[94,383,]),'ISLIST':([50,149,175,],[99,221,241,]),'EXPLOG':([73,103,105,142,158,159,173,],[107,145,147,208,224,225,240,]),'EXPRESSION':([73,103,104,105,109,142,158,159,173,215,],[108,108,146,108,161,108,108,108,108,289,]),'EXP':([73,96,100,101,103,104,105,109,142,158,159,162,173,206,210,215,295,296,],[110,141,143,144,110,110,110,110,110,110,110,227,110,282,285,110,335,336,]),'TERM':([73,96,100,101,103,104,105,109,142,158,159,162,173,206,210,215,295,296,297,298,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,337,338,]),'FACTOR':([73,96,100,101,103,104,105,109,142,158,159,162,173,206,210,215,295,296,297,298,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'VARCONSTAUX':([73,96,100,101,103,104,105,109,121,122,123,138,142,158,159,162,173,206,210,215,247,295,296,297,298,342,343,344,345,392,393,400,403,411,422,423,424,431,432,433,441,446,447,448,449,457,464,],[114,114,114,114,114,114,114,114,182,183,184,203,114,114,114,114,114,114,114,114,305,114,114,114,114,375,376,377,378,398,399,405,408,416,427,428,429,435,436,437,445,450,451,452,453,461,467,]),'SAVE_VAR':([95,279,],[137,137,]),'PARAMS':([96,],[140,]),'VARCTE':([106,],[148,]),'BOOLEAN':([106,341,389,390,391,401,402,404,410,412,414,421,430,438,440,468,],[153,374,395,396,397,406,407,409,415,417,419,426,434,442,444,470,]),'EXPLOG_A':([108,161,],[157,226,]),'EXPRESSION_A':([110,],[162,]),'SOLVE_OPERATION_SUM_MINUS':([111,],[169,]),'SOLVE_OPERATION_TIMES_DIVIDE':([112,],[171,]),'PUSH_STACK_OPERATORS':([113,163,164,165,166,167,168,235,236,238,239,],[173,228,229,230,231,232,233,295,296,297,298,]),'PUSH_STACK_OPERANDS':([115,116,117,],[175,177,178,]),'VARS_C':([136,],[197,]),'SIMPLE_A':([137,],[200,]),'PARAMS_A':([141,282,],[205,330,]),'METHODCALL_A':([143,],[209,]),'WRITE_A':([146,289,],[214,334,]),'READ_A':([148,],[218,]),'SOLVE_OPERATION_LOGIC':([157,226,],[222,292,]),'EXP_A':([169,],[234,]),'TERM_A':([171,],[237,]),'MEAN_A':([188,310,],[251,351,]),'MODE_A':([189,312,],[254,353,]),'MEDIAN_A':([190,314,],[257,355,]),'PROBABILITY_A':([191,316,],[260,357,]),'FREQUENCY_A':([192,318,],[263,359,]),'VARIANCE_A':([193,320,],[266,361,]),'STANDARD_DEVIATION_A':([194,322,],[269,363,]),'SKEWNESS_A':([195,324,],[272,365,]),'KURTOSI_A':([196,326,],[275,367,]),'GENERATE_GOTOF_CONDITIONAL':([213,],[286,]),'SOLVE_OPERATION_RELATIONSHIP':([227,],[293,]),'SAVE_ARRAY':([280,],[327,]),'POP_STACK_OPERATORS':([299,],[339,]),'LIST_A':([327,],[368,]),'CONDITION_A':([332,],[371,]),'SOLVE_OPERATION_CONDITIONAL':([371,],[385,]),'GENERATE_GOTO_CONDITIONAL':([372,],[387,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program globalFunc START_GLOBAL_FUNCTION semicolon PROGRAM_A start BLOCK PRINTQUADS','PROGRAM',8,'p_PROGRAM','parser.py',24),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',29),
  ('PROGRAM_A -> METHOD PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',30),
  ('PROGRAM_A -> empty','PROGRAM_A',1,'p_PROGRAM_A','parser.py',31),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',36),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',37),
  ('VARS -> var VARS_A','VARS',2,'p_VARS','parser.py',42),
  ('VARS_A -> TYPE colon VARS_B semicolon VARS_C','VARS_A',5,'p_VARS_A','parser.py',47),
  ('VARS_B -> SIMPLE','VARS_B',1,'p_VARS_B','parser.py',52),
  ('VARS_B -> LIST','VARS_B',1,'p_VARS_B','parser.py',53),
  ('VARS_C -> VARS_A','VARS_C',1,'p_VARS_C','parser.py',58),
  ('VARS_C -> empty','VARS_C',1,'p_VARS_C','parser.py',59),
  ('SIMPLE -> id SAVE_VAR SIMPLE_A','SIMPLE',3,'p_SIMPLE','parser.py',64),
  ('SIMPLE_A -> comma SIMPLE','SIMPLE_A',2,'p_SIMPLE_A','parser.py',69),
  ('SIMPLE_A -> empty','SIMPLE_A',1,'p_SIMPLE_A','parser.py',70),
  ('LIST -> id lSqrBracket VARCONSTAUX rSqrBracket SAVE_ARRAY LIST_A','LIST',6,'p_LIST','parser.py',75),
  ('LIST_A -> comma LIST','LIST_A',2,'p_LIST_A','parser.py',80),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',81),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',86),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',87),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',93),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',94),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',95),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',101),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',102),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',108),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',109),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',110),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',111),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',112),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',113),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',118),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',119),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',125),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',126),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',132),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',133),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',139),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',140),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',146),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',147),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',154),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',155),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',156),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',162),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',163),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',164),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',165),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',170),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',176),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',177),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',183),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',184),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',185),
  ('STATEMENT -> LOOP','STATEMENT',1,'p_STATEMENT','parser.py',186),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',187),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',188),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',189),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',190),
  ('ASSIGNMENT -> id ISLIST assign EXPLOG semicolon','ASSIGNMENT',5,'p_ASSIGNMENT','parser.py',196),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',202),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',207),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',208),
  ('ISLIST -> lSqrBracket EXP rSqrBracket','ISLIST',3,'p_ISLIST','parser.py',213),
  ('ISLIST -> empty','ISLIST',1,'p_ISLIST','parser.py',214),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',219),
  ('TYPEMETHOD -> void','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',220),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',225),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',232),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',233),
  ('WRITE -> print lParenthesis EXPRESSION WRITE_A rParenthesis semicolon','WRITE',6,'p_WRITE','parser.py',240),
  ('WRITE_A -> comma EXPRESSION WRITE_A','WRITE_A',3,'p_WRITE_A','parser.py',245),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',246),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',251),
  ('VARCTE -> cte_i','VARCTE',1,'p_VARCTE','parser.py',252),
  ('VARCTE -> cte_f','VARCTE',1,'p_VARCTE','parser.py',253),
  ('VARCTE -> cte_str','VARCTE',1,'p_VARCTE','parser.py',254),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',255),
  ('METHOD -> func TYPEMETHOD id lParenthesis PARAMS rParenthesis BLOCK semicolon','METHOD',8,'p_METHOD','parser.py',260),
  ('PARAMS -> EXP PARAMS_A','PARAMS',2,'p_PARAMS','parser.py',265),
  ('PARAMS_A -> comma EXP PARAMS_A','PARAMS_A',3,'p_PARAMS_A','parser.py',270),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',271),
  ('LOOP -> while lParenthesis EXPLOG rParenthesis BLOCK','LOOP',5,'p_LOOP','parser.py',276),
  ('METHODCALL -> id lParenthesis EXP METHODCALL_A rParenthesis semicolon','METHODCALL',6,'p_METHODCALL','parser.py',281),
  ('METHODCALL_A -> comma EXP','METHODCALL_A',2,'p_METHODCALL_A','parser.py',286),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',287),
  ('RETURN -> return EXPLOG semicolon','RETURN',3,'p_RETURN','parser.py',292),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','parser.py',297),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','parser.py',298),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',303),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',304),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',305),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',306),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',307),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',308),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',309),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',310),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',311),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',312),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',313),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',314),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',315),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',316),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',317),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',318),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',319),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',320),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',325),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',330),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',335),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',340),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',345),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',350),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',355),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',360),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',365),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',370),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',375),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',376),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',381),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',386),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',387),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',392),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',397),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',398),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',403),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',408),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',409),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',414),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',419),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',420),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',425),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',430),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',431),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',436),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',441),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',442),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',447),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',452),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',453),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',458),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',463),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',464),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',469),
  ('START_GLOBAL_FUNCTION -> empty','START_GLOBAL_FUNCTION',1,'p_START_GLOBAL_FUNCTION','parser.py',499),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',511),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',521),
  ('SAVE_ARRAY -> empty','SAVE_ARRAY',1,'p_SAVE_ARRAY','parser.py',537),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',554),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',571),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',582),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',637),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',651),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',665),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',678),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',700),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',726),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',736),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',752),
]
