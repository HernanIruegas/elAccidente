
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'False True and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int kmeans kurt lCurlyBracket lParenthesis lSqrBracket las lessThan lessThanEquals mbm mean mean_abs_err mean_sqr_err median median_abs_err minus mode not notEquals ols or plus print prob program rCurlyBracket rParenthesis rSqrBracket return rid scan semicolon skew start stddev string times tseries var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS\n\t\n\tGENERATE_GOTO_MAIN : empty\n\t\n\tFILL_GOTO_MAIN : empty\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t\t| GENERATE_GOTO_MAIN PROGRAM_B\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : id assign VARCTE_AUX_VARS SIMPLE\n\t\t\t| id SAVE_VAR SIMPLE\n\t\t\t| id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A\n\t\t\t| empty\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : comma VARS_A\n\t\t\t| empty\n\t\n\tLIST : lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST\n\t\t\t| empty\n\t\n\tLIST_A : comma VARS_A\n\t\t| empty\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : False SAVE_ASSIGNED_VAR_BOOL\n\t\t\t\t\t| True SAVE_ASSIGNED_VAR_BOOL\n\t\n\tVALIDATE_NAME_ARRAY : empty\t\n\t\n\tACUMULATE_R : empty\n\t\n\tCALCULATE_ARRAY : empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t\t| BOOLEAN\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A\n\t\n\tASSIGNMENT_A : EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon\n\t\t\t\t| METHODCALL SOLVE_OPERATION_ASSIGNMENT\n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST\n\t\t\t| empty SOLVE_OFFSETS\n\t\n\tVALIDATE_INDEX : empty\n\t\n\tSOLVE_OFFSETS : empty\n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : EXP VALIDATE_PARAMETER \n\t\t\t\t\t| empty\n\t\n\tMETHODCALL_B : comma EXP VALIDATE_PARAMETER METHODCALL_B\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG GENERATE_QUAD_RETURN semicolon\n\t\n\tGENERATE_QUAD_RETURN : empty\n\t\n\tBOOLEAN : False PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| True PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : ORDINARY_LEAST_SQUARES\n\t\t\t\t| LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| PROBABILITY\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tORDINARY_LEAST_SQUARES : ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon\n\t\n\tLASSO : las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon\n\t\n\tRIDGE : rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tTIME_SERIES_SPLIT : tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon \n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon \n\t\n\tMEAN : mean lParenthesis id MEAN_A rParenthesis semicolon\n\t\n\tMEAN_A : comma id MEAN_A\n\t\t| empty\n\t\n\tMODE : mode lParenthesis id MODE_A rParenthesis semicolon\n\t\n\tMODE_A : comma id MODE_A\n\t\t| empty\n\t\n\tMEDIAN : median lParenthesis id MEDIAN_A rParenthesis semicolon\n\t\n\tMEDIAN_A : comma id MEDIAN_A\n\t\t| empty\n\t\n\tPROBABILITY : prob lParenthesis id PROBABILITY_A rParenthesis semicolon\n\t\n\tPROBABILITY_A : comma id PROBABILITY_A\n\t\t| empty\n\t\n\tFREQUENCY : freq lParenthesis id FREQUENCY_A rParenthesis semicolon\n\t\n\tFREQUENCY_A : comma id FREQUENCY_A\n\t\t| empty\n\t\n\tVARIANCE : variance lParenthesis id VARIANCE_A rParenthesis semicolon\n\t\n\tVARIANCE_A : comma id VARIANCE_A\n\t\t| empty\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION_A : comma id STANDARD_DEVIATION_A\n\t\t| empty\n\t\n\tSKEWNESS : skew lParenthesis id SKEWNESS_A rParenthesis semicolon\n\t\n\tSKEWNESS_A : comma id SKEWNESS_A\n\t\t| empty\n\t\n\tKURTOSI : kurt  lParenthesis id KURTOSI_A rParenthesis semicolon\n\t\n\tKURTOSI_A : comma id KURTOSI_A\n\t\t| empty\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR_BOOL : empty\n\t\n\tSAVE_PARAM : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n\tVALIDATE_PARAMETER : empty\n\t\n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,67,86,87,165,166,167,],[0,-168,-168,-178,-1,-200,-62,]),'void':([2,9,10,11,12,14,16,17,18,19,20,27,44,52,53,54,87,167,342,396,],[3,-168,15,-168,-168,-2,-4,-5,-168,-7,30,-6,-168,-8,-13,-14,-178,-62,-168,-97,]),'globalFunc':([3,4,5,],[-168,6,-170,]),'start':([5,15,26,],[-170,-168,36,]),'colon':([5,21,22,23,24,25,32,33,34,35,],[-170,31,-168,-168,-168,-168,-58,-59,-60,-61,]),'id':([5,22,23,24,25,28,29,30,31,32,33,34,35,38,45,64,68,72,74,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,149,167,172,173,177,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,209,210,223,234,235,238,239,240,241,242,243,244,269,270,272,273,279,280,293,300,301,302,303,304,305,306,307,308,311,312,313,314,316,319,322,325,328,331,334,337,340,346,347,348,349,354,361,364,365,408,411,413,415,419,425,426,427,428,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,492,493,494,495,497,503,506,514,525,526,527,528,534,535,536,544,549,550,551,552,560,562,567,569,574,576,],[-170,-168,-168,-168,-168,37,-84,-168,40,-58,-59,-60,-61,-85,55,40,100,145,151,100,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,151,-168,-62,151,151,226,151,245,246,247,151,151,151,251,252,253,254,255,256,257,258,259,260,261,262,151,-186,151,151,151,151,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,151,-110,-38,-39,-40,-41,-42,-43,369,370,371,151,375,376,377,379,381,383,385,387,389,391,393,395,151,151,151,151,410,151,151,-77,40,-74,-168,151,-168,151,151,151,151,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,151,151,-105,-183,-87,151,151,151,151,151,151,-132,151,151,151,151,151,151,151,151,151,-134,151,-135,-136,-133,]),'semicolon':([6,7,8,31,39,40,41,46,48,55,56,57,58,59,60,61,62,63,64,65,73,75,76,77,78,79,80,81,82,83,84,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,178,179,181,205,206,207,208,211,212,213,214,215,216,217,231,232,233,236,237,267,268,271,275,277,278,294,295,296,297,298,299,345,350,352,353,366,367,368,378,380,382,384,386,388,390,392,394,400,401,402,403,404,405,407,408,409,410,412,420,429,430,431,432,452,453,454,455,456,458,476,523,558,566,572,575,],[-168,9,-169,-168,44,-168,-12,-168,-171,-168,-168,-168,-168,-168,-25,-168,-168,-10,-168,-16,-21,-168,-9,-168,-185,-168,-168,-26,-173,-27,-15,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,-22,-172,-23,-24,-168,-168,-36,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,293,-111,-168,-35,-168,-168,-45,-49,-54,-168,-18,-31,-191,-33,-34,-168,-168,-80,-168,-168,-30,-32,-37,-190,433,435,437,439,441,443,445,447,449,-46,-47,-50,-51,-52,-187,-11,-168,-20,-168,-168,463,472,473,474,475,-168,-19,-184,477,-192,478,-17,528,562,569,574,576,]),'lCurlyBracket':([8,36,42,49,50,104,175,176,200,263,264,281,358,359,363,422,461,482,483,],[-169,-168,-168,68,-3,-168,-196,68,-168,68,-177,-168,68,-193,-168,68,-168,68,-195,]),'lParenthesis':([8,37,43,74,100,101,102,103,105,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,170,171,172,173,174,175,180,209,210,219,220,223,234,235,238,239,240,241,242,243,244,269,270,272,273,279,280,285,300,301,302,303,304,305,346,347,348,349,354,361,364,410,415,454,],[-169,-168,51,149,-168,172,173,-168,177,149,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,-168,-168,-180,149,149,223,-196,149,149,-186,280,-181,149,149,149,149,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,149,364,-38,-39,-40,-41,-42,-43,149,149,149,149,149,149,149,-168,149,-180,]),'var':([9,11,44,52,53,54,],[13,13,13,-8,-13,-14,]),'func':([9,11,12,14,18,44,52,53,54,87,167,342,396,],[-168,-168,20,-2,20,-168,-8,-13,-14,-178,-62,-168,-97,]),'int':([13,20,51,398,],[22,22,22,22,]),'float':([13,20,51,398,565,],[23,23,23,23,568,]),'string':([13,20,51,309,310,398,516,542,557,559,],[24,24,24,372,373,24,521,546,561,563,]),'bool':([13,20,51,398,],[25,25,25,25,]),'assign':([40,75,100,157,158,169,171,218,267,345,],[45,-168,-168,-83,-81,-168,-184,279,-168,-80,]),'comma':([40,46,48,55,56,57,58,59,60,61,62,73,75,77,78,79,80,81,82,83,145,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,181,201,202,205,206,207,208,211,212,213,214,215,216,217,222,225,226,227,228,229,230,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,265,266,267,268,271,275,277,278,280,282,283,289,290,291,292,299,343,344,345,350,352,353,355,356,357,367,368,369,370,371,372,373,379,381,383,385,387,389,391,393,395,400,401,402,403,404,405,417,418,421,452,459,464,467,468,469,470,471,476,479,498,499,500,501,502,508,509,510,511,512,519,520,521,522,529,530,531,532,537,538,539,540,545,546,547,548,553,555,556,561,564,568,],[-168,64,-171,-168,64,-168,-168,-168,-25,-168,-168,-21,-168,-168,-185,-168,-168,-26,-173,-27,-168,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,-22,-172,-23,-24,-36,-168,-174,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-168,287,-168,-168,-168,-168,-96,306,307,308,309,310,311,312,313,314,316,319,322,325,328,331,334,337,340,-168,-179,-168,-45,-49,-54,-168,-18,-168,361,-199,-92,-93,-94,-95,-168,398,-175,-80,-168,408,-30,415,-168,-107,-37,-190,424,425,426,427,428,316,319,322,325,328,331,334,337,340,-46,-47,-50,-51,-52,-187,-106,-182,-168,-168,-168,361,489,490,491,492,493,-17,415,503,504,505,506,507,513,514,515,516,517,524,525,526,527,533,534,535,536,541,542,543,544,549,550,551,552,557,559,560,565,567,571,]),'lSqrBracket':([40,47,48,55,100,151,169,171,211,212,217,226,267,410,452,454,],[-168,66,-28,74,-168,-168,74,-184,74,-184,276,74,74,-168,276,-184,]),'cte_i':([45,66,74,124,149,172,173,177,180,185,186,187,209,210,223,234,235,238,239,240,241,242,243,244,269,270,272,273,276,279,280,300,301,302,303,304,305,311,346,347,348,349,354,361,364,415,425,426,427,428,492,493,503,506,514,525,526,527,534,535,536,544,549,550,551,552,560,567,],[57,85,152,152,-168,152,152,227,152,152,152,152,152,-186,152,152,152,152,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,351,-168,152,-38,-39,-40,-41,-42,-43,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'cte_f':([45,74,124,149,172,173,177,180,185,186,187,209,210,223,234,235,238,239,240,241,242,243,244,269,270,272,273,279,280,300,301,302,303,304,305,311,346,347,348,349,354,361,364,415,425,426,427,428,492,493,503,506,514,525,526,527,534,535,536,544,549,550,551,552,560,567,],[58,153,153,-168,153,153,228,153,153,153,153,153,-186,153,153,153,153,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,153,-38,-39,-40,-41,-42,-43,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'cte_str':([45,177,],[59,229,]),'False':([45,74,124,149,172,173,177,180,185,186,187,209,210,223,234,235,238,239,240,241,242,243,244,269,270,272,273,279,280,300,301,302,303,304,305,311,346,347,348,349,354,361,364,415,424,425,426,427,428,489,490,491,492,493,503,504,505,506,507,513,514,515,517,524,525,526,527,533,534,535,536,541,543,544,549,550,551,552,560,567,571,],[61,155,155,-168,155,155,155,155,155,155,155,155,-186,155,155,155,155,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,155,-38,-39,-40,-41,-42,-43,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'True':([45,74,124,149,172,173,177,180,185,186,187,209,210,223,234,235,238,239,240,241,242,243,244,269,270,272,273,279,280,300,301,302,303,304,305,311,346,347,348,349,354,361,364,415,424,425,426,427,428,489,490,491,492,493,503,504,505,506,507,513,514,515,517,524,525,526,527,533,534,535,536,541,543,544,549,550,551,552,560,567,571,],[62,156,156,-168,156,156,156,156,156,156,156,156,-186,156,156,156,156,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,156,-38,-39,-40,-41,-42,-43,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'rParenthesis':([51,69,70,71,75,78,143,144,145,147,148,150,151,152,153,154,155,156,157,158,179,181,201,202,205,206,207,208,211,212,213,214,215,216,221,222,225,226,227,228,229,230,233,236,237,254,255,256,257,258,259,260,261,262,265,266,267,268,271,274,275,280,282,283,284,286,287,288,289,290,291,292,294,295,296,297,298,299,315,317,318,320,321,323,324,326,327,329,330,332,333,335,336,338,339,341,343,344,345,350,355,356,357,360,362,366,367,368,374,375,376,377,379,381,383,385,387,389,391,393,395,397,399,400,401,402,403,404,405,414,416,417,418,421,423,434,436,438,440,442,444,446,448,450,451,459,464,479,484,496,518,554,563,570,573,],[-168,-168,-98,-99,-168,-185,200,-176,-168,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,-168,-36,-168,-174,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,281,-168,-168,-168,-168,-168,-168,-96,-168,-35,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-168,-179,-168,-45,-49,350,-54,-168,-168,-199,363,365,-78,-79,-92,-93,-94,-95,-31,-191,-33,-34,-168,-168,378,-143,380,-146,382,-149,384,-152,386,-155,388,-158,390,-161,392,-164,394,-167,-168,-175,-80,-168,-168,-168,-107,420,-91,-32,-37,-190,429,430,431,432,-168,-168,-168,-168,-168,-168,-168,-168,-168,-100,-102,-46,-47,-50,-51,-52,-187,458,-109,-106,-182,-168,466,-142,-145,-148,-151,-154,-157,-160,-163,-166,-101,-168,-168,-168,-90,-108,523,558,566,572,575,]),'rCurlyBracket':([68,88,89,90,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,168,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[-168,167,-168,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-63,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'if':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[101,101,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'print':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[102,102,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'while':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,224,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[103,103,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,285,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'do':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[104,104,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'scan':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[105,105,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'return':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[124,124,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'ols':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[125,125,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'las':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[126,126,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'rid':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[127,127,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'kmeans':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[128,128,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'mbm':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[129,129,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'tseries':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[130,130,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'mean_abs_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[131,131,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'mean_sqr_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[132,132,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'median_abs_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[133,133,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'mean':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[134,134,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'mode':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[135,135,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'median':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[136,136,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'prob':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[137,137,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'freq':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[138,138,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'variance':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[139,139,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'stddev':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[140,140,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'skew':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[141,141,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'kurt':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,167,293,365,411,413,419,433,435,437,439,441,443,445,447,449,456,457,460,462,463,465,466,472,473,474,475,477,478,480,481,485,486,487,488,494,495,497,528,562,569,574,576,],[142,142,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-62,-110,-77,-74,-168,-168,-141,-144,-147,-150,-153,-156,-159,-162,-165,-192,-76,-168,-88,-89,-168,-168,-137,-138,-139,-140,-75,-168,-86,-194,-103,-197,-104,-198,-105,-183,-87,-132,-134,-135,-136,-133,]),'times':([75,78,148,150,151,152,153,154,155,156,157,158,207,208,211,212,213,214,215,216,267,275,345,350,404,405,410,454,],[-168,-185,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,272,-189,-168,-184,-55,-56,-112,-113,-168,-54,-80,-168,-52,-187,-168,-184,]),'divide':([75,78,148,150,151,152,153,154,155,156,157,158,207,208,211,212,213,214,215,216,267,275,345,350,404,405,410,454,],[-168,-185,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,273,-189,-168,-184,-55,-56,-112,-113,-168,-54,-80,-168,-52,-187,-168,-184,]),'plus':([75,78,147,148,150,151,152,153,154,155,156,157,158,205,206,207,208,211,212,213,214,215,216,267,271,275,345,350,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,269,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-49,-54,-80,-168,-50,-51,-52,-187,-168,-184,]),'minus':([75,78,147,148,150,151,152,153,154,155,156,157,158,205,206,207,208,211,212,213,214,215,216,267,271,275,345,350,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,270,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-49,-54,-80,-168,-50,-51,-52,-187,-168,-184,]),'rSqrBracket':([75,78,85,146,147,148,150,151,152,153,154,155,156,157,158,163,164,203,204,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,351,400,401,402,403,404,405,406,],[-168,-185,-168,-168,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,217,-29,267,-82,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-168,-46,-47,-50,-51,-52,-187,452,]),'greater':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,239,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'lessThan':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,240,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'greaterEquals':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,241,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'lessThanEquals':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,242,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'equals':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,243,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'notEquals':([75,78,147,148,150,151,152,153,154,155,156,157,158,181,205,206,207,208,211,212,213,214,215,216,267,268,271,275,345,350,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,244,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,-168,-45,-49,-54,-80,-168,-46,-47,-50,-51,-52,-187,-168,-184,]),'and':([75,78,147,148,150,151,152,153,154,155,156,157,158,179,181,205,206,207,208,211,212,213,214,215,216,237,267,268,271,275,299,345,350,367,368,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,234,-36,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,234,-168,-45,-49,-54,-168,-80,-168,-37,-190,-46,-47,-50,-51,-52,-187,-168,-184,]),'or':([75,78,147,148,150,151,152,153,154,155,156,157,158,179,181,205,206,207,208,211,212,213,214,215,216,237,267,268,271,275,299,345,350,367,368,400,401,402,403,404,405,410,454,],[-168,-185,-168,-168,-53,-168,-168,-168,-57,-168,-168,-83,-81,235,-36,-44,-188,-48,-189,-168,-184,-55,-56,-112,-113,235,-168,-45,-49,-54,-168,-80,-168,-37,-190,-46,-47,-50,-51,-52,-187,-168,-184,]),'not':([124,149,172,209,210,223,234,235,279,354,364,],[180,-168,180,180,-186,180,180,180,-168,180,180,]),'else':([167,419,],[-62,461,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,15,22,23,24,25,30,],[4,26,32,33,34,35,38,]),'empty':([3,6,9,11,12,15,18,22,23,24,25,30,31,36,37,40,42,44,46,51,55,56,57,58,59,61,62,64,67,68,69,75,77,79,80,85,86,89,100,103,104,145,146,147,148,149,151,152,153,155,156,169,170,178,179,200,201,211,217,222,225,226,227,228,229,233,237,239,240,241,242,243,244,254,255,256,257,258,259,260,261,262,265,267,269,270,272,273,277,279,280,281,282,298,299,342,343,350,351,352,355,356,363,379,381,383,385,387,389,391,393,395,408,410,412,413,419,421,452,459,460,461,464,465,466,478,479,],[5,8,14,14,19,5,19,5,5,5,5,5,41,8,8,48,50,54,65,71,75,65,78,78,78,82,82,41,87,90,144,157,160,160,160,164,166,90,171,175,175,202,204,206,208,210,212,78,78,78,78,75,220,232,236,264,266,75,278,283,288,75,78,78,78,295,236,210,210,210,210,210,210,317,320,323,326,329,332,335,338,341,344,75,210,210,210,210,353,210,357,359,362,295,368,87,399,405,164,409,416,418,359,317,320,323,326,329,332,335,338,341,41,454,456,456,462,283,278,418,481,483,362,486,488,495,416,]),'START_FUNCTION':([6,36,37,],[7,42,43,]),'PROGRAM_A':([9,11,],[10,16,]),'VARS':([9,11,44,],[11,11,53,]),'GENERATE_GOTO_MAIN':([9,11,],[12,12,]),'PROGRAM_B':([12,18,],[17,27,]),'METHOD':([12,18,],[18,18,]),'TYPE':([13,20,51,398,],[21,29,72,72,]),'TYPEMETHOD':([20,],[28,]),'VARS_A':([31,64,408,],[39,84,453,]),'SAVE_VAR':([40,],[46,]),'VALIDATE_NAME_ARRAY':([40,],[47,]),'FILL_GOTO_MAIN':([42,],[49,]),'VARS_B':([44,],[52,]),'VARCTE_AUX_VARS':([45,],[56,]),'BOOLEAN_AUX_VARS':([45,],[60,]),'SIMPLE':([46,56,],[63,76,]),'BLOCK':([49,176,263,358,422,482,],[67,224,342,419,465,497,]),'METHOD_A':([51,],[69,]),'PARAMS':([51,398,],[70,451,]),'ISLIST':([55,169,211,226,267,],[73,218,275,289,345,]),'PUSH_STACK_OPERANDS_CONSTANT':([57,58,59,152,153,155,156,227,228,229,],[77,79,80,213,214,215,216,290,291,292,]),'SAVE_ASSIGNED_VAR_BOOL':([61,62,],[81,83,]),'END_PROCEDURE':([67,342,],[86,396,]),'BLOCK_A':([68,89,],[88,168,]),'STATEMENT':([68,89,],[89,89,]),'ASSIGNMENT':([68,89,],[91,91,]),'CONDITION':([68,89,],[92,92,]),'WRITE':([68,89,],[93,93,]),'PRE_CONDITIONAL_LOOP':([68,89,],[94,94,]),'POST_CONDITIONAL_LOOP':([68,89,],[95,95,]),'METHODCALL':([68,89,354,],[96,96,413,]),'READ':([68,89,],[97,97,]),'STATMETHODS':([68,89,],[98,98,]),'RETURN':([68,89,],[99,99,]),'ORDINARY_LEAST_SQUARES':([68,89,],[106,106,]),'LASSO':([68,89,],[107,107,]),'RIDGE':([68,89,],[108,108,]),'K_MEANS':([68,89,],[109,109,]),'MINI_BATCH_MEANS':([68,89,],[110,110,]),'TIME_SERIES_SPLIT':([68,89,],[111,111,]),'MEAN_ABSOLUTE_ERROR':([68,89,],[112,112,]),'MEAN_SQUARED_ERROR':([68,89,],[113,113,]),'MEDIAN_ABSOLUTE_ERROR':([68,89,],[114,114,]),'MEAN':([68,89,],[115,115,]),'MODE':([68,89,],[116,116,]),'MEDIAN':([68,89,],[117,117,]),'PROBABILITY':([68,89,],[118,118,]),'FREQUENCY':([68,89,],[119,119,]),'VARIANCE':([68,89,],[120,120,]),'STANDARD_DEVIATION':([68,89,],[121,121,]),'SKEWNESS':([68,89,],[122,122,]),'KURTOSI':([68,89,],[123,123,]),'SAVE_COUNTER_PARAM':([69,],[143,]),'EXP':([74,124,172,173,180,209,223,234,235,238,280,346,347,354,361,364,415,],[146,181,181,181,181,181,181,181,181,299,356,400,401,181,181,181,459,]),'TERM':([74,124,172,173,180,209,223,234,235,238,280,346,347,348,349,354,361,364,415,],[147,147,147,147,147,147,147,147,147,147,147,147,147,402,403,147,147,147,147,]),'FACTOR':([74,124,172,173,180,209,223,234,235,238,280,346,347,348,349,354,361,364,415,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'VARCONSTAUX':([74,124,172,173,180,185,186,187,209,223,234,235,238,280,311,346,347,348,349,354,361,364,415,425,426,427,428,492,493,503,506,514,525,526,527,534,535,536,544,549,550,551,552,560,567,],[150,150,150,150,150,248,249,250,150,150,150,150,150,150,374,150,150,150,150,150,150,150,150,468,469,470,471,501,502,508,511,519,530,531,532,538,539,540,548,553,554,555,556,564,570,]),'BOOLEAN':([74,124,172,173,177,180,185,186,187,209,223,234,235,238,280,311,346,347,348,349,354,361,364,415,424,425,426,427,428,489,490,491,492,493,503,504,505,506,507,513,514,515,517,524,525,526,527,533,534,535,536,541,543,544,549,550,551,552,560,567,571,],[154,154,154,154,230,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,467,154,154,154,154,498,499,500,154,154,154,509,510,154,512,518,154,520,522,529,154,154,154,537,154,154,154,545,547,154,154,154,154,154,154,154,573,]),'SOLVE_OFFSETS':([75,],[158,]),'SAVE_ASSIGNED_VAR':([77,79,80,],[159,161,162,]),'ACUMULATE_R':([85,351,],[163,406,]),'PRINTQUADS':([86,],[165,]),'PUSH_STACK_OPERANDS':([100,151,410,],[169,211,211,]),'VALIDATE_FUNCTION_NAME':([100,410,],[170,170,]),'PUSH_STACK_JUMPS':([103,104,],[174,176,]),'EXPLOG':([124,172,209,223,234,235,354,364,],[178,221,274,284,296,297,412,423,]),'EXPRESSION':([124,172,173,180,209,223,234,235,354,361,364,],[179,179,222,237,179,179,179,179,179,421,179,]),'SAVE_PARAM':([145,],[201,]),'VALIDATE_INDEX':([146,],[203,]),'SOLVE_OPERATION_SUM_MINUS':([147,],[205,]),'SOLVE_OPERATION_TIMES_DIVIDE':([148,],[207,]),'PUSH_STACK_OPERATORS':([149,239,240,241,242,243,244,269,270,272,273,279,],[209,300,301,302,303,304,305,346,347,348,349,354,]),'ERA':([170,],[219,]),'VARCTE':([177,],[225,]),'GENERATE_QUAD_RETURN':([178,],[231,]),'EXPLOG_A':([179,237,],[233,298,]),'EXPRESSION_A':([181,],[238,]),'SAVE_COUNTER_QUAD':([200,],[263,]),'SAVE_PARAM_TYPE':([201,],[265,]),'EXP_A':([205,],[268,]),'TERM_A':([207,],[271,]),'LIST':([217,452,],[277,476,]),'GENERATE_QUAD_PRINT':([222,421,],[282,464,]),'READ_A':([225,],[286,]),'SOLVE_OPERATION_LOGIC':([233,298,],[294,366,]),'MEAN_A':([254,379,],[315,434,]),'MODE_A':([255,381,],[318,436,]),'MEDIAN_A':([256,383,],[321,438,]),'PROBABILITY_A':([257,385,],[324,440,]),'FREQUENCY_A':([258,387,],[327,442,]),'VARIANCE_A':([259,389,],[330,444,]),'STANDARD_DEVIATION_A':([260,391,],[333,446,]),'SKEWNESS_A':([261,393,],[336,448,]),'KURTOSI_A':([262,395,],[339,450,]),'INCREMENT_PARAM_COUNTER':([265,],[343,]),'CALCULATE_ARRAY':([277,],[352,]),'METHODCALL_A':([280,],[355,]),'GENERATE_GOTOF_CONDITIONAL':([281,363,],[358,422,]),'WRITE_A':([282,464,],[360,484,]),'SOLVE_OPERATION_RELATIONSHIP':([299,],[367,]),'PARAMS_A':([343,],[397,]),'POP_STACK_OPERATORS':([350,],[404,]),'LIST_A':([352,],[407,]),'ASSIGNMENT_A':([354,],[411,]),'METHODCALL_B':([355,479,],[414,496,]),'VALIDATE_PARAMETER':([356,459,],[417,479,]),'SOLVE_OPERATION_ASSIGNMENT':([412,413,],[455,457,]),'CONDITION_A':([419,],[460,]),'SOLVE_OPERATION_CONDITIONAL':([460,],[480,]),'GENERATE_GOTO_CONDITIONAL':([461,],[482,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([465,],[485,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([466,],[487,]),'VALIDATE_METHOD_CALL':([478,],[494,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS','PROGRAM',15,'p_PROGRAM','parser.py',100),
  ('GENERATE_GOTO_MAIN -> empty','GENERATE_GOTO_MAIN',1,'p_GENERATE_GOTO_MAIN','parser.py',106),
  ('FILL_GOTO_MAIN -> empty','FILL_GOTO_MAIN',1,'p_FILL_GOTO_MAIN','parser.py',118),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',129),
  ('PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',130),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',135),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',136),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',144),
  ('VARS_A -> id assign VARCTE_AUX_VARS SIMPLE','VARS_A',4,'p_VARS_A','parser.py',149),
  ('VARS_A -> id SAVE_VAR SIMPLE','VARS_A',3,'p_VARS_A','parser.py',150),
  ('VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A','VARS_A',9,'p_VARS_A','parser.py',151),
  ('VARS_A -> empty','VARS_A',1,'p_VARS_A','parser.py',152),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',157),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',158),
  ('SIMPLE -> comma VARS_A','SIMPLE',2,'p_SIMPLE','parser.py',163),
  ('SIMPLE -> empty','SIMPLE',1,'p_SIMPLE','parser.py',164),
  ('LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST','LIST',5,'p_LIST','parser.py',169),
  ('LIST -> empty','LIST',1,'p_LIST','parser.py',170),
  ('LIST_A -> comma VARS_A','LIST_A',2,'p_LIST_A','parser.py',175),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',176),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',182),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',183),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',184),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',185),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',186),
  ('BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',192),
  ('BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',193),
  ('VALIDATE_NAME_ARRAY -> empty','VALIDATE_NAME_ARRAY',1,'p_VALIDATE_NAME_ARRAY','parser.py',206),
  ('ACUMULATE_R -> empty','ACUMULATE_R',1,'p_ACUMULATE_R','parser.py',225),
  ('CALCULATE_ARRAY -> empty','CALCULATE_ARRAY',1,'p_CALCULATE_ARRAY','parser.py',253),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',308),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',309),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',314),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',315),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',316),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',321),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',322),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',327),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',328),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',329),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',330),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',331),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',332),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',337),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',338),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',343),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',344),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',349),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',350),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',355),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',356),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',361),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',362),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',368),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',369),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',370),
  ('VARCONSTAUX -> BOOLEAN','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',371),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',376),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',377),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',378),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',379),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',384),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',389),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',390),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',395),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',396),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',397),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',398),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',399),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',400),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',401),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',402),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',403),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A','ASSIGNMENT',6,'p_ASSIGNMENT','parser.py',408),
  ('ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT_A',3,'p_ASSIGNMENT_A','parser.py',413),
  ('ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT','ASSIGNMENT_A',2,'p_ASSIGNMENT_A','parser.py',414),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',419),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',424),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',425),
  ('ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST','ISLIST',5,'p_ISLIST','parser.py',435),
  ('ISLIST -> empty SOLVE_OFFSETS','ISLIST',2,'p_ISLIST','parser.py',436),
  ('VALIDATE_INDEX -> empty','VALIDATE_INDEX',1,'p_VALIDATE_INDEX','parser.py',448),
  ('SOLVE_OFFSETS -> empty','SOLVE_OFFSETS',1,'p_SOLVE_OFFSETS','parser.py',509),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',592),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',593),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',598),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',603),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',604),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',609),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',614),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',615),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',620),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',621),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',622),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',623),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',624),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',629),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',634),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',635),
  ('PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',640),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',645),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',646),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',651),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',656),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',9,'p_METHODCALL','parser.py',661),
  ('METHODCALL_A -> EXP VALIDATE_PARAMETER','METHODCALL_A',2,'p_METHODCALL_A','parser.py',666),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',667),
  ('METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B','METHODCALL_B',4,'p_METHODCALL_B','parser.py',672),
  ('METHODCALL_B -> empty','METHODCALL_B',1,'p_METHODCALL_B','parser.py',673),
  ('RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon','RETURN',4,'p_RETURN','parser.py',678),
  ('GENERATE_QUAD_RETURN -> empty','GENERATE_QUAD_RETURN',1,'p_GENERATE_QUAD_RETURN','parser.py',683),
  ('BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',695),
  ('BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',696),
  ('STATMETHODS -> ORDINARY_LEAST_SQUARES','STATMETHODS',1,'p_STATMETHODS','parser.py',701),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',702),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',703),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',704),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',705),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',706),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',707),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',708),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',709),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',710),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',711),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',712),
  ('STATMETHODS -> PROBABILITY','STATMETHODS',1,'p_STATMETHODS','parser.py',713),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',714),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',715),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',716),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',717),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',718),
  ('ORDINARY_LEAST_SQUARES -> ols lParenthesis id comma id comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN rParenthesis semicolon','ORDINARY_LEAST_SQUARES',15,'p_ORDINARY_LEAST_SQUARES','parser.py',723),
  ('LASSO -> las lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma string comma float comma BOOLEAN rParenthesis semicolon','LASSO',29,'p_LASSO','parser.py',728),
  ('RIDGE -> rid lParenthesis id comma id comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX rParenthesis semicolon','RIDGE',23,'p_RIDGE','parser.py',733),
  ('K_MEANS -> kmeans lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma VARCONSTAUX comma string rParenthesis semicolon','K_MEANS',25,'p_K_MEANS','parser.py',738),
  ('MINI_BATCH_MEANS -> mbm lParenthesis VARCONSTAUX comma string comma VARCONSTAUX comma VARCONSTAUX comma BOOLEAN comma BOOLEAN comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',27,'p_MINI_BATCH_MEANS','parser.py',743),
  ('TIME_SERIES_SPLIT -> tseries lParenthesis VARCONSTAUX comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',7,'p_TIME_SERIES_SPLIT','parser.py',748),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',753),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',758),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',763),
  ('MEAN -> mean lParenthesis id MEAN_A rParenthesis semicolon','MEAN',6,'p_MEAN','parser.py',768),
  ('MEAN_A -> comma id MEAN_A','MEAN_A',3,'p_MEAN_A','parser.py',773),
  ('MEAN_A -> empty','MEAN_A',1,'p_MEAN_A','parser.py',774),
  ('MODE -> mode lParenthesis id MODE_A rParenthesis semicolon','MODE',6,'p_MODE','parser.py',779),
  ('MODE_A -> comma id MODE_A','MODE_A',3,'p_MODE_A','parser.py',784),
  ('MODE_A -> empty','MODE_A',1,'p_MODE_A','parser.py',785),
  ('MEDIAN -> median lParenthesis id MEDIAN_A rParenthesis semicolon','MEDIAN',6,'p_MEDIAN','parser.py',790),
  ('MEDIAN_A -> comma id MEDIAN_A','MEDIAN_A',3,'p_MEDIAN_A','parser.py',795),
  ('MEDIAN_A -> empty','MEDIAN_A',1,'p_MEDIAN_A','parser.py',796),
  ('PROBABILITY -> prob lParenthesis id PROBABILITY_A rParenthesis semicolon','PROBABILITY',6,'p_PROBABILITY','parser.py',801),
  ('PROBABILITY_A -> comma id PROBABILITY_A','PROBABILITY_A',3,'p_PROBABILITY_A','parser.py',806),
  ('PROBABILITY_A -> empty','PROBABILITY_A',1,'p_PROBABILITY_A','parser.py',807),
  ('FREQUENCY -> freq lParenthesis id FREQUENCY_A rParenthesis semicolon','FREQUENCY',6,'p_FREQUENCY','parser.py',812),
  ('FREQUENCY_A -> comma id FREQUENCY_A','FREQUENCY_A',3,'p_FREQUENCY_A','parser.py',817),
  ('FREQUENCY_A -> empty','FREQUENCY_A',1,'p_FREQUENCY_A','parser.py',818),
  ('VARIANCE -> variance lParenthesis id VARIANCE_A rParenthesis semicolon','VARIANCE',6,'p_VARIANCE','parser.py',823),
  ('VARIANCE_A -> comma id VARIANCE_A','VARIANCE_A',3,'p_VARIANCE_A','parser.py',828),
  ('VARIANCE_A -> empty','VARIANCE_A',1,'p_VARIANCE_A','parser.py',829),
  ('STANDARD_DEVIATION -> stddev lParenthesis id STANDARD_DEVIATION_A rParenthesis semicolon','STANDARD_DEVIATION',6,'p_STANDARD_DEVIATION','parser.py',834),
  ('STANDARD_DEVIATION_A -> comma id STANDARD_DEVIATION_A','STANDARD_DEVIATION_A',3,'p_STANDARD_DEVIATION_A','parser.py',839),
  ('STANDARD_DEVIATION_A -> empty','STANDARD_DEVIATION_A',1,'p_STANDARD_DEVIATION_A','parser.py',840),
  ('SKEWNESS -> skew lParenthesis id SKEWNESS_A rParenthesis semicolon','SKEWNESS',6,'p_SKEWNESS','parser.py',845),
  ('SKEWNESS_A -> comma id SKEWNESS_A','SKEWNESS_A',3,'p_SKEWNESS_A','parser.py',850),
  ('SKEWNESS_A -> empty','SKEWNESS_A',1,'p_SKEWNESS_A','parser.py',851),
  ('KURTOSI -> kurt lParenthesis id KURTOSI_A rParenthesis semicolon','KURTOSI',6,'p_KURTOSI','parser.py',856),
  ('KURTOSI_A -> comma id KURTOSI_A','KURTOSI_A',3,'p_KURTOSI_A','parser.py',861),
  ('KURTOSI_A -> empty','KURTOSI_A',1,'p_KURTOSI_A','parser.py',862),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',867),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',912),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',929),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',939),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',960),
  ('SAVE_ASSIGNED_VAR_BOOL -> empty','SAVE_ASSIGNED_VAR_BOOL',1,'p_SAVE_ASSIGNED_VAR_BOOL','parser.py',991),
  ('SAVE_PARAM -> empty','SAVE_PARAM',1,'p_SAVE_PARAM','parser.py',1034),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',1100),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',1110),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',1121),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',1131),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',1149),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',1158),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',1174),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',1193),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',1218),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',1252),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',1287),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',1327),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1337),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1403),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1416),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1429),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1442),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1481),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1507),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1534),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1545),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1563),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1577),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1595),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1616),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1631),
]
