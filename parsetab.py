
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'False True and assign bool colon comma cte_f cte_i cte_str divide do else equals float freq func globalFunc greater greaterEquals id if int k_means kurt lCurlyBracket lParenthesis lSqrBracket lasso lessThan lessThanEquals linear_regression mean mean_abs_err mean_sqr_err median median_abs_err mini_batch minus mode not notEquals or plus print program rCurlyBracket rParenthesis rSqrBracket return ridge scan semicolon skew start stddev string t_series times var variance void while\n\tPROGRAM : program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS\n\t\n\tGENERATE_GOTO_MAIN : empty\n\t\n\tFILL_GOTO_MAIN : empty\n\t\n\tPROGRAM_A : VARS PROGRAM_A\n\t\t\t\t| GENERATE_GOTO_MAIN PROGRAM_B\n\t\n\tPROGRAM_B : METHOD PROGRAM_B\n\t\t\t\t| empty\n\t\n\tVARS : var TYPE colon VARS_A semicolon VARS_B\n\t\n\tVARS_A : id assign VARCTE_AUX_VARS SIMPLE\n\t\t\t| id SAVE_VAR SIMPLE\n\t\t\t| id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A\n\t\t\t| empty\n\t\n\tVARS_B : VARS\n\t\t\t| empty\n\t\n\tSIMPLE : comma VARS_A\n\t\t\t| empty\n\t\n\tLIST : lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST\n\t\t\t| empty\n\t\n\tLIST_A : comma VARS_A\n\t\t| empty\n\t\n\tVARCTE_AUX_VARS : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR\n\t\t| BOOLEAN_AUX_VARS\n\t\n\tBOOLEAN_AUX_VARS : False SAVE_ASSIGNED_VAR_BOOL\n\t\t\t\t\t| True SAVE_ASSIGNED_VAR_BOOL\n\t\n\tVALIDATE_NAME_ARRAY : empty\t\n\t\n\tACUMULATE_R : empty\n\t\n\tCALCULATE_ARRAY : empty\n\t\n\tEXPLOG : EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\t| not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC\n\t\n\tEXPLOG_A : and EXPLOG\n\t\t| or EXPLOG\n\t\t| empty\n\t\n\tEXPRESSION : EXP \n\t\t\t\t| EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP\n\t\n\tEXPRESSION_A : greater PUSH_STACK_OPERATORS\n\t\t\t\t| lessThan PUSH_STACK_OPERATORS\n\t\t\t\t| greaterEquals PUSH_STACK_OPERATORS\n\t\t\t\t| lessThanEquals PUSH_STACK_OPERATORS\n\t\t\t\t| equals PUSH_STACK_OPERATORS\n\t\t\t\t| notEquals PUSH_STACK_OPERATORS\n\t\n\tEXP : TERM SOLVE_OPERATION_SUM_MINUS\n\t\t| TERM SOLVE_OPERATION_SUM_MINUS EXP_A \n\t\n\tEXP_A : plus PUSH_STACK_OPERATORS EXP\n\t\t| minus PUSH_STACK_OPERATORS EXP\n\t\n\tTERM : FACTOR SOLVE_OPERATION_TIMES_DIVIDE\n\t\t| FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A \n\t\n\tTERM_A : times PUSH_STACK_OPERATORS TERM\n\t\t\t| divide PUSH_STACK_OPERATORS TERM\n\t\n\tFACTOR : lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS\n\t\t\t| VARCONSTAUX\n\t\n\tVARCONSTAUX : id PUSH_STACK_OPERANDS ISLIST \n\t\t\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t\t| BOOLEAN\n\t\n\tTYPE : int SAVE_TYPE\n\t\t| float SAVE_TYPE\n\t\t| string SAVE_TYPE\n\t\t| bool SAVE_TYPE\n\t\n\tBLOCK : lCurlyBracket BLOCK_A rCurlyBracket\n\t\n\tBLOCK_A : STATEMENT BLOCK_A\n\t\t\t| empty\n\t\n\tSTATEMENT : ASSIGNMENT\n\t\t\t| CONDITION\n\t\t\t| WRITE\n\t\t\t| PRE_CONDITIONAL_LOOP\n\t\t\t| POST_CONDITIONAL_LOOP\n\t\t\t| METHODCALL\n\t\t\t| READ\n\t\t\t| STATMETHODS\n\t\t\t| RETURN \n\t\n\tASSIGNMENT : id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A\n\t\n\tASSIGNMENT_A : EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon\n\t\t\t\t| METHODCALL SOLVE_OPERATION_ASSIGNMENT\n\t\n\tREAD : scan lParenthesis VARCTE READ_A rParenthesis\n\t\n\tREAD_A : comma\n\t\t| empty\n\t\n\tISLIST : lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST\n\t\t\t| empty SOLVE_OFFSETS\n\t\n\tVALIDATE_INDEX : empty\n\t\n\tSOLVE_OFFSETS : empty\n\t\n\tTYPEMETHOD : TYPE\n\t\t\t| void SAVE_TYPE\n\t\n\tCONDITION : if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL\n\t\n\tCONDITION_A : else GENERATE_GOTO_CONDITIONAL BLOCK\n\t\t\t\t| empty\n\t\n\tWRITE : print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon\n\t\n\tWRITE_A : comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A\n\t\t| empty\n\t\n\tVARCTE : id ISLIST \n\t\t| cte_i PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_f PUSH_STACK_OPERANDS_CONSTANT\n\t\t| cte_str PUSH_STACK_OPERANDS_CONSTANT\n\t\t| BOOLEAN\n\t\n\tMETHOD : func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE\n\t\n\tMETHOD_A : PARAMS\n\t\t\t| empty\t\t\n\t\n\tPARAMS : TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A \n\t\n\tPARAMS_A : comma PARAMS\n\t\t| empty\n\t\n\tPRE_CONDITIONAL_LOOP : while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP\n\t\n\tPOST_CONDITIONAL_LOOP : do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP\n\t\n\tMETHODCALL : id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL\n\t\n\tMETHODCALL_A : EXP VALIDATE_PARAMETER \n\t\t\t\t\t| empty\n\t\n\tMETHODCALL_B : comma EXP VALIDATE_PARAMETER METHODCALL_B\n\t\t\t\t| empty\n\t\n\tRETURN : return EXPLOG GENERATE_QUAD_RETURN semicolon\n\t\n\tGENERATE_QUAD_RETURN : empty\n\t\n\tBOOLEAN : False PUSH_STACK_OPERANDS_CONSTANT\n\t\t\t| True PUSH_STACK_OPERANDS_CONSTANT\n\t\n\tSTATMETHODS : LASSO\n\t\t\t\t| RIDGE\n\t\t\t\t| K_MEANS\n\t\t\t\t| MINI_BATCH_MEANS\n\t\t\t\t| LINEAR_REGRESSION\n\t\t\t\t| TIME_SERIES_SPLIT\n\t\t\t\t| MEAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN_SQUARED_ERROR\n\t\t\t\t| MEDIAN_ABSOLUTE_ERROR\n\t\t\t\t| MEAN\n\t\t\t\t| MODE\n\t\t\t\t| MEDIAN\n\t\t\t\t| FREQUENCY\n\t\t\t\t| VARIANCE\n\t\t\t\t| STANDARD_DEVIATION\n\t\t\t\t| SKEWNESS\n\t\t\t\t| KURTOSI\n\t\n\tLASSO : lasso lParenthesis id GENERATE_QUAD_EXTRA_FUNCTION rParenthesis semicolon\n\t\n\tGENERATE_QUAD_EXTRA_FUNCTION : empty\n\t\n\tRIDGE : ridge lParenthesis id comma VARCONSTAUX rParenthesis semicolon\n\t\n\tK_MEANS : k_means lParenthesis id comma VARCONSTAUX rParenthesis semicolon\n\t\n\tMINI_BATCH_MEANS : mini_batch lParenthesis id comma VARCONSTAUX rParenthesis semicolon\n\t\n\tLINEAR_REGRESSION : linear_regression lParenthesis id comma VARCONSTAUX rParenthesis semicolon\n\t\n\tTIME_SERIES_SPLIT : t_series lParenthesis id comma id comma VARCONSTAUX rParenthesis semicolon\n\t\n\tMEAN_ABSOLUTE_ERROR : mean_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN_SQUARED_ERROR : mean_sqr_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEDIAN_ABSOLUTE_ERROR : median_abs_err lParenthesis id comma id rParenthesis semicolon\n\t\n\tMEAN : mean lParenthesis id rParenthesis semicolon\n\t\n\tMODE : mode lParenthesis id rParenthesis semicolon\n\t\n\tMEDIAN : median lParenthesis id rParenthesis semicolon\n\t\n\tFREQUENCY : freq lParenthesis id rParenthesis semicolon\n\t\n\tVARIANCE : variance lParenthesis id rParenthesis semicolon\n\t\n\tSTANDARD_DEVIATION : stddev lParenthesis id rParenthesis semicolon\n\t\n\tSKEWNESS : skew lParenthesis id rParenthesis semicolon\n\t\n\tKURTOSI : kurt  lParenthesis id rParenthesis semicolon\n\t\n    empty :\n    \n\tSTART_FUNCTION : empty\n\t\n\tSAVE_TYPE : empty\n\t\n\tSAVE_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR : empty\n\t\n\tSAVE_ASSIGNED_VAR_BOOL : empty\n\t\n\tSAVE_PARAM : empty\n\t\n\tINCREMENT_PARAM_COUNTER : empty\n\t\n\tSAVE_COUNTER_PARAM : empty\n\t\n\tSAVE_COUNTER_QUAD : empty\n\t\n\tEND_PROCEDURE : empty\n\t\n\tSAVE_PARAM_TYPE : empty\n\t\n\tVALIDATE_FUNCTION_NAME : empty\n\t\n    ERA : empty\n    \n\tVALIDATE_PARAMETER : empty\n\t\n\tVALIDATE_METHOD_CALL : empty\n\t\n\tPUSH_STACK_OPERANDS : empty\n\t\n\tPUSH_STACK_OPERANDS_CONSTANT : empty\n\t\n\tPUSH_STACK_OPERATORS : empty\n\t\n\tPOP_STACK_OPERATORS : empty\n\t\n\tSOLVE_OPERATION_SUM_MINUS : empty\n\t\n\tSOLVE_OPERATION_TIMES_DIVIDE : empty\n\t\n\tSOLVE_OPERATION_RELATIONSHIP : empty\n\t\n\tSOLVE_OPERATION_LOGIC : empty\n\t\n\tSOLVE_OPERATION_ASSIGNMENT : empty\n\t\n\tGENERATE_GOTOF_CONDITIONAL : empty\n\t\n\tSOLVE_OPERATION_CONDITIONAL : empty\n\t\n\tGENERATE_GOTO_CONDITIONAL : empty\n\t\n\tPUSH_STACK_JUMPS : empty\n\t\n\tSOLVE_OPERATION_PRE_CONDITIONAL_LOOP : empty\n\t\n\tSOLVE_OPERATION_POST_CONDITIONAL_LOOP : empty\n\t\n\tGENERATE_QUAD_PRINT : empty\n\t\n\tPRINTQUADS : empty\n\t'
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,67,86,87,163,164,165,],[0,-149,-149,-159,-1,-181,-62,]),'void':([2,9,10,11,12,14,16,17,18,19,20,27,44,52,53,54,87,165,320,364,],[3,-149,15,-149,-149,-2,-4,-5,-149,-7,30,-6,-149,-8,-13,-14,-159,-62,-149,-97,]),'globalFunc':([3,4,5,],[-149,6,-151,]),'start':([5,15,26,],[-151,-149,36,]),'colon':([5,21,22,23,24,25,32,33,34,35,],[-151,31,-149,-149,-149,-149,-58,-59,-60,-61,]),'id':([5,22,23,24,25,28,29,30,31,32,33,34,35,38,45,64,68,72,74,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,147,165,170,171,175,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,206,207,220,231,232,235,236,237,238,239,240,241,265,266,268,269,275,276,289,296,297,298,299,300,301,304,305,306,307,308,309,310,311,324,325,326,327,332,339,342,343,356,357,358,359,360,361,362,363,376,379,381,383,387,392,397,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[-151,-149,-149,-149,-149,37,-84,-149,40,-58,-59,-60,-61,-85,55,40,100,143,149,100,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,149,-149,-62,149,149,223,149,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,149,-167,149,149,149,149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,149,-110,-38,-39,-40,-41,-42,-43,149,149,149,149,352,353,354,355,149,149,149,149,378,149,149,-77,-141,-142,-143,-144,-145,-146,-147,-148,40,-74,-149,149,-149,-131,149,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'semicolon':([6,7,8,31,39,40,41,46,48,55,56,57,58,59,60,61,62,63,64,65,73,75,76,77,78,79,80,81,82,83,84,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,176,177,179,202,203,204,205,208,209,210,211,212,213,214,228,229,230,233,234,263,264,267,271,273,274,290,291,292,293,294,295,312,313,314,315,316,317,318,319,323,328,330,331,344,345,346,347,368,369,370,371,372,373,375,376,377,378,380,388,393,394,395,396,398,399,400,402,403,404,405,406,408,425,438,],[-149,9,-150,-149,44,-149,-12,-149,-152,-149,-149,-149,-149,-149,-25,-149,-149,-10,-149,-16,-21,-149,-9,-149,-166,-149,-149,-26,-154,-27,-15,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,-22,-153,-23,-24,-149,-149,-36,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,289,-111,-149,-35,-149,-149,-45,-49,-54,-149,-18,-31,-172,-33,-34,-149,-149,356,357,358,359,360,361,362,363,-80,-149,-149,-30,-32,-37,-171,392,-46,-47,-50,-51,-52,-168,-11,-149,-20,-149,-149,413,417,418,419,420,422,423,424,-149,-19,-165,426,-173,427,-17,443,]),'lCurlyBracket':([8,36,42,49,50,104,173,174,197,259,260,277,336,337,341,390,411,431,432,],[-150,-149,-149,68,-3,-149,-177,68,-149,68,-158,-149,68,-174,-149,68,-149,68,-176,]),'lParenthesis':([8,37,43,74,100,101,102,103,105,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,147,168,169,170,171,172,173,178,206,207,216,217,220,231,232,235,236,237,238,239,240,241,265,266,268,269,275,276,281,296,297,298,299,300,301,324,325,326,327,332,339,342,378,383,404,],[-150,-149,51,147,-149,170,171,-149,175,147,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,-149,-149,-161,147,147,220,-177,147,147,-167,276,-162,147,147,147,147,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,147,342,-38,-39,-40,-41,-42,-43,147,147,147,147,147,147,147,-149,147,-161,]),'var':([9,11,44,52,53,54,],[13,13,13,-8,-13,-14,]),'func':([9,11,12,14,18,44,52,53,54,87,165,320,364,],[-149,-149,20,-2,20,-149,-8,-13,-14,-159,-62,-149,-97,]),'int':([13,20,51,366,],[22,22,22,22,]),'float':([13,20,51,366,],[23,23,23,23,]),'string':([13,20,51,366,],[24,24,24,24,]),'bool':([13,20,51,366,],[25,25,25,25,]),'assign':([40,75,100,155,156,167,169,215,263,323,],[45,-149,-149,-83,-81,-149,-165,275,-149,-80,]),'comma':([40,46,48,55,56,57,58,59,60,61,62,73,75,77,78,79,80,81,82,83,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,179,198,199,202,203,204,205,208,209,210,211,212,213,214,219,222,223,224,225,226,227,243,244,245,246,247,248,249,250,261,262,263,264,267,271,273,274,276,278,279,285,286,287,288,295,321,322,323,328,330,331,333,334,335,345,346,352,368,369,370,371,372,373,385,386,389,402,409,414,425,428,],[-149,64,-152,-149,64,-149,-149,-149,-25,-149,-149,-21,-149,-149,-166,-149,-149,-26,-154,-27,-149,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,-22,-153,-23,-24,-36,-149,-155,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-149,283,-149,-149,-149,-149,-96,304,305,306,307,308,309,310,311,-149,-160,-149,-45,-49,-54,-149,-18,-149,339,-180,-92,-93,-94,-95,-149,366,-156,-80,-149,376,-30,383,-149,-107,-37,-171,397,-46,-47,-50,-51,-52,-168,-106,-163,-149,-149,-149,339,-17,383,]),'lSqrBracket':([40,47,48,55,100,149,167,169,208,209,214,223,263,378,402,404,],[-149,66,-28,74,-149,-149,74,-165,74,-165,272,74,74,-149,272,-165,]),'cte_i':([45,66,74,123,147,170,171,175,178,206,207,220,231,232,235,236,237,238,239,240,241,265,266,268,269,272,275,276,296,297,298,299,300,301,304,305,306,307,324,325,326,327,332,339,342,383,397,],[57,85,150,150,-149,150,150,224,150,150,-167,150,150,150,150,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,329,-149,150,-38,-39,-40,-41,-42,-43,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'cte_f':([45,74,123,147,170,171,175,178,206,207,220,231,232,235,236,237,238,239,240,241,265,266,268,269,275,276,296,297,298,299,300,301,304,305,306,307,324,325,326,327,332,339,342,383,397,],[58,151,151,-149,151,151,225,151,151,-167,151,151,151,151,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,151,-38,-39,-40,-41,-42,-43,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'cte_str':([45,175,],[59,226,]),'False':([45,74,123,147,170,171,175,178,206,207,220,231,232,235,236,237,238,239,240,241,265,266,268,269,275,276,296,297,298,299,300,301,304,305,306,307,324,325,326,327,332,339,342,383,397,],[61,153,153,-149,153,153,153,153,153,-167,153,153,153,153,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,153,-38,-39,-40,-41,-42,-43,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'True':([45,74,123,147,170,171,175,178,206,207,220,231,232,235,236,237,238,239,240,241,265,266,268,269,275,276,296,297,298,299,300,301,304,305,306,307,324,325,326,327,332,339,342,383,397,],[62,154,154,-149,154,154,154,154,154,-167,154,154,154,154,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,-149,154,-38,-39,-40,-41,-42,-43,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'rParenthesis':([51,69,70,71,75,78,141,142,143,145,146,148,149,150,151,152,153,154,155,156,177,179,198,199,202,203,204,205,208,209,210,211,212,213,218,219,222,223,224,225,226,227,230,233,234,242,251,252,253,254,255,256,257,258,261,262,263,264,267,270,271,276,278,279,280,282,283,284,285,286,287,288,290,291,292,293,294,295,302,303,321,322,323,328,333,334,335,338,340,344,345,346,348,349,350,351,353,354,355,365,367,368,369,370,371,372,373,382,384,385,386,389,391,401,409,414,421,428,433,441,],[-149,-149,-98,-99,-149,-166,197,-157,-149,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,-149,-36,-149,-155,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,277,-149,-149,-149,-149,-149,-149,-96,-149,-35,-149,-149,312,313,314,315,316,317,318,319,-149,-160,-149,-45,-49,328,-54,-149,-149,-180,341,343,-78,-79,-92,-93,-94,-95,-31,-172,-33,-34,-149,-149,347,-132,-149,-156,-80,-149,-149,-149,-107,388,-91,-32,-37,-171,393,394,395,396,398,399,400,-100,-102,-46,-47,-50,-51,-52,-168,408,-109,-106,-163,-149,416,-101,-149,-149,438,-149,-90,-108,]),'rCurlyBracket':([68,88,89,90,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,166,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[-149,165,-149,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-63,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'if':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[101,101,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'print':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[102,102,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'while':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,221,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[103,103,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,281,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'do':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[104,104,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'scan':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[105,105,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'return':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[123,123,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'lasso':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[124,124,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'ridge':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[125,125,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'k_means':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[126,126,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'mini_batch':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[127,127,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'linear_regression':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[128,128,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'t_series':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[129,129,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'mean_abs_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[130,130,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'mean_sqr_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[131,131,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'median_abs_err':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[132,132,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'mean':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[133,133,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'mode':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[134,134,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'median':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[135,135,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'freq':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[136,136,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'variance':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[137,137,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'stddev':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[138,138,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'skew':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[139,139,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'kurt':([68,89,91,92,93,94,95,96,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,165,289,343,356,357,358,359,360,361,362,363,379,381,387,392,406,407,410,412,413,415,416,417,418,419,420,422,423,424,426,427,429,430,434,435,436,437,439,440,442,443,],[140,140,-65,-66,-67,-68,-69,-70,-71,-72,-73,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-62,-110,-77,-141,-142,-143,-144,-145,-146,-147,-148,-74,-149,-149,-131,-173,-76,-149,-88,-89,-149,-149,-133,-134,-135,-136,-138,-139,-140,-75,-149,-86,-175,-103,-178,-104,-179,-105,-164,-87,-137,]),'times':([75,78,146,148,149,150,151,152,153,154,155,156,204,205,208,209,210,211,212,213,263,271,323,328,372,373,378,404,],[-149,-166,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,268,-170,-149,-165,-55,-56,-112,-113,-149,-54,-80,-149,-52,-168,-149,-165,]),'divide':([75,78,146,148,149,150,151,152,153,154,155,156,204,205,208,209,210,211,212,213,263,271,323,328,372,373,378,404,],[-149,-166,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,269,-170,-149,-165,-55,-56,-112,-113,-149,-54,-80,-149,-52,-168,-149,-165,]),'plus':([75,78,145,146,148,149,150,151,152,153,154,155,156,202,203,204,205,208,209,210,211,212,213,263,267,271,323,328,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,265,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-49,-54,-80,-149,-50,-51,-52,-168,-149,-165,]),'minus':([75,78,145,146,148,149,150,151,152,153,154,155,156,202,203,204,205,208,209,210,211,212,213,263,267,271,323,328,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,266,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-49,-54,-80,-149,-50,-51,-52,-168,-149,-165,]),'rSqrBracket':([75,78,85,144,145,146,148,149,150,151,152,153,154,155,156,161,162,200,201,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,329,368,369,370,371,372,373,374,],[-149,-166,-149,-149,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,214,-29,263,-82,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-149,-46,-47,-50,-51,-52,-168,402,]),'greater':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,236,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'lessThan':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,237,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'greaterEquals':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,238,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'lessThanEquals':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,239,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'equals':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,240,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'notEquals':([75,78,145,146,148,149,150,151,152,153,154,155,156,179,202,203,204,205,208,209,210,211,212,213,263,264,267,271,323,328,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,241,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,-149,-45,-49,-54,-80,-149,-46,-47,-50,-51,-52,-168,-149,-165,]),'and':([75,78,145,146,148,149,150,151,152,153,154,155,156,177,179,202,203,204,205,208,209,210,211,212,213,234,263,264,267,271,295,323,328,345,346,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,231,-36,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,231,-149,-45,-49,-54,-149,-80,-149,-37,-171,-46,-47,-50,-51,-52,-168,-149,-165,]),'or':([75,78,145,146,148,149,150,151,152,153,154,155,156,177,179,202,203,204,205,208,209,210,211,212,213,234,263,264,267,271,295,323,328,345,346,368,369,370,371,372,373,378,404,],[-149,-166,-149,-149,-53,-149,-149,-149,-57,-149,-149,-83,-81,232,-36,-44,-169,-48,-170,-149,-165,-55,-56,-112,-113,232,-149,-45,-49,-54,-149,-80,-149,-37,-171,-46,-47,-50,-51,-52,-168,-149,-165,]),'not':([123,147,170,206,207,220,231,232,275,332,342,],[178,-149,178,178,-167,178,178,178,-149,178,178,]),'else':([165,387,],[-62,411,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'SAVE_TYPE':([3,15,22,23,24,25,30,],[4,26,32,33,34,35,38,]),'empty':([3,6,9,11,12,15,18,22,23,24,25,30,31,36,37,40,42,44,46,51,55,56,57,58,59,61,62,64,67,68,69,75,77,79,80,85,86,89,100,103,104,143,144,145,146,147,149,150,151,153,154,167,168,176,177,197,198,208,214,219,222,223,224,225,226,230,234,236,237,238,239,240,241,242,261,263,265,266,268,269,273,275,276,277,278,294,295,320,321,328,329,330,333,334,341,376,378,380,381,387,389,402,409,410,411,414,415,416,427,428,],[5,8,14,14,19,5,19,5,5,5,5,5,41,8,8,48,50,54,65,71,75,65,78,78,78,82,82,41,87,90,142,155,158,158,158,162,164,90,169,173,173,199,201,203,205,207,209,78,78,78,78,75,217,229,233,260,262,75,274,279,284,75,78,78,78,291,233,207,207,207,207,207,207,303,322,75,207,207,207,207,331,207,335,337,340,291,346,87,367,373,162,377,384,386,337,41,404,406,406,412,279,274,386,430,432,340,435,437,440,384,]),'START_FUNCTION':([6,36,37,],[7,42,43,]),'PROGRAM_A':([9,11,],[10,16,]),'VARS':([9,11,44,],[11,11,53,]),'GENERATE_GOTO_MAIN':([9,11,],[12,12,]),'PROGRAM_B':([12,18,],[17,27,]),'METHOD':([12,18,],[18,18,]),'TYPE':([13,20,51,366,],[21,29,72,72,]),'TYPEMETHOD':([20,],[28,]),'VARS_A':([31,64,376,],[39,84,403,]),'SAVE_VAR':([40,],[46,]),'VALIDATE_NAME_ARRAY':([40,],[47,]),'FILL_GOTO_MAIN':([42,],[49,]),'VARS_B':([44,],[52,]),'VARCTE_AUX_VARS':([45,],[56,]),'BOOLEAN_AUX_VARS':([45,],[60,]),'SIMPLE':([46,56,],[63,76,]),'BLOCK':([49,174,259,336,390,431,],[67,221,320,387,415,442,]),'METHOD_A':([51,],[69,]),'PARAMS':([51,366,],[70,401,]),'ISLIST':([55,167,208,223,263,],[73,215,271,285,323,]),'PUSH_STACK_OPERANDS_CONSTANT':([57,58,59,150,151,153,154,224,225,226,],[77,79,80,210,211,212,213,286,287,288,]),'SAVE_ASSIGNED_VAR_BOOL':([61,62,],[81,83,]),'END_PROCEDURE':([67,320,],[86,364,]),'BLOCK_A':([68,89,],[88,166,]),'STATEMENT':([68,89,],[89,89,]),'ASSIGNMENT':([68,89,],[91,91,]),'CONDITION':([68,89,],[92,92,]),'WRITE':([68,89,],[93,93,]),'PRE_CONDITIONAL_LOOP':([68,89,],[94,94,]),'POST_CONDITIONAL_LOOP':([68,89,],[95,95,]),'METHODCALL':([68,89,332,],[96,96,381,]),'READ':([68,89,],[97,97,]),'STATMETHODS':([68,89,],[98,98,]),'RETURN':([68,89,],[99,99,]),'LASSO':([68,89,],[106,106,]),'RIDGE':([68,89,],[107,107,]),'K_MEANS':([68,89,],[108,108,]),'MINI_BATCH_MEANS':([68,89,],[109,109,]),'LINEAR_REGRESSION':([68,89,],[110,110,]),'TIME_SERIES_SPLIT':([68,89,],[111,111,]),'MEAN_ABSOLUTE_ERROR':([68,89,],[112,112,]),'MEAN_SQUARED_ERROR':([68,89,],[113,113,]),'MEDIAN_ABSOLUTE_ERROR':([68,89,],[114,114,]),'MEAN':([68,89,],[115,115,]),'MODE':([68,89,],[116,116,]),'MEDIAN':([68,89,],[117,117,]),'FREQUENCY':([68,89,],[118,118,]),'VARIANCE':([68,89,],[119,119,]),'STANDARD_DEVIATION':([68,89,],[120,120,]),'SKEWNESS':([68,89,],[121,121,]),'KURTOSI':([68,89,],[122,122,]),'SAVE_COUNTER_PARAM':([69,],[141,]),'EXP':([74,123,170,171,178,206,220,231,232,235,276,324,325,332,339,342,383,],[144,179,179,179,179,179,179,179,179,295,334,368,369,179,179,179,409,]),'TERM':([74,123,170,171,178,206,220,231,232,235,276,324,325,326,327,332,339,342,383,],[145,145,145,145,145,145,145,145,145,145,145,145,145,370,371,145,145,145,145,]),'FACTOR':([74,123,170,171,178,206,220,231,232,235,276,324,325,326,327,332,339,342,383,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'VARCONSTAUX':([74,123,170,171,178,206,220,231,232,235,276,304,305,306,307,324,325,326,327,332,339,342,383,397,],[148,148,148,148,148,148,148,148,148,148,148,348,349,350,351,148,148,148,148,148,148,148,148,421,]),'BOOLEAN':([74,123,170,171,175,178,206,220,231,232,235,276,304,305,306,307,324,325,326,327,332,339,342,383,397,],[152,152,152,152,227,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'SOLVE_OFFSETS':([75,],[156,]),'SAVE_ASSIGNED_VAR':([77,79,80,],[157,159,160,]),'ACUMULATE_R':([85,329,],[161,374,]),'PRINTQUADS':([86,],[163,]),'PUSH_STACK_OPERANDS':([100,149,378,],[167,208,208,]),'VALIDATE_FUNCTION_NAME':([100,378,],[168,168,]),'PUSH_STACK_JUMPS':([103,104,],[172,174,]),'EXPLOG':([123,170,206,220,231,232,332,342,],[176,218,270,280,292,293,380,391,]),'EXPRESSION':([123,170,171,178,206,220,231,232,332,339,342,],[177,177,219,234,177,177,177,177,177,389,177,]),'SAVE_PARAM':([143,],[198,]),'VALIDATE_INDEX':([144,],[200,]),'SOLVE_OPERATION_SUM_MINUS':([145,],[202,]),'SOLVE_OPERATION_TIMES_DIVIDE':([146,],[204,]),'PUSH_STACK_OPERATORS':([147,236,237,238,239,240,241,265,266,268,269,275,],[206,296,297,298,299,300,301,324,325,326,327,332,]),'ERA':([168,],[216,]),'VARCTE':([175,],[222,]),'GENERATE_QUAD_RETURN':([176,],[228,]),'EXPLOG_A':([177,234,],[230,294,]),'EXPRESSION_A':([179,],[235,]),'SAVE_COUNTER_QUAD':([197,],[259,]),'SAVE_PARAM_TYPE':([198,],[261,]),'EXP_A':([202,],[264,]),'TERM_A':([204,],[267,]),'LIST':([214,402,],[273,425,]),'GENERATE_QUAD_PRINT':([219,389,],[278,414,]),'READ_A':([222,],[282,]),'SOLVE_OPERATION_LOGIC':([230,294,],[290,344,]),'GENERATE_QUAD_EXTRA_FUNCTION':([242,],[302,]),'INCREMENT_PARAM_COUNTER':([261,],[321,]),'CALCULATE_ARRAY':([273,],[330,]),'METHODCALL_A':([276,],[333,]),'GENERATE_GOTOF_CONDITIONAL':([277,341,],[336,390,]),'WRITE_A':([278,414,],[338,433,]),'SOLVE_OPERATION_RELATIONSHIP':([295,],[345,]),'PARAMS_A':([321,],[365,]),'POP_STACK_OPERATORS':([328,],[372,]),'LIST_A':([330,],[375,]),'ASSIGNMENT_A':([332,],[379,]),'METHODCALL_B':([333,428,],[382,441,]),'VALIDATE_PARAMETER':([334,409,],[385,428,]),'SOLVE_OPERATION_ASSIGNMENT':([380,381,],[405,407,]),'CONDITION_A':([387,],[410,]),'SOLVE_OPERATION_CONDITIONAL':([410,],[429,]),'GENERATE_GOTO_CONDITIONAL':([411,],[431,]),'SOLVE_OPERATION_PRE_CONDITIONAL_LOOP':([415,],[434,]),'SOLVE_OPERATION_POST_CONDITIONAL_LOOP':([416,],[436,]),'VALIDATE_METHOD_CALL':([427,],[439,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> program void SAVE_TYPE globalFunc START_FUNCTION semicolon PROGRAM_A void SAVE_TYPE start START_FUNCTION FILL_GOTO_MAIN BLOCK END_PROCEDURE PRINTQUADS','PROGRAM',15,'p_PROGRAM','parser.py',101),
  ('GENERATE_GOTO_MAIN -> empty','GENERATE_GOTO_MAIN',1,'p_GENERATE_GOTO_MAIN','parser.py',107),
  ('FILL_GOTO_MAIN -> empty','FILL_GOTO_MAIN',1,'p_FILL_GOTO_MAIN','parser.py',119),
  ('PROGRAM_A -> VARS PROGRAM_A','PROGRAM_A',2,'p_PROGRAM_A','parser.py',130),
  ('PROGRAM_A -> GENERATE_GOTO_MAIN PROGRAM_B','PROGRAM_A',2,'p_PROGRAM_A','parser.py',131),
  ('PROGRAM_B -> METHOD PROGRAM_B','PROGRAM_B',2,'p_PROGRAM_B','parser.py',136),
  ('PROGRAM_B -> empty','PROGRAM_B',1,'p_PROGRAM_B','parser.py',137),
  ('VARS -> var TYPE colon VARS_A semicolon VARS_B','VARS',6,'p_VARS','parser.py',145),
  ('VARS_A -> id assign VARCTE_AUX_VARS SIMPLE','VARS_A',4,'p_VARS_A','parser.py',150),
  ('VARS_A -> id SAVE_VAR SIMPLE','VARS_A',3,'p_VARS_A','parser.py',151),
  ('VARS_A -> id VALIDATE_NAME_ARRAY lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST CALCULATE_ARRAY LIST_A','VARS_A',9,'p_VARS_A','parser.py',152),
  ('VARS_A -> empty','VARS_A',1,'p_VARS_A','parser.py',153),
  ('VARS_B -> VARS','VARS_B',1,'p_VARS_B','parser.py',158),
  ('VARS_B -> empty','VARS_B',1,'p_VARS_B','parser.py',159),
  ('SIMPLE -> comma VARS_A','SIMPLE',2,'p_SIMPLE','parser.py',164),
  ('SIMPLE -> empty','SIMPLE',1,'p_SIMPLE','parser.py',165),
  ('LIST -> lSqrBracket cte_i ACUMULATE_R rSqrBracket LIST','LIST',5,'p_LIST','parser.py',170),
  ('LIST -> empty','LIST',1,'p_LIST','parser.py',171),
  ('LIST_A -> comma VARS_A','LIST_A',2,'p_LIST_A','parser.py',176),
  ('LIST_A -> empty','LIST_A',1,'p_LIST_A','parser.py',177),
  ('VARCTE_AUX_VARS -> id ISLIST','VARCTE_AUX_VARS',2,'p_VARCTE_AUX_VARS','parser.py',183),
  ('VARCTE_AUX_VARS -> cte_i PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',184),
  ('VARCTE_AUX_VARS -> cte_f PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',185),
  ('VARCTE_AUX_VARS -> cte_str PUSH_STACK_OPERANDS_CONSTANT SAVE_ASSIGNED_VAR','VARCTE_AUX_VARS',3,'p_VARCTE_AUX_VARS','parser.py',186),
  ('VARCTE_AUX_VARS -> BOOLEAN_AUX_VARS','VARCTE_AUX_VARS',1,'p_VARCTE_AUX_VARS','parser.py',187),
  ('BOOLEAN_AUX_VARS -> False SAVE_ASSIGNED_VAR_BOOL','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',193),
  ('BOOLEAN_AUX_VARS -> True SAVE_ASSIGNED_VAR_BOOL','BOOLEAN_AUX_VARS',2,'p_BOOLEAN_AUX_VARS','parser.py',194),
  ('VALIDATE_NAME_ARRAY -> empty','VALIDATE_NAME_ARRAY',1,'p_VALIDATE_NAME_ARRAY','parser.py',207),
  ('ACUMULATE_R -> empty','ACUMULATE_R',1,'p_ACUMULATE_R','parser.py',226),
  ('CALCULATE_ARRAY -> empty','CALCULATE_ARRAY',1,'p_CALCULATE_ARRAY','parser.py',255),
  ('EXPLOG -> EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',3,'p_EXPLOG','parser.py',308),
  ('EXPLOG -> not EXPRESSION EXPLOG_A SOLVE_OPERATION_LOGIC','EXPLOG',4,'p_EXPLOG','parser.py',309),
  ('EXPLOG_A -> and EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',314),
  ('EXPLOG_A -> or EXPLOG','EXPLOG_A',2,'p_EXPLOG_A','parser.py',315),
  ('EXPLOG_A -> empty','EXPLOG_A',1,'p_EXPLOG_A','parser.py',316),
  ('EXPRESSION -> EXP','EXPRESSION',1,'p_EXPRESSION','parser.py',321),
  ('EXPRESSION -> EXP EXPRESSION_A EXP SOLVE_OPERATION_RELATIONSHIP','EXPRESSION',4,'p_EXPRESSION','parser.py',322),
  ('EXPRESSION_A -> greater PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',327),
  ('EXPRESSION_A -> lessThan PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',328),
  ('EXPRESSION_A -> greaterEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',329),
  ('EXPRESSION_A -> lessThanEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',330),
  ('EXPRESSION_A -> equals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',331),
  ('EXPRESSION_A -> notEquals PUSH_STACK_OPERATORS','EXPRESSION_A',2,'p_EXPRESSION_A','parser.py',332),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS','EXP',2,'p_EXP','parser.py',337),
  ('EXP -> TERM SOLVE_OPERATION_SUM_MINUS EXP_A','EXP',3,'p_EXP','parser.py',338),
  ('EXP_A -> plus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',343),
  ('EXP_A -> minus PUSH_STACK_OPERATORS EXP','EXP_A',3,'p_EXP_A','parser.py',344),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE','TERM',2,'p_TERM','parser.py',349),
  ('TERM -> FACTOR SOLVE_OPERATION_TIMES_DIVIDE TERM_A','TERM',3,'p_TERM','parser.py',350),
  ('TERM_A -> times PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',355),
  ('TERM_A -> divide PUSH_STACK_OPERATORS TERM','TERM_A',3,'p_TERM_A','parser.py',356),
  ('FACTOR -> lParenthesis PUSH_STACK_OPERATORS EXPLOG rParenthesis POP_STACK_OPERATORS','FACTOR',5,'p_FACTOR','parser.py',361),
  ('FACTOR -> VARCONSTAUX','FACTOR',1,'p_FACTOR','parser.py',362),
  ('VARCONSTAUX -> id PUSH_STACK_OPERANDS ISLIST','VARCONSTAUX',3,'p_VARCONSTAUX','parser.py',368),
  ('VARCONSTAUX -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',369),
  ('VARCONSTAUX -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCONSTAUX',2,'p_VARCONSTAUX','parser.py',370),
  ('VARCONSTAUX -> BOOLEAN','VARCONSTAUX',1,'p_VARCONSTAUX','parser.py',371),
  ('TYPE -> int SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',376),
  ('TYPE -> float SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',377),
  ('TYPE -> string SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',378),
  ('TYPE -> bool SAVE_TYPE','TYPE',2,'p_TYPE','parser.py',379),
  ('BLOCK -> lCurlyBracket BLOCK_A rCurlyBracket','BLOCK',3,'p_BLOCK','parser.py',384),
  ('BLOCK_A -> STATEMENT BLOCK_A','BLOCK_A',2,'p_BLOCK_A','parser.py',389),
  ('BLOCK_A -> empty','BLOCK_A',1,'p_BLOCK_A','parser.py',390),
  ('STATEMENT -> ASSIGNMENT','STATEMENT',1,'p_STATEMENT','parser.py',395),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',396),
  ('STATEMENT -> WRITE','STATEMENT',1,'p_STATEMENT','parser.py',397),
  ('STATEMENT -> PRE_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',398),
  ('STATEMENT -> POST_CONDITIONAL_LOOP','STATEMENT',1,'p_STATEMENT','parser.py',399),
  ('STATEMENT -> METHODCALL','STATEMENT',1,'p_STATEMENT','parser.py',400),
  ('STATEMENT -> READ','STATEMENT',1,'p_STATEMENT','parser.py',401),
  ('STATEMENT -> STATMETHODS','STATEMENT',1,'p_STATEMENT','parser.py',402),
  ('STATEMENT -> RETURN','STATEMENT',1,'p_STATEMENT','parser.py',403),
  ('ASSIGNMENT -> id PUSH_STACK_OPERANDS ISLIST assign PUSH_STACK_OPERATORS ASSIGNMENT_A','ASSIGNMENT',6,'p_ASSIGNMENT','parser.py',408),
  ('ASSIGNMENT_A -> EXPLOG SOLVE_OPERATION_ASSIGNMENT semicolon','ASSIGNMENT_A',3,'p_ASSIGNMENT_A','parser.py',413),
  ('ASSIGNMENT_A -> METHODCALL SOLVE_OPERATION_ASSIGNMENT','ASSIGNMENT_A',2,'p_ASSIGNMENT_A','parser.py',414),
  ('READ -> scan lParenthesis VARCTE READ_A rParenthesis','READ',5,'p_READ','parser.py',419),
  ('READ_A -> comma','READ_A',1,'p_READ_A','parser.py',424),
  ('READ_A -> empty','READ_A',1,'p_READ_A','parser.py',425),
  ('ISLIST -> lSqrBracket EXP VALIDATE_INDEX rSqrBracket ISLIST','ISLIST',5,'p_ISLIST','parser.py',435),
  ('ISLIST -> empty SOLVE_OFFSETS','ISLIST',2,'p_ISLIST','parser.py',436),
  ('VALIDATE_INDEX -> empty','VALIDATE_INDEX',1,'p_VALIDATE_INDEX','parser.py',448),
  ('SOLVE_OFFSETS -> empty','SOLVE_OFFSETS',1,'p_SOLVE_OFFSETS','parser.py',509),
  ('TYPEMETHOD -> TYPE','TYPEMETHOD',1,'p_TYPEMETHOD','parser.py',565),
  ('TYPEMETHOD -> void SAVE_TYPE','TYPEMETHOD',2,'p_TYPEMETHOD','parser.py',566),
  ('CONDITION -> if lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK CONDITION_A SOLVE_OPERATION_CONDITIONAL','CONDITION',8,'p_CONDITION','parser.py',571),
  ('CONDITION_A -> else GENERATE_GOTO_CONDITIONAL BLOCK','CONDITION_A',3,'p_CONDITION_A','parser.py',576),
  ('CONDITION_A -> empty','CONDITION_A',1,'p_CONDITION_A','parser.py',577),
  ('WRITE -> print lParenthesis EXPRESSION GENERATE_QUAD_PRINT WRITE_A rParenthesis semicolon','WRITE',7,'p_WRITE','parser.py',582),
  ('WRITE_A -> comma EXPRESSION GENERATE_QUAD_PRINT WRITE_A','WRITE_A',4,'p_WRITE_A','parser.py',587),
  ('WRITE_A -> empty','WRITE_A',1,'p_WRITE_A','parser.py',588),
  ('VARCTE -> id ISLIST','VARCTE',2,'p_VARCTE','parser.py',593),
  ('VARCTE -> cte_i PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',594),
  ('VARCTE -> cte_f PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',595),
  ('VARCTE -> cte_str PUSH_STACK_OPERANDS_CONSTANT','VARCTE',2,'p_VARCTE','parser.py',596),
  ('VARCTE -> BOOLEAN','VARCTE',1,'p_VARCTE','parser.py',597),
  ('METHOD -> func TYPEMETHOD id START_FUNCTION lParenthesis METHOD_A SAVE_COUNTER_PARAM rParenthesis SAVE_COUNTER_QUAD BLOCK END_PROCEDURE','METHOD',11,'p_METHOD','parser.py',602),
  ('METHOD_A -> PARAMS','METHOD_A',1,'p_METHOD_A','parser.py',607),
  ('METHOD_A -> empty','METHOD_A',1,'p_METHOD_A','parser.py',608),
  ('PARAMS -> TYPE id SAVE_PARAM SAVE_PARAM_TYPE INCREMENT_PARAM_COUNTER PARAMS_A','PARAMS',6,'p_PARAMS','parser.py',613),
  ('PARAMS_A -> comma PARAMS','PARAMS_A',2,'p_PARAMS_A','parser.py',618),
  ('PARAMS_A -> empty','PARAMS_A',1,'p_PARAMS_A','parser.py',619),
  ('PRE_CONDITIONAL_LOOP -> while PUSH_STACK_JUMPS lParenthesis EXPLOG rParenthesis GENERATE_GOTOF_CONDITIONAL BLOCK SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','PRE_CONDITIONAL_LOOP',8,'p_PRE_CONDITIONAL_LOOP','parser.py',624),
  ('POST_CONDITIONAL_LOOP -> do PUSH_STACK_JUMPS BLOCK while lParenthesis EXPLOG rParenthesis SOLVE_OPERATION_POST_CONDITIONAL_LOOP','POST_CONDITIONAL_LOOP',8,'p_POST_CONDITIONAL_LOOP','parser.py',629),
  ('METHODCALL -> id VALIDATE_FUNCTION_NAME ERA lParenthesis METHODCALL_A METHODCALL_B rParenthesis semicolon VALIDATE_METHOD_CALL','METHODCALL',9,'p_METHODCALL','parser.py',634),
  ('METHODCALL_A -> EXP VALIDATE_PARAMETER','METHODCALL_A',2,'p_METHODCALL_A','parser.py',639),
  ('METHODCALL_A -> empty','METHODCALL_A',1,'p_METHODCALL_A','parser.py',640),
  ('METHODCALL_B -> comma EXP VALIDATE_PARAMETER METHODCALL_B','METHODCALL_B',4,'p_METHODCALL_B','parser.py',645),
  ('METHODCALL_B -> empty','METHODCALL_B',1,'p_METHODCALL_B','parser.py',646),
  ('RETURN -> return EXPLOG GENERATE_QUAD_RETURN semicolon','RETURN',4,'p_RETURN','parser.py',651),
  ('GENERATE_QUAD_RETURN -> empty','GENERATE_QUAD_RETURN',1,'p_GENERATE_QUAD_RETURN','parser.py',656),
  ('BOOLEAN -> False PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',668),
  ('BOOLEAN -> True PUSH_STACK_OPERANDS_CONSTANT','BOOLEAN',2,'p_BOOLEAN','parser.py',669),
  ('STATMETHODS -> LASSO','STATMETHODS',1,'p_STATMETHODS','parser.py',674),
  ('STATMETHODS -> RIDGE','STATMETHODS',1,'p_STATMETHODS','parser.py',675),
  ('STATMETHODS -> K_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',676),
  ('STATMETHODS -> MINI_BATCH_MEANS','STATMETHODS',1,'p_STATMETHODS','parser.py',677),
  ('STATMETHODS -> LINEAR_REGRESSION','STATMETHODS',1,'p_STATMETHODS','parser.py',678),
  ('STATMETHODS -> TIME_SERIES_SPLIT','STATMETHODS',1,'p_STATMETHODS','parser.py',679),
  ('STATMETHODS -> MEAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',680),
  ('STATMETHODS -> MEAN_SQUARED_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',681),
  ('STATMETHODS -> MEDIAN_ABSOLUTE_ERROR','STATMETHODS',1,'p_STATMETHODS','parser.py',682),
  ('STATMETHODS -> MEAN','STATMETHODS',1,'p_STATMETHODS','parser.py',683),
  ('STATMETHODS -> MODE','STATMETHODS',1,'p_STATMETHODS','parser.py',684),
  ('STATMETHODS -> MEDIAN','STATMETHODS',1,'p_STATMETHODS','parser.py',685),
  ('STATMETHODS -> FREQUENCY','STATMETHODS',1,'p_STATMETHODS','parser.py',686),
  ('STATMETHODS -> VARIANCE','STATMETHODS',1,'p_STATMETHODS','parser.py',687),
  ('STATMETHODS -> STANDARD_DEVIATION','STATMETHODS',1,'p_STATMETHODS','parser.py',688),
  ('STATMETHODS -> SKEWNESS','STATMETHODS',1,'p_STATMETHODS','parser.py',689),
  ('STATMETHODS -> KURTOSI','STATMETHODS',1,'p_STATMETHODS','parser.py',690),
  ('LASSO -> lasso lParenthesis id GENERATE_QUAD_EXTRA_FUNCTION rParenthesis semicolon','LASSO',6,'p_LASSO','parser.py',695),
  ('GENERATE_QUAD_EXTRA_FUNCTION -> empty','GENERATE_QUAD_EXTRA_FUNCTION',1,'p_GENERATE_QUAD_EXTRA_FUNCTION','parser.py',700),
  ('RIDGE -> ridge lParenthesis id comma VARCONSTAUX rParenthesis semicolon','RIDGE',7,'p_RIDGE','parser.py',710),
  ('K_MEANS -> k_means lParenthesis id comma VARCONSTAUX rParenthesis semicolon','K_MEANS',7,'p_K_MEANS','parser.py',715),
  ('MINI_BATCH_MEANS -> mini_batch lParenthesis id comma VARCONSTAUX rParenthesis semicolon','MINI_BATCH_MEANS',7,'p_MINI_BATCH_MEANS','parser.py',720),
  ('LINEAR_REGRESSION -> linear_regression lParenthesis id comma VARCONSTAUX rParenthesis semicolon','LINEAR_REGRESSION',7,'p_LINEAR_REGRESSION','parser.py',725),
  ('TIME_SERIES_SPLIT -> t_series lParenthesis id comma id comma VARCONSTAUX rParenthesis semicolon','TIME_SERIES_SPLIT',9,'p_TIME_SERIES_SPLIT','parser.py',730),
  ('MEAN_ABSOLUTE_ERROR -> mean_abs_err lParenthesis id comma id rParenthesis semicolon','MEAN_ABSOLUTE_ERROR',7,'p_MEAN_ABSOLUTE_ERROR','parser.py',735),
  ('MEAN_SQUARED_ERROR -> mean_sqr_err lParenthesis id comma id rParenthesis semicolon','MEAN_SQUARED_ERROR',7,'p_MEAN_SQUARED_ERROR','parser.py',740),
  ('MEDIAN_ABSOLUTE_ERROR -> median_abs_err lParenthesis id comma id rParenthesis semicolon','MEDIAN_ABSOLUTE_ERROR',7,'p_MEDIAN_ABSOLUTE_ERROR','parser.py',745),
  ('MEAN -> mean lParenthesis id rParenthesis semicolon','MEAN',5,'p_MEAN','parser.py',750),
  ('MODE -> mode lParenthesis id rParenthesis semicolon','MODE',5,'p_MODE','parser.py',755),
  ('MEDIAN -> median lParenthesis id rParenthesis semicolon','MEDIAN',5,'p_MEDIAN','parser.py',760),
  ('FREQUENCY -> freq lParenthesis id rParenthesis semicolon','FREQUENCY',5,'p_FREQUENCY','parser.py',765),
  ('VARIANCE -> variance lParenthesis id rParenthesis semicolon','VARIANCE',5,'p_VARIANCE','parser.py',770),
  ('STANDARD_DEVIATION -> stddev lParenthesis id rParenthesis semicolon','STANDARD_DEVIATION',5,'p_STANDARD_DEVIATION','parser.py',775),
  ('SKEWNESS -> skew lParenthesis id rParenthesis semicolon','SKEWNESS',5,'p_SKEWNESS','parser.py',780),
  ('KURTOSI -> kurt lParenthesis id rParenthesis semicolon','KURTOSI',5,'p_KURTOSI','parser.py',785),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',790),
  ('START_FUNCTION -> empty','START_FUNCTION',1,'p_START_FUNCTION','parser.py',835),
  ('SAVE_TYPE -> empty','SAVE_TYPE',1,'p_SAVE_TYPE','parser.py',852),
  ('SAVE_VAR -> empty','SAVE_VAR',1,'p_SAVE_VAR','parser.py',862),
  ('SAVE_ASSIGNED_VAR -> empty','SAVE_ASSIGNED_VAR',1,'p_SAVE_ASSIGNED_VAR','parser.py',883),
  ('SAVE_ASSIGNED_VAR_BOOL -> empty','SAVE_ASSIGNED_VAR_BOOL',1,'p_SAVE_ASSIGNED_VAR_BOOL','parser.py',912),
  ('SAVE_PARAM -> empty','SAVE_PARAM',1,'p_SAVE_PARAM','parser.py',956),
  ('INCREMENT_PARAM_COUNTER -> empty','INCREMENT_PARAM_COUNTER',1,'p_INCREMENT_PARAM_COUNTER','parser.py',1022),
  ('SAVE_COUNTER_PARAM -> empty','SAVE_COUNTER_PARAM',1,'p_SAVE_COUNTER_PARAM','parser.py',1032),
  ('SAVE_COUNTER_QUAD -> empty','SAVE_COUNTER_QUAD',1,'p_SAVE_COUNTER_QUAD','parser.py',1043),
  ('END_PROCEDURE -> empty','END_PROCEDURE',1,'p_END_PROCEDURE','parser.py',1053),
  ('SAVE_PARAM_TYPE -> empty','SAVE_PARAM_TYPE',1,'p_SAVE_PARAM_TYPE','parser.py',1071),
  ('VALIDATE_FUNCTION_NAME -> empty','VALIDATE_FUNCTION_NAME',1,'p_VALIDATE_FUNCTION_NAME','parser.py',1080),
  ('ERA -> empty','ERA',1,'p_ERA','parser.py',1096),
  ('VALIDATE_PARAMETER -> empty','VALIDATE_PARAMETER',1,'p_VALIDATE_PARAMETER','parser.py',1115),
  ('VALIDATE_METHOD_CALL -> empty','VALIDATE_METHOD_CALL',1,'p_VALIDATE_METHOD_CALL','parser.py',1140),
  ('PUSH_STACK_OPERANDS -> empty','PUSH_STACK_OPERANDS',1,'p_PUSH_STACK_OPERANDS','parser.py',1174),
  ('PUSH_STACK_OPERANDS_CONSTANT -> empty','PUSH_STACK_OPERANDS_CONSTANT',1,'p_PUSH_STACK_OPERANDS_CONSTANT','parser.py',1209),
  ('PUSH_STACK_OPERATORS -> empty','PUSH_STACK_OPERATORS',1,'p_PUSH_STACK_OPERATORS','parser.py',1249),
  ('POP_STACK_OPERATORS -> empty','POP_STACK_OPERATORS',1,'p_POP_STACK_OPERATORS','parser.py',1259),
  ('SOLVE_OPERATION_SUM_MINUS -> empty','SOLVE_OPERATION_SUM_MINUS',1,'p_SOLVE_OPERATION_SUM_MINUS','parser.py',1325),
  ('SOLVE_OPERATION_TIMES_DIVIDE -> empty','SOLVE_OPERATION_TIMES_DIVIDE',1,'p_SOLVE_OPERATION_TIMES_DIVIDE','parser.py',1338),
  ('SOLVE_OPERATION_RELATIONSHIP -> empty','SOLVE_OPERATION_RELATIONSHIP',1,'p_SOLVE_OPERATION_RELATIONSHIP','parser.py',1351),
  ('SOLVE_OPERATION_LOGIC -> empty','SOLVE_OPERATION_LOGIC',1,'p_SOLVE_OPERATION_LOGIC','parser.py',1364),
  ('SOLVE_OPERATION_ASSIGNMENT -> empty','SOLVE_OPERATION_ASSIGNMENT',1,'p_SOLVE_OPERATION_ASSIGNMENT','parser.py',1403),
  ('GENERATE_GOTOF_CONDITIONAL -> empty','GENERATE_GOTOF_CONDITIONAL',1,'p_GENERATE_GOTOF_CONDITIONAL','parser.py',1429),
  ('SOLVE_OPERATION_CONDITIONAL -> empty','SOLVE_OPERATION_CONDITIONAL',1,'p_SOLVE_OPERATION_CONDITIONAL','parser.py',1456),
  ('GENERATE_GOTO_CONDITIONAL -> empty','GENERATE_GOTO_CONDITIONAL',1,'p_GENERATE_GOTO_CONDITIONAL','parser.py',1467),
  ('PUSH_STACK_JUMPS -> empty','PUSH_STACK_JUMPS',1,'p_PUSH_STACK_JUMPS','parser.py',1485),
  ('SOLVE_OPERATION_PRE_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_PRE_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_PRE_CONDITIONAL_LOOP','parser.py',1509),
  ('SOLVE_OPERATION_POST_CONDITIONAL_LOOP -> empty','SOLVE_OPERATION_POST_CONDITIONAL_LOOP',1,'p_SOLVE_OPERATION_POST_CONDITIONAL_LOOP','parser.py',1532),
  ('GENERATE_QUAD_PRINT -> empty','GENERATE_QUAD_PRINT',1,'p_GENERATE_QUAD_PRINT','parser.py',1553),
  ('PRINTQUADS -> empty','PRINTQUADS',1,'p_PRINTQUADS','parser.py',1568),
]
